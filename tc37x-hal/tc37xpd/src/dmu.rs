/*
*****************************************************************************
	*
	* Copyright (C) 2024 Infineon Technologies AG. All rights reserved.
	*
	* Infineon Technologies AG (Infineon) is supplying this software for use with
	* Infineon's microcontrollers. This file can be freely distributed within
	* development tools that are supporting such microcontrollers.
	*
	* THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
	* OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
	* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
	* INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
	* OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
	*
	******************************************************************************
*/
#![allow(clippy::identity_op)]
#![allow(clippy::module_inception)]
#![allow(clippy::derivable_impls)]
#[allow(unused_imports)]
use crate::common::sealed;
#[allow(unused_imports)]
use crate::common::*;
#[doc = r"DMU"]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct Dmu(pub(super) *mut u8);
unsafe impl core::marker::Send for Dmu {}
unsafe impl core::marker::Sync for Dmu {}
impl Dmu {
    #[doc = "Access Enable Register 0\n resetvalue={Application Reset:0x0FFFFFFFF}"]
    #[inline(always)]
    pub const fn hf_accen0(&self) -> crate::common::Reg<self::HfAccen0_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(252usize)) }
    }

    #[doc = "Cranking Control Register\n resetvalue={System Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_ccontrol(
        &self,
    ) -> crate::common::Reg<self::HfCcontrol_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(80usize)) }
    }

    #[doc = "CPU Flash Test Register\n resetvalue={Application Reset:0x2020200}"]
    #[inline(always)]
    pub const fn hf_cftest(&self) -> crate::common::Reg<self::HfCftest_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(224usize)) }
    }

    #[doc = "Clear Error Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_clre(&self) -> crate::common::Reg<self::HfClre_SPEC, crate::common::W> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(56usize)) }
    }

    #[doc = "Clear Flash Test Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_clrt(&self) -> crate::common::Reg<self::HfClrt_SPEC, crate::common::W> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(232usize)) }
    }

    #[doc = "Flash Confirm Status Register 0\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_confirm0(&self) -> crate::common::Reg<self::HfConfirm0_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(32usize)) }
    }

    #[doc = "Flash Confirm Status Register 1\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_confirm1(&self) -> crate::common::Reg<self::HfConfirm1_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(36usize)) }
    }

    #[doc = "Flash Confirm Status Register 2\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_confirm2(&self) -> crate::common::Reg<self::HfConfirm2_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(40usize)) }
    }

    #[doc = "Flash Control Register\n resetvalue={Application Reset:0x320}"]
    #[inline(always)]
    pub const fn hf_control(&self) -> crate::common::Reg<self::HfControl_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(20usize)) }
    }

    #[doc = "DFLASH Size Configuration Register\n resetvalue={Application Reset:0x200100,CFS Value:0x200040}"]
    #[inline(always)]
    pub const fn hf_dsize(&self) -> crate::common::Reg<self::HfDsize_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(160usize)) }
    }

    #[doc = "DFLASH Wait Cycle Register\n resetvalue={System Reset:0x4000B}"]
    #[inline(always)]
    pub const fn hf_dwait(&self) -> crate::common::Reg<self::HfDwait_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(108usize)) }
    }

    #[doc = "DF0 ECC Control Register\n resetvalue={Application Reset:0x0C0000000}"]
    #[inline(always)]
    pub const fn hf_eccc(&self) -> crate::common::Reg<self::HfEccc_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(72usize)) }
    }

    #[doc = "DF0 ECC Read Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_eccr(&self) -> crate::common::Reg<self::HfEccr_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(64usize)) }
    }

    #[doc = "DF0 ECC Status Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_eccs(&self) -> crate::common::Reg<self::HfEccs_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(68usize)) }
    }

    #[doc = "DF0 ECC Write Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_eccw(&self) -> crate::common::Reg<self::HfEccw_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(76usize)) }
    }

    #[doc = "Enable Error Interrupt Control Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_eer(&self) -> crate::common::Reg<self::HfEer_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(48usize)) }
    }

    #[doc = "Error Status Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_errsr(&self) -> crate::common::Reg<self::HfErrsr_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(52usize)) }
    }

    #[doc = "General Flash Test Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_gftest(&self) -> crate::common::Reg<self::HfGftest_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(228usize)) }
    }

    #[doc = "Module Identification Register\n resetvalue={Application Reset:0x0E7C000}"]
    #[inline(always)]
    pub const fn hf_id(&self) -> crate::common::Reg<self::HfId_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(8usize)) }
    }

    #[doc = "Margin Control Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_margin(&self) -> crate::common::Reg<self::HfMargin_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(244usize)) }
    }

    #[doc = "Flash Operation Register\n resetvalue={System Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_operation(
        &self,
    ) -> crate::common::Reg<self::HfOperation_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(24usize)) }
    }

    #[doc = "Power Control Register\n resetvalue={Application Reset:0x30000}"]
    #[inline(always)]
    pub const fn hf_pcontrol(
        &self,
    ) -> crate::common::Reg<self::HfPcontrol_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(100usize)) }
    }

    #[doc = "Debug Interface Protection Configuration\n resetvalue={Application Reset:0x100,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hf_procondbg(
        &self,
    ) -> crate::common::Reg<self::HfProcondbg_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(144usize)) }
    }

    #[doc = "DFLASH Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hf_procondf(&self) -> crate::common::Reg<self::HfProcondf_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(136usize)) }
    }

    #[doc = "DF0 Infineon Mode Control\n resetvalue={System Reset:0x0,CFS Value:0x300}"]
    #[inline(always)]
    pub const fn hf_proconifx(
        &self,
    ) -> crate::common::Reg<self::HfProconifx_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(112usize)) }
    }

    #[doc = "PFLASH Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hf_proconpf(&self) -> crate::common::Reg<self::HfProconpf_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(128usize)) }
    }

    #[doc = "RAM Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hf_proconram(
        &self,
    ) -> crate::common::Reg<self::HfProconram_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(140usize)) }
    }

    #[doc = "Tuning Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hf_procontp(&self) -> crate::common::Reg<self::HfProcontp_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(132usize)) }
    }

    #[doc = "DF0 User Mode Control\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hf_proconusr(
        &self,
    ) -> crate::common::Reg<self::HfProconusr_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(116usize)) }
    }

    #[doc = "Flash Protection Status Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_protect(&self) -> crate::common::Reg<self::HfProtect_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(28usize)) }
    }

    #[doc = "PFLASH Bank 0 Size Configuration Register\n resetvalue={Application Reset:0x0C0,CFS Value:0x0C0,CFS Value:0x0C0,CFS Value:0x0,CFS Value:0x0,CFS Value:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hf_psizep(
        &self,
    ) -> [crate::common::Reg<self::HfPsizEp_SPEC, crate::common::RW>; 2] {
        unsafe {
            [
                crate::common::Reg::from_ptr(self.0.add(0xb0usize + 0x0usize)),
                crate::common::Reg::from_ptr(self.0.add(0xb0usize + 0x4usize)),
            ]
        }
    }

    #[doc = "Power Status Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_pstatus(&self) -> crate::common::Reg<self::HfPstatus_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(96usize)) }
    }

    #[doc = "PFLASH Wait Cycle Register\n resetvalue={System Reset:0x716040B}"]
    #[inline(always)]
    pub const fn hf_pwait(&self) -> crate::common::Reg<self::HfPwait_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(104usize)) }
    }

    #[doc = "Flash Status Register\n resetvalue={Application Reset:0x0FF}"]
    #[inline(always)]
    pub const fn hf_status(&self) -> crate::common::Reg<self::HfStatus_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(16usize)) }
    }

    #[doc = "Suspend Control Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn hf_suspend(&self) -> crate::common::Reg<self::HfSuspend_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(240usize)) }
    }

    #[doc = "HSM Clear Error Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn sf_clre(&self) -> crate::common::Reg<self::SfClre_SPEC, crate::common::W> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131128usize)) }
    }

    #[doc = "HSM Flash Configuration Register\n resetvalue={Application Reset:0x1}"]
    #[inline(always)]
    pub const fn sf_control(&self) -> crate::common::Reg<self::SfControl_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131092usize)) }
    }

    #[doc = "HSM DF1 ECC Control Register\n resetvalue={Application Reset:0x0C0000000}"]
    #[inline(always)]
    pub const fn sf_eccc(&self) -> crate::common::Reg<self::SfEccc_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131144usize)) }
    }

    #[doc = "HSM DF1 ECC Read Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn sf_eccr(&self) -> crate::common::Reg<self::SfEccr_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131136usize)) }
    }

    #[doc = "HSM DF1 ECC Status Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn sf_eccs(&self) -> crate::common::Reg<self::SfEccs_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131140usize)) }
    }

    #[doc = "HSM DF1 ECC Write Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn sf_eccw(&self) -> crate::common::Reg<self::SfEccw_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131148usize)) }
    }

    #[doc = "HSM Enable Error Interrupt Control Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn sf_eer(&self) -> crate::common::Reg<self::SfEer_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131120usize)) }
    }

    #[doc = "HSM Error Status Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn sf_errsr(&self) -> crate::common::Reg<self::SfErrsr_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131124usize)) }
    }

    #[doc = "HSM DF1 Margin Control Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn sf_margin(&self) -> crate::common::Reg<self::SfMargin_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131308usize)) }
    }

    #[doc = "HSM Flash Operation Register\n resetvalue={System Reset:0x0}"]
    #[inline(always)]
    pub const fn sf_operation(
        &self,
    ) -> crate::common::Reg<self::SfOperation_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131096usize)) }
    }

    #[doc = "HSM DF1 Infineon Mode Control\n resetvalue={System Reset:0x0,CFS Value:0x300}"]
    #[inline(always)]
    pub const fn sf_proconifx(
        &self,
    ) -> crate::common::Reg<self::SfProconifx_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131184usize)) }
    }

    #[doc = "HSM DF1 User Mode Control\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn sf_proconusr(
        &self,
    ) -> crate::common::Reg<self::SfProconusr_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131188usize)) }
    }

    #[doc = "HSM Flash Status Register\n resetvalue={Application Reset:0x2}"]
    #[inline(always)]
    pub const fn sf_status(&self) -> crate::common::Reg<self::SfStatus_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131088usize)) }
    }

    #[doc = "HSM Suspend Control Register\n resetvalue={Application Reset:0x0}"]
    #[inline(always)]
    pub const fn sf_suspend(&self) -> crate::common::Reg<self::SfSuspend_SPEC, crate::common::RW> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(131304usize)) }
    }

    #[doc = "HSM Interface Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn sp_proconhsm(
        &self,
    ) -> crate::common::Reg<self::SpProconhsm_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(196672usize)) }
    }

    #[doc = "HSM Code Boot Sector\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn sp_proconhsmcbs(
        &self,
    ) -> crate::common::Reg<self::SpProconhsmcbs_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(196612usize)) }
    }

    #[doc = "HSM Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn sp_proconhsmcfg(
        &self,
    ) -> crate::common::Reg<self::SpProconhsmcfg_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(196608usize)) }
    }

    #[doc = "HSM Code OTP Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn sp_proconhsmcotp0(
        &self,
    ) -> crate::common::Reg<self::SpProconhsmcotp0_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(196624usize)) }
    }

    #[doc = "HSM Code OTP Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn sp_proconhsmcotp1(
        &self,
    ) -> crate::common::Reg<self::SpProconhsmcotp1_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(196628usize)) }
    }

    #[doc = "HSM Code Exclusive Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn sp_proconhsmcx0(
        &self,
    ) -> crate::common::Reg<self::SpProconhsmcx0_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(196616usize)) }
    }

    #[doc = "HSM Code Exclusive Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn sp_proconhsmcx1(
        &self,
    ) -> crate::common::Reg<self::SpProconhsmcx1_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(196620usize)) }
    }
    #[doc = "HP"]
    #[inline(always)]
    pub fn hp(self) -> [self::Hp; 2] {
        unsafe {
            [
                self::Hp(self.0.add(0x10000usize + 0x0usize)),
                self::Hp(self.0.add(0x10000usize + 0x100usize)),
            ]
        }
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfAccen0_SPEC;
impl crate::sealed::RegSpec for HfAccen0_SPEC {
    type DataType = u32;
}
#[doc = "Access Enable Register 0\n resetvalue={Application Reset:0x0FFFFFFFF}"]
pub type HfAccen0 = crate::RegValueT<HfAccen0_SPEC>;

impl HfAccen0 {
    #[doc = "Access Enable for Master TAG ID 2   EN2. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en0(
        self,
    ) -> crate::common::RegisterField<0, 0x1, 1, 0, hf_accen0::En0, HfAccen0_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<0,0x1,1,0,hf_accen0::En0, HfAccen0_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Access Enable for Master TAG ID 2   EN2. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en1(
        self,
    ) -> crate::common::RegisterField<1, 0x1, 1, 0, hf_accen0::En1, HfAccen0_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<1,0x1,1,0,hf_accen0::En1, HfAccen0_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Access Enable for Master TAG ID 2   EN2. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en2(
        self,
    ) -> crate::common::RegisterField<2, 0x1, 1, 0, hf_accen0::En2, HfAccen0_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<2,0x1,1,0,hf_accen0::En2, HfAccen0_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Access Enable for Master TAG ID 3   EN3. This bit enables write access to the module kernel addresses for transactions with the Master TAG ID 3"]
    #[inline(always)]
    pub fn en3(
        self,
    ) -> crate::common::RegisterField<3, 0x1, 1, 0, hf_accen0::En3, HfAccen0_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<3,0x1,1,0,hf_accen0::En3, HfAccen0_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en4(
        self,
    ) -> crate::common::RegisterField<4, 0x1, 1, 0, hf_accen0::En4, HfAccen0_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<4,0x1,1,0,hf_accen0::En4, HfAccen0_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en5(
        self,
    ) -> crate::common::RegisterField<5, 0x1, 1, 0, hf_accen0::En5, HfAccen0_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<5,0x1,1,0,hf_accen0::En5, HfAccen0_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en6(
        self,
    ) -> crate::common::RegisterField<6, 0x1, 1, 0, hf_accen0::En6, HfAccen0_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<6,0x1,1,0,hf_accen0::En6, HfAccen0_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en7(
        self,
    ) -> crate::common::RegisterField<7, 0x1, 1, 0, hf_accen0::En7, HfAccen0_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<7,0x1,1,0,hf_accen0::En7, HfAccen0_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en8(
        self,
    ) -> crate::common::RegisterField<8, 0x1, 1, 0, hf_accen0::En8, HfAccen0_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<8,0x1,1,0,hf_accen0::En8, HfAccen0_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en9(
        self,
    ) -> crate::common::RegisterField<9, 0x1, 1, 0, hf_accen0::En9, HfAccen0_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<9,0x1,1,0,hf_accen0::En9, HfAccen0_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en10(
        self,
    ) -> crate::common::RegisterField<
        10,
        0x1,
        1,
        0,
        hf_accen0::En10,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            10,
            0x1,
            1,
            0,
            hf_accen0::En10,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en11(
        self,
    ) -> crate::common::RegisterField<
        11,
        0x1,
        1,
        0,
        hf_accen0::En11,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            11,
            0x1,
            1,
            0,
            hf_accen0::En11,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en12(
        self,
    ) -> crate::common::RegisterField<
        12,
        0x1,
        1,
        0,
        hf_accen0::En12,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            12,
            0x1,
            1,
            0,
            hf_accen0::En12,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en13(
        self,
    ) -> crate::common::RegisterField<
        13,
        0x1,
        1,
        0,
        hf_accen0::En13,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            13,
            0x1,
            1,
            0,
            hf_accen0::En13,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en14(
        self,
    ) -> crate::common::RegisterField<
        14,
        0x1,
        1,
        0,
        hf_accen0::En14,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            14,
            0x1,
            1,
            0,
            hf_accen0::En14,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en15(
        self,
    ) -> crate::common::RegisterField<
        15,
        0x1,
        1,
        0,
        hf_accen0::En15,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            15,
            0x1,
            1,
            0,
            hf_accen0::En15,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en16(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x1,
        1,
        0,
        hf_accen0::En16,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            16,
            0x1,
            1,
            0,
            hf_accen0::En16,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en17(
        self,
    ) -> crate::common::RegisterField<
        17,
        0x1,
        1,
        0,
        hf_accen0::En17,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            17,
            0x1,
            1,
            0,
            hf_accen0::En17,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en18(
        self,
    ) -> crate::common::RegisterField<
        18,
        0x1,
        1,
        0,
        hf_accen0::En18,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            18,
            0x1,
            1,
            0,
            hf_accen0::En18,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en19(
        self,
    ) -> crate::common::RegisterField<
        19,
        0x1,
        1,
        0,
        hf_accen0::En19,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            19,
            0x1,
            1,
            0,
            hf_accen0::En19,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en20(
        self,
    ) -> crate::common::RegisterField<
        20,
        0x1,
        1,
        0,
        hf_accen0::En20,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            20,
            0x1,
            1,
            0,
            hf_accen0::En20,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en21(
        self,
    ) -> crate::common::RegisterField<
        21,
        0x1,
        1,
        0,
        hf_accen0::En21,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            21,
            0x1,
            1,
            0,
            hf_accen0::En21,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en22(
        self,
    ) -> crate::common::RegisterField<
        22,
        0x1,
        1,
        0,
        hf_accen0::En22,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            22,
            0x1,
            1,
            0,
            hf_accen0::En22,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en23(
        self,
    ) -> crate::common::RegisterField<
        23,
        0x1,
        1,
        0,
        hf_accen0::En23,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            23,
            0x1,
            1,
            0,
            hf_accen0::En23,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en24(
        self,
    ) -> crate::common::RegisterField<
        24,
        0x1,
        1,
        0,
        hf_accen0::En24,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            24,
            0x1,
            1,
            0,
            hf_accen0::En24,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en25(
        self,
    ) -> crate::common::RegisterField<
        25,
        0x1,
        1,
        0,
        hf_accen0::En25,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            25,
            0x1,
            1,
            0,
            hf_accen0::En25,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en26(
        self,
    ) -> crate::common::RegisterField<
        26,
        0x1,
        1,
        0,
        hf_accen0::En26,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            26,
            0x1,
            1,
            0,
            hf_accen0::En26,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 27   EN27. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID y"]
    #[inline(always)]
    pub fn en27(
        self,
    ) -> crate::common::RegisterField<
        27,
        0x1,
        1,
        0,
        hf_accen0::En27,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            27,
            0x1,
            1,
            0,
            hf_accen0::En27,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 28   EN28. This bit enables write access to the module kernel addresses for transactions with the Master TAG ID 28"]
    #[inline(always)]
    pub fn en28(
        self,
    ) -> crate::common::RegisterField<
        28,
        0x1,
        1,
        0,
        hf_accen0::En28,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            28,
            0x1,
            1,
            0,
            hf_accen0::En28,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 29   EN29. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID 29"]
    #[inline(always)]
    pub fn en29(
        self,
    ) -> crate::common::RegisterField<
        29,
        0x1,
        1,
        0,
        hf_accen0::En29,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            29,
            0x1,
            1,
            0,
            hf_accen0::En29,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 30   EN30. This bit enables write access to the module kernel addresses for transactions with the Master TAG ID 30"]
    #[inline(always)]
    pub fn en30(
        self,
    ) -> crate::common::RegisterField<
        30,
        0x1,
        1,
        0,
        hf_accen0::En30,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            30,
            0x1,
            1,
            0,
            hf_accen0::En30,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Access Enable for Master TAG ID 31   EN31. This bit enables read   write access to the module kernel addresses for transactions with the Master TAG ID 30"]
    #[inline(always)]
    pub fn en31(
        self,
    ) -> crate::common::RegisterField<
        31,
        0x1,
        1,
        0,
        hf_accen0::En31,
        HfAccen0_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            31,
            0x1,
            1,
            0,
            hf_accen0::En31,
            HfAccen0_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfAccen0 {
    #[inline(always)]
    fn default() -> HfAccen0 {
        <crate::RegValueT<HfAccen0_SPEC> as RegisterValue<_>>::new(4294967295)
    }
}
pub mod hf_accen0 {
    pub struct En0_SPEC;
    pub type En0 = crate::EnumBitfieldStruct<u8, En0_SPEC>;
    impl En0 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En1_SPEC;
    pub type En1 = crate::EnumBitfieldStruct<u8, En1_SPEC>;
    impl En1 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En2_SPEC;
    pub type En2 = crate::EnumBitfieldStruct<u8, En2_SPEC>;
    impl En2 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En3_SPEC;
    pub type En3 = crate::EnumBitfieldStruct<u8, En3_SPEC>;
    impl En3 {
        #[doc = "0 Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En4_SPEC;
    pub type En4 = crate::EnumBitfieldStruct<u8, En4_SPEC>;
    impl En4 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En5_SPEC;
    pub type En5 = crate::EnumBitfieldStruct<u8, En5_SPEC>;
    impl En5 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En6_SPEC;
    pub type En6 = crate::EnumBitfieldStruct<u8, En6_SPEC>;
    impl En6 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En7_SPEC;
    pub type En7 = crate::EnumBitfieldStruct<u8, En7_SPEC>;
    impl En7 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En8_SPEC;
    pub type En8 = crate::EnumBitfieldStruct<u8, En8_SPEC>;
    impl En8 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En9_SPEC;
    pub type En9 = crate::EnumBitfieldStruct<u8, En9_SPEC>;
    impl En9 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En10_SPEC;
    pub type En10 = crate::EnumBitfieldStruct<u8, En10_SPEC>;
    impl En10 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En11_SPEC;
    pub type En11 = crate::EnumBitfieldStruct<u8, En11_SPEC>;
    impl En11 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En12_SPEC;
    pub type En12 = crate::EnumBitfieldStruct<u8, En12_SPEC>;
    impl En12 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En13_SPEC;
    pub type En13 = crate::EnumBitfieldStruct<u8, En13_SPEC>;
    impl En13 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En14_SPEC;
    pub type En14 = crate::EnumBitfieldStruct<u8, En14_SPEC>;
    impl En14 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En15_SPEC;
    pub type En15 = crate::EnumBitfieldStruct<u8, En15_SPEC>;
    impl En15 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En16_SPEC;
    pub type En16 = crate::EnumBitfieldStruct<u8, En16_SPEC>;
    impl En16 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En17_SPEC;
    pub type En17 = crate::EnumBitfieldStruct<u8, En17_SPEC>;
    impl En17 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En18_SPEC;
    pub type En18 = crate::EnumBitfieldStruct<u8, En18_SPEC>;
    impl En18 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En19_SPEC;
    pub type En19 = crate::EnumBitfieldStruct<u8, En19_SPEC>;
    impl En19 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En20_SPEC;
    pub type En20 = crate::EnumBitfieldStruct<u8, En20_SPEC>;
    impl En20 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En21_SPEC;
    pub type En21 = crate::EnumBitfieldStruct<u8, En21_SPEC>;
    impl En21 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En22_SPEC;
    pub type En22 = crate::EnumBitfieldStruct<u8, En22_SPEC>;
    impl En22 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En23_SPEC;
    pub type En23 = crate::EnumBitfieldStruct<u8, En23_SPEC>;
    impl En23 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En24_SPEC;
    pub type En24 = crate::EnumBitfieldStruct<u8, En24_SPEC>;
    impl En24 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En25_SPEC;
    pub type En25 = crate::EnumBitfieldStruct<u8, En25_SPEC>;
    impl En25 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En26_SPEC;
    pub type En26 = crate::EnumBitfieldStruct<u8, En26_SPEC>;
    impl En26 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En27_SPEC;
    pub type En27 = crate::EnumBitfieldStruct<u8, En27_SPEC>;
    impl En27 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En28_SPEC;
    pub type En28 = crate::EnumBitfieldStruct<u8, En28_SPEC>;
    impl En28 {
        #[doc = "0 Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En29_SPEC;
    pub type En29 = crate::EnumBitfieldStruct<u8, En29_SPEC>;
    impl En29 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En30_SPEC;
    pub type En30 = crate::EnumBitfieldStruct<u8, En30_SPEC>;
    impl En30 {
        #[doc = "0 Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct En31_SPEC;
    pub type En31 = crate::EnumBitfieldStruct<u8, En31_SPEC>;
    impl En31 {
        #[doc = "0 Read   Write access will not be executed"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read   Write access will be executed"]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfCcontrol_SPEC;
impl crate::sealed::RegSpec for HfCcontrol_SPEC {
    type DataType = u32;
}
#[doc = "Cranking Control Register\n resetvalue={System Reset:0x0}"]
pub type HfCcontrol = crate::RegValueT<HfCcontrol_SPEC>;

impl HfCcontrol {
    #[doc = "Cranking Mode Control   CRANKING. This bit field determins Cranking mode."]
    #[inline(always)]
    pub fn cranking(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        hf_ccontrol::Cranking,
        HfCcontrol_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            hf_ccontrol::Cranking,
            HfCcontrol_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfCcontrol {
    #[inline(always)]
    fn default() -> HfCcontrol {
        <crate::RegValueT<HfCcontrol_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_ccontrol {
    pub struct Cranking_SPEC;
    pub type Cranking = crate::EnumBitfieldStruct<u8, Cranking_SPEC>;
    impl Cranking {
        #[doc = "00 Cranking mode not selected"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Cranking mode not selected"]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Cranking mode not selected"]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Cranking mode selected"]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfCftest_SPEC;
impl crate::sealed::RegSpec for HfCftest_SPEC {
    type DataType = u32;
}
#[doc = "CPU Flash Test Register\n resetvalue={Application Reset:0x2020200}"]
pub type HfCftest = crate::RegValueT<HfCftest_SPEC>;

impl HfCftest {
    #[doc = "CPU Flash Test Mode   CFTM. This bit is also used to gate HF STATUS.FABUSY. Reset by hardware when DMU HF CLRT .CLR is written to 11 ."]
    #[inline(always)]
    pub fn cftm(
        self,
    ) -> crate::common::RegisterField<0, 0x1, 1, 0, hf_cftest::Cftm, HfCftest_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<0,0x1,1,0,hf_cftest::Cftm, HfCftest_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Enable Configuration Sector Access from CPU   CONFSE. Writing enabled with DMU HF CFTEST .CFTM   1 . Reset by hardware to 10 when DMU HF CLRT .CLR is written to 11 ."]
    #[inline(always)]
    pub fn confse(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x3,
        1,
        0,
        hf_cftest::Confse,
        HfCftest_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            8,
            0x3,
            1,
            0,
            hf_cftest::Confse,
            HfCftest_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Test Mode Erase All  TMEA    TMEA. A fast erase of all banks in parallel. Reset by hardware to 10 when DMU HF CLRT .CLR is written to 11 or on completion of TMEA."]
    #[inline(always)]
    pub fn tmea(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x3,
        1,
        0,
        hf_cftest::Tmea,
        HfCftest_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            16,
            0x3,
            1,
            0,
            hf_cftest::Tmea,
            HfCftest_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "User Data Invalidation Program  UDIP    UDIP. Reset by hardware to 10 when DMU HF CLRT .CLR is written to 11 or on completion of UDIP."]
    #[inline(always)]
    pub fn udip(
        self,
    ) -> crate::common::RegisterField<
        24,
        0x3,
        1,
        0,
        hf_cftest::Udip,
        HfCftest_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            24,
            0x3,
            1,
            0,
            hf_cftest::Udip,
            HfCftest_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfCftest {
    #[inline(always)]
    fn default() -> HfCftest {
        <crate::RegValueT<HfCftest_SPEC> as RegisterValue<_>>::new(33686016)
    }
}
pub mod hf_cftest {
    pub struct Cftm_SPEC;
    pub type Cftm = crate::EnumBitfieldStruct<u8, Cftm_SPEC>;
    impl Cftm {
        #[doc = "0 CPU Flash Test Mode is not enabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 CPU Flash Test Mode is correctly enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Confse_SPEC;
    pub type Confse = crate::EnumBitfieldStruct<u8, Confse_SPEC>;
    impl Confse {
        #[doc = "00 Locked CFS is locked."]
        pub const LOCKED_0: Self = Self::new(0);
        #[doc = "01 Enabled Access by the Flash Test Program to the CFS is enabled."]
        pub const ENABLED_1: Self = Self::new(1);
        #[doc = "10 Locked CFS is locked."]
        pub const LOCKED_2: Self = Self::new(2);
        #[doc = "11 Locked CFS is locked."]
        pub const LOCKED_3: Self = Self::new(3);
    }
    pub struct Tmea_SPEC;
    pub type Tmea = crate::EnumBitfieldStruct<u8, Tmea_SPEC>;
    impl Tmea {
        #[doc = "00 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Execute erase of all sectors of all Flash banks."]
        pub const EXECUTE_1: Self = Self::new(1);
        #[doc = "10 No action."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 No action."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Udip_SPEC;
    pub type Udip = crate::EnumBitfieldStruct<u8, Udip_SPEC>;
    impl Udip {
        #[doc = "00 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Execute over program all user data sectors of all Flash banks  excludes CFS ."]
        pub const EXECUTE_1: Self = Self::new(1);
        #[doc = "10 No action."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 No action."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfClre_SPEC;
impl crate::sealed::RegSpec for HfClre_SPEC {
    type DataType = u32;
}
#[doc = "Clear Error Register\n resetvalue={Application Reset:0x0}"]
pub type HfClre = crate::RegValueT<HfClre_SPEC>;

impl HfClre {
    #[doc = "Clear Command Sequence Error   CSQER"]
    #[inline(always)]
    pub fn csqer(
        self,
    ) -> crate::common::RegisterField<1, 0x1, 1, 0, hf_clre::Csqer, HfClre_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<1,0x1,1,0,hf_clre::Csqer, HfClre_SPEC,crate::common::W>::from_register(self,0)
    }
    #[doc = "Clear Protection Error   CPROER"]
    #[inline(always)]
    pub fn cproer(
        self,
    ) -> crate::common::RegisterField<2, 0x1, 1, 0, hf_clre::Cproer, HfClre_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<2,0x1,1,0,hf_clre::Cproer, HfClre_SPEC,crate::common::W>::from_register(self,0)
    }
    #[doc = "Clear Program Verify Error   CPVER"]
    #[inline(always)]
    pub fn cpver(
        self,
    ) -> crate::common::RegisterField<3, 0x1, 1, 0, hf_clre::Cpver, HfClre_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<3,0x1,1,0,hf_clre::Cpver, HfClre_SPEC,crate::common::W>::from_register(self,0)
    }
    #[doc = "Clear Erase Verify Error   CEVER"]
    #[inline(always)]
    pub fn cever(
        self,
    ) -> crate::common::RegisterField<4, 0x1, 1, 0, hf_clre::Cever, HfClre_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<4,0x1,1,0,hf_clre::Cever, HfClre_SPEC,crate::common::W>::from_register(self,0)
    }
    #[doc = "Clear SRI Bus Address ECC Error   CADER"]
    #[inline(always)]
    pub fn cader(
        self,
    ) -> crate::common::RegisterField<5, 0x1, 1, 0, hf_clre::Cader, HfClre_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<5,0x1,1,0,hf_clre::Cader, HfClre_SPEC,crate::common::W>::from_register(self,0)
    }
}
impl core::default::Default for HfClre {
    #[inline(always)]
    fn default() -> HfClre {
        <crate::RegValueT<HfClre_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_clre {
    pub struct Csqer_SPEC;
    pub type Csqer = crate::EnumBitfieldStruct<u8, Csqer_SPEC>;
    impl Csqer {
        #[doc = "0 No action"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear Command Sequence Error Flag DMU HF ERRSR .SQER"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cproer_SPEC;
    pub type Cproer = crate::EnumBitfieldStruct<u8, Cproer_SPEC>;
    impl Cproer {
        #[doc = "0 No action"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear Protection Error Flag DMU HF ERRSR .PROER"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cpver_SPEC;
    pub type Cpver = crate::EnumBitfieldStruct<u8, Cpver_SPEC>;
    impl Cpver {
        #[doc = "0 No action"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear Program Verify Error Flag DMU HF ERRSR .PVER"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cever_SPEC;
    pub type Cever = crate::EnumBitfieldStruct<u8, Cever_SPEC>;
    impl Cever {
        #[doc = "0 No action"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear Erase Verify Error Flag DMU HF ERRSR .EVER"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cader_SPEC;
    pub type Cader = crate::EnumBitfieldStruct<u8, Cader_SPEC>;
    impl Cader {
        #[doc = "0 No action"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear SRI Bus Address ECC Error Flag DMU HF ERRSR .ADER"]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfClrt_SPEC;
impl crate::sealed::RegSpec for HfClrt_SPEC {
    type DataType = u32;
}
#[doc = "Clear Flash Test Register\n resetvalue={Application Reset:0x0}"]
pub type HfClrt = crate::RegValueT<HfClrt_SPEC>;

impl HfClrt {
    #[doc = "Clear Flash Test   CLR"]
    #[inline(always)]
    pub fn clr(
        self,
    ) -> crate::common::RegisterField<0, 0x3, 1, 0, hf_clrt::Clr, HfClrt_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<0,0x3,1,0,hf_clrt::Clr, HfClrt_SPEC,crate::common::W>::from_register(self,0)
    }
}
impl core::default::Default for HfClrt {
    #[inline(always)]
    fn default() -> HfClrt {
        <crate::RegValueT<HfClrt_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_clrt {
    pub struct Clr_SPEC;
    pub type Clr = crate::EnumBitfieldStruct<u8, Clr_SPEC>;
    impl Clr {
        #[doc = "00 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 No action."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 No action."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Clear the Flash Test."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfConfirm0_SPEC;
impl crate::sealed::RegSpec for HfConfirm0_SPEC {
    type DataType = u32;
}
#[doc = "Flash Confirm Status Register 0\n resetvalue={Application Reset:0x0}"]
pub type HfConfirm0 = crate::RegValueT<HfConfirm0_SPEC>;

impl HfConfirm0 {
    #[doc = "UCB BMHD0 ORIG Confirmation   PROINBMHD0O. This bit reflects the confirmed state of UCB BMHD0 ORIG."]
    #[inline(always)]
    pub fn proinbmhd0o(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        hf_confirm0::Proinbmhd0O,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            hf_confirm0::Proinbmhd0O,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB BMHD1 ORIG Confirmation   PROINBMHD1O. This bit reflects the confirmed state of UCB BMHD1 ORIG."]
    #[inline(always)]
    pub fn proinbmhd1o(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x3,
        1,
        0,
        hf_confirm0::Proinbmhd1O,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x3,
            1,
            0,
            hf_confirm0::Proinbmhd1O,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB BMHD2 ORIG Confirmation   PROINBMHD2O. This bit reflects the confirmed state of UCB BMHD2 ORIG."]
    #[inline(always)]
    pub fn proinbmhd2o(
        self,
    ) -> crate::common::RegisterField<
        4,
        0x3,
        1,
        0,
        hf_confirm0::Proinbmhd2O,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            4,
            0x3,
            1,
            0,
            hf_confirm0::Proinbmhd2O,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB BMHD3 ORIG Confirmation   PROINBMHD3O. This bit reflects the confirmed state of UCB BMHD3 ORIG."]
    #[inline(always)]
    pub fn proinbmhd3o(
        self,
    ) -> crate::common::RegisterField<
        6,
        0x3,
        1,
        0,
        hf_confirm0::Proinbmhd3O,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            6,
            0x3,
            1,
            0,
            hf_confirm0::Proinbmhd3O,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB USER Confirmation   PROINUSER. This bit reflects the confirmed state of UCB USER."]
    #[inline(always)]
    pub fn proinuser(
        self,
    ) -> crate::common::RegisterField<
        10,
        0x3,
        1,
        0,
        hf_confirm0::Proinuser,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            10,
            0x3,
            1,
            0,
            hf_confirm0::Proinuser,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB TEST Confirmation   PROINTEST. This bit reflects the confirmed state of UCB TEST."]
    #[inline(always)]
    pub fn prointest(
        self,
    ) -> crate::common::RegisterField<
        12,
        0x3,
        1,
        0,
        hf_confirm0::Prointest,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            12,
            0x3,
            1,
            0,
            hf_confirm0::Prointest,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB HSMCFG Confirmation   PROINHSMCFG. This bit reflects the confirmed state of UCB HSMCFG."]
    #[inline(always)]
    pub fn proinhsmcfg(
        self,
    ) -> crate::common::RegisterField<
        14,
        0x3,
        1,
        0,
        hf_confirm0::Proinhsmcfg,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            14,
            0x3,
            1,
            0,
            hf_confirm0::Proinhsmcfg,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB BMHD0 COPY Confirmation   PROINBMHD0C. This bit reflects the confirmed state of UCB BMHD0 COPY."]
    #[inline(always)]
    pub fn proinbmhd0c(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x3,
        1,
        0,
        hf_confirm0::Proinbmhd0C,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            16,
            0x3,
            1,
            0,
            hf_confirm0::Proinbmhd0C,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB BMHD1 COPY Confirmation   PROINBMHD1C. This bit reflects the confirmed state of UCB BMHD1 COPY."]
    #[inline(always)]
    pub fn proinbmhd1c(
        self,
    ) -> crate::common::RegisterField<
        18,
        0x3,
        1,
        0,
        hf_confirm0::Proinbmhd1C,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            18,
            0x3,
            1,
            0,
            hf_confirm0::Proinbmhd1C,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB BMHD2 COPY Confirmation   PROINBMHD2C. This bit reflects the confirmed state of UCB BMHD2 COPY."]
    #[inline(always)]
    pub fn proinbmhd2c(
        self,
    ) -> crate::common::RegisterField<
        20,
        0x3,
        1,
        0,
        hf_confirm0::Proinbmhd2C,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            20,
            0x3,
            1,
            0,
            hf_confirm0::Proinbmhd2C,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB BMHD3 COPY Confirmation   PROINBMHD3C. This bit reflects the confirmed state of UCB BMHD3 COPY."]
    #[inline(always)]
    pub fn proinbmhd3c(
        self,
    ) -> crate::common::RegisterField<
        22,
        0x3,
        1,
        0,
        hf_confirm0::Proinbmhd3C,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            22,
            0x3,
            1,
            0,
            hf_confirm0::Proinbmhd3C,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB REDSEC Confirmation   PROINREDSEC. This bit reflects the confirmed state of UCB REDSEC"]
    #[inline(always)]
    pub fn proinredsec(
        self,
    ) -> crate::common::RegisterField<
        24,
        0x3,
        1,
        0,
        hf_confirm0::Proinredsec,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            24,
            0x3,
            1,
            0,
            hf_confirm0::Proinredsec,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB RETEST Confirmation   PROINSRT. This bit reflects the confirmed state of UCB RETEST."]
    #[inline(always)]
    pub fn proinsrt(
        self,
    ) -> crate::common::RegisterField<
        30,
        0x3,
        1,
        0,
        hf_confirm0::Proinsrt,
        HfConfirm0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            30,
            0x3,
            1,
            0,
            hf_confirm0::Proinsrt,
            HfConfirm0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfConfirm0 {
    #[inline(always)]
    fn default() -> HfConfirm0 {
        <crate::RegValueT<HfConfirm0_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_confirm0 {
    pub struct Proinbmhd0O_SPEC;
    pub type Proinbmhd0O = crate::EnumBitfieldStruct<u8, Proinbmhd0O_SPEC>;
    impl Proinbmhd0O {
        #[doc = "00 UCB BMHD0 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB BMHD0 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB BMHD0 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB BMHD0 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinbmhd1O_SPEC;
    pub type Proinbmhd1O = crate::EnumBitfieldStruct<u8, Proinbmhd1O_SPEC>;
    impl Proinbmhd1O {
        #[doc = "00 UCB BMHD1 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB BMHD1 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB BMHD1 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB BMHD1 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinbmhd2O_SPEC;
    pub type Proinbmhd2O = crate::EnumBitfieldStruct<u8, Proinbmhd2O_SPEC>;
    impl Proinbmhd2O {
        #[doc = "00 UCB BMHD2 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB BMHD2 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB BMHD2 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB BMHD2 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinbmhd3O_SPEC;
    pub type Proinbmhd3O = crate::EnumBitfieldStruct<u8, Proinbmhd3O_SPEC>;
    impl Proinbmhd3O {
        #[doc = "00 UCB BMHD3 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB BMHD3 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB BMHD3 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB BMHD3 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinuser_SPEC;
    pub type Proinuser = crate::EnumBitfieldStruct<u8, Proinuser_SPEC>;
    impl Proinuser {
        #[doc = "00 UCB USER state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB USER state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB USER state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB USER state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Prointest_SPEC;
    pub type Prointest = crate::EnumBitfieldStruct<u8, Prointest_SPEC>;
    impl Prointest {
        #[doc = "00 UCB TEST state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB TEST state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB TEST state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB TEST state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinhsmcfg_SPEC;
    pub type Proinhsmcfg = crate::EnumBitfieldStruct<u8, Proinhsmcfg_SPEC>;
    impl Proinhsmcfg {
        #[doc = "00 UCB HSMCFG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB HSMCFG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB HSMCFG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB HSMCFG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinbmhd0C_SPEC;
    pub type Proinbmhd0C = crate::EnumBitfieldStruct<u8, Proinbmhd0C_SPEC>;
    impl Proinbmhd0C {
        #[doc = "00 UCB BMHD0 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB BMHD0 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB BMHD0 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB BMHD0 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinbmhd1C_SPEC;
    pub type Proinbmhd1C = crate::EnumBitfieldStruct<u8, Proinbmhd1C_SPEC>;
    impl Proinbmhd1C {
        #[doc = "00 UCB BMHD1 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB BMHD1 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB BMHD1 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB BMHD1 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinbmhd2C_SPEC;
    pub type Proinbmhd2C = crate::EnumBitfieldStruct<u8, Proinbmhd2C_SPEC>;
    impl Proinbmhd2C {
        #[doc = "00 UCB BMHD2 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB BMHD2 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB BMHD2 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB BMHD2 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinbmhd3C_SPEC;
    pub type Proinbmhd3C = crate::EnumBitfieldStruct<u8, Proinbmhd3C_SPEC>;
    impl Proinbmhd3C {
        #[doc = "00 UCB BMHD3 COPY        state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB BMHD3 COPY        state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB BMHD3 COPY        state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB BMHD3 COPY        state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinredsec_SPEC;
    pub type Proinredsec = crate::EnumBitfieldStruct<u8, Proinredsec_SPEC>;
    impl Proinredsec {
        #[doc = "00 UCB REDSEC        state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB REDSEC        state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB REDSEC        state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB REDSEC        state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinsrt_SPEC;
    pub type Proinsrt = crate::EnumBitfieldStruct<u8, Proinsrt_SPEC>;
    impl Proinsrt {
        #[doc = "00 UCB RETEST state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB RETEST state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB RETEST state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB RETEST state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfConfirm1_SPEC;
impl crate::sealed::RegSpec for HfConfirm1_SPEC {
    type DataType = u32;
}
#[doc = "Flash Confirm Status Register 1\n resetvalue={Application Reset:0x0}"]
pub type HfConfirm1 = crate::RegValueT<HfConfirm1_SPEC>;

impl HfConfirm1 {
    #[doc = "UCB PFLASH ORIG Confirmation   PROINPO. This bit reflects the confirmed state of UCB PFLASH ORIG."]
    #[inline(always)]
    pub fn proinpo(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        hf_confirm1::Proinpo,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            hf_confirm1::Proinpo,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB DFLASH ORIG Confirmation   PROINDO. This bit reflects the confirmed state of UCB DFLASH ORIG."]
    #[inline(always)]
    pub fn proindo(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x3,
        1,
        0,
        hf_confirm1::Proindo,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x3,
            1,
            0,
            hf_confirm1::Proindo,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB DBG ORIG Confirmation   PROINDBGO. This bit reflects the confirmed state of UCB DBG ORIG."]
    #[inline(always)]
    pub fn proindbgo(
        self,
    ) -> crate::common::RegisterField<
        4,
        0x3,
        1,
        0,
        hf_confirm1::Proindbgo,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            4,
            0x3,
            1,
            0,
            hf_confirm1::Proindbgo,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB HSM ORIG Confirmation   PROINHSMO. This bit reflects the confirmed state of UCB HSM ORIG."]
    #[inline(always)]
    pub fn proinhsmo(
        self,
    ) -> crate::common::RegisterField<
        6,
        0x3,
        1,
        0,
        hf_confirm1::Proinhsmo,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            6,
            0x3,
            1,
            0,
            hf_confirm1::Proinhsmo,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB HSMCOTP0 ORIG Protection   PROINHSMCOTP0O. This bit reflects the confirmed state of UCB HSMCOTP0 ORIG."]
    #[inline(always)]
    pub fn proinhsmcotp0o(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x3,
        1,
        0,
        hf_confirm1::Proinhsmcotp0O,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            8,
            0x3,
            1,
            0,
            hf_confirm1::Proinhsmcotp0O,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB HSMCOTP1 ORIG Protection   PROINHSMCOTP1O. This bit reflects the confirmed state of UCB HSMCOTP1 ORIG."]
    #[inline(always)]
    pub fn proinhsmcotp1o(
        self,
    ) -> crate::common::RegisterField<
        10,
        0x3,
        1,
        0,
        hf_confirm1::Proinhsmcotp1O,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            10,
            0x3,
            1,
            0,
            hf_confirm1::Proinhsmcotp1O,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB ECPRIO ORIG Confirmation   PROINECO. This bit reflects the confirmed state of UCB ECPRIO ORIG."]
    #[inline(always)]
    pub fn proineco(
        self,
    ) -> crate::common::RegisterField<
        12,
        0x3,
        1,
        0,
        hf_confirm1::Proineco,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            12,
            0x3,
            1,
            0,
            hf_confirm1::Proineco,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB PFLASH COPY Confirmation   PROINPC. This bit reflects the confirmed state of UCB PFLASH COPY."]
    #[inline(always)]
    pub fn proinpc(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x3,
        1,
        0,
        hf_confirm1::Proinpc,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            16,
            0x3,
            1,
            0,
            hf_confirm1::Proinpc,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB DFLASH COPY Confirmation   PROINDC. This bit reflects the confirmed state of UCB DFLASH COPY."]
    #[inline(always)]
    pub fn proindc(
        self,
    ) -> crate::common::RegisterField<
        18,
        0x3,
        1,
        0,
        hf_confirm1::Proindc,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            18,
            0x3,
            1,
            0,
            hf_confirm1::Proindc,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB DBG COPY Interface Confirmation   PROINDBGC. This bit reflects the confirmed state of UCB DBG COPY."]
    #[inline(always)]
    pub fn proindbgc(
        self,
    ) -> crate::common::RegisterField<
        20,
        0x3,
        1,
        0,
        hf_confirm1::Proindbgc,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            20,
            0x3,
            1,
            0,
            hf_confirm1::Proindbgc,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB HSM COPY Confirmation   PROINHSMC. This bit reflects the confirmed state of UCB HSM COPY."]
    #[inline(always)]
    pub fn proinhsmc(
        self,
    ) -> crate::common::RegisterField<
        22,
        0x3,
        1,
        0,
        hf_confirm1::Proinhsmc,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            22,
            0x3,
            1,
            0,
            hf_confirm1::Proinhsmc,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB HSMCOTP0 COPY Protection   PROINHSMCOTP0C. This bit reflects the confirmed state of UCB HSMCOTP0 COPY."]
    #[inline(always)]
    pub fn proinhsmcotp0c(
        self,
    ) -> crate::common::RegisterField<
        24,
        0x3,
        1,
        0,
        hf_confirm1::Proinhsmcotp0C,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            24,
            0x3,
            1,
            0,
            hf_confirm1::Proinhsmcotp0C,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB HSMCOTP1 COPY Protection   PROINHSMCOTP1C. This bit reflects the confirmed state of UCB HSMCOTP1 COPY."]
    #[inline(always)]
    pub fn proinhsmcotp1c(
        self,
    ) -> crate::common::RegisterField<
        26,
        0x3,
        1,
        0,
        hf_confirm1::Proinhsmcotp1C,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            26,
            0x3,
            1,
            0,
            hf_confirm1::Proinhsmcotp1C,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB ECPRIO COPY Confirmation   PROINECC. This bit reflects the confirmed state of UCB ECPRIO COPY"]
    #[inline(always)]
    pub fn proinecc(
        self,
    ) -> crate::common::RegisterField<
        28,
        0x3,
        1,
        0,
        hf_confirm1::Proinecc,
        HfConfirm1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            28,
            0x3,
            1,
            0,
            hf_confirm1::Proinecc,
            HfConfirm1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfConfirm1 {
    #[inline(always)]
    fn default() -> HfConfirm1 {
        <crate::RegValueT<HfConfirm1_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_confirm1 {
    pub struct Proinpo_SPEC;
    pub type Proinpo = crate::EnumBitfieldStruct<u8, Proinpo_SPEC>;
    impl Proinpo {
        #[doc = "00 UCB PFLASH ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB PFLASH ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB PFLASH ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB PFLASH ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proindo_SPEC;
    pub type Proindo = crate::EnumBitfieldStruct<u8, Proindo_SPEC>;
    impl Proindo {
        #[doc = "00 UCB DFLASH ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB DFLASH ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB DFLASH ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB DFLASH ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proindbgo_SPEC;
    pub type Proindbgo = crate::EnumBitfieldStruct<u8, Proindbgo_SPEC>;
    impl Proindbgo {
        #[doc = "00 UCB DBG COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB DBG COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB DBG COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB DBG COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinhsmo_SPEC;
    pub type Proinhsmo = crate::EnumBitfieldStruct<u8, Proinhsmo_SPEC>;
    impl Proinhsmo {
        #[doc = "00 UCB HSM ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB HSM ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB HSM ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB HSM ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinhsmcotp0O_SPEC;
    pub type Proinhsmcotp0O = crate::EnumBitfieldStruct<u8, Proinhsmcotp0O_SPEC>;
    impl Proinhsmcotp0O {
        #[doc = "00 UCB HSMCOTP0 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB HSMCOTP0 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB HSMCOTP0 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB HSMCOTP0 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinhsmcotp1O_SPEC;
    pub type Proinhsmcotp1O = crate::EnumBitfieldStruct<u8, Proinhsmcotp1O_SPEC>;
    impl Proinhsmcotp1O {
        #[doc = "00 UCB HSMCOTP1 ORIG        state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB HSMCOTP1 ORIG        state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB HSMCOTP1 ORIG        state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB HSMCOTP1 ORIG        state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proineco_SPEC;
    pub type Proineco = crate::EnumBitfieldStruct<u8, Proineco_SPEC>;
    impl Proineco {
        #[doc = "00 UCB ECPRIO ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB ECPRIO ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB ECPRIO ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB ECPRIO ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinpc_SPEC;
    pub type Proinpc = crate::EnumBitfieldStruct<u8, Proinpc_SPEC>;
    impl Proinpc {
        #[doc = "00 UCB PFLASH COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB PFLASH COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB PFLASH COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB PFLASH COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proindc_SPEC;
    pub type Proindc = crate::EnumBitfieldStruct<u8, Proindc_SPEC>;
    impl Proindc {
        #[doc = "00 UCB DFLASH COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB DFLASH COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB DFLASH COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB DFLASH COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proindbgc_SPEC;
    pub type Proindbgc = crate::EnumBitfieldStruct<u8, Proindbgc_SPEC>;
    impl Proindbgc {
        #[doc = "00 UCB DBG COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB DBG COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB DBG COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB DBG COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinhsmc_SPEC;
    pub type Proinhsmc = crate::EnumBitfieldStruct<u8, Proinhsmc_SPEC>;
    impl Proinhsmc {
        #[doc = "00 UCB HSM COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB HSM COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB HSM COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB HSM COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinhsmcotp0C_SPEC;
    pub type Proinhsmcotp0C = crate::EnumBitfieldStruct<u8, Proinhsmcotp0C_SPEC>;
    impl Proinhsmcotp0C {
        #[doc = "00 UCB HSMCOTP0 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB HSMCOTP0 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB HSMCOTP0 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB HSMCOTP0 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinhsmcotp1C_SPEC;
    pub type Proinhsmcotp1C = crate::EnumBitfieldStruct<u8, Proinhsmcotp1C_SPEC>;
    impl Proinhsmcotp1C {
        #[doc = "00 UCB HSMCOTP1 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB HSMCOTP1 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB HSMCOTP1 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB HSMCOTP1 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinecc_SPEC;
    pub type Proinecc = crate::EnumBitfieldStruct<u8, Proinecc_SPEC>;
    impl Proinecc {
        #[doc = "00 UCB ECPRIO COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB ECPRIO COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB ECPRIO COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB ECPRIO COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfConfirm2_SPEC;
impl crate::sealed::RegSpec for HfConfirm2_SPEC {
    type DataType = u32;
}
#[doc = "Flash Confirm Status Register 2\n resetvalue={Application Reset:0x0}"]
pub type HfConfirm2 = crate::RegValueT<HfConfirm2_SPEC>;

impl HfConfirm2 {
    #[doc = "UCB OTP0 ORIG Confirmation   PROINOTP0O. This bit reflects the confirmed state of UCB OTP0 ORIG."]
    #[inline(always)]
    pub fn proinotp0o(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp0O,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp0O,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP1 ORIG Confirmation   PROINOTP1O. This bit reflects the confirmed state of UCB OTP1 ORIG."]
    #[inline(always)]
    pub fn proinotp1o(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp1O,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp1O,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP2 ORIG Confirmation   PROINOTP2O. This bit reflects the confirmed state of UCB OTP2 ORIG."]
    #[inline(always)]
    pub fn proinotp2o(
        self,
    ) -> crate::common::RegisterField<
        4,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp2O,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            4,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp2O,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP3 ORIG Confirmation   PROINOTP3O. This bit reflects the confirmed state of UCB OTP3 ORIG."]
    #[inline(always)]
    pub fn proinotp3o(
        self,
    ) -> crate::common::RegisterField<
        6,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp3O,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            6,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp3O,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP4 ORIG Confirmation   PROINOTP4O. This bit reflects the confirmed state of UCB OTP4 ORIG."]
    #[inline(always)]
    pub fn proinotp4o(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp4O,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            8,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp4O,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP5 ORIG Confirmation   PROINOTP5O. This bit reflects the confirmed state of UCB OTP5 ORIG."]
    #[inline(always)]
    pub fn proinotp5o(
        self,
    ) -> crate::common::RegisterField<
        10,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp5O,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            10,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp5O,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP6 ORIG Confirmation   PROINOTP6O. This bit reflects the confirmed state of UCB OTP6 ORIG."]
    #[inline(always)]
    pub fn proinotp6o(
        self,
    ) -> crate::common::RegisterField<
        12,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp6O,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            12,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp6O,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP7 ORIG Confirmation   PROINOTP7O. This bit reflects the confirmed state of UCB OTP7 ORIG."]
    #[inline(always)]
    pub fn proinotp7o(
        self,
    ) -> crate::common::RegisterField<
        14,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp7O,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            14,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp7O,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP0 COPY Confirmation   PROINOTP0C. This bit reflects the confirmed state of UCB OTP0 COPY."]
    #[inline(always)]
    pub fn proinotp0c(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp0C,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            16,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp0C,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP1 COPY Confirmation   PROINOTP1C. This bit reflects the confirmed state of UCB OTP1 COPY."]
    #[inline(always)]
    pub fn proinotp1c(
        self,
    ) -> crate::common::RegisterField<
        18,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp1C,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            18,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp1C,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP2 COPY Confirmation   PROINOTP2C. This bit reflects the confirmed state of UCB OTP2 COPY."]
    #[inline(always)]
    pub fn proinotp2c(
        self,
    ) -> crate::common::RegisterField<
        20,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp2C,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            20,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp2C,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP3 COPY Confirmation   PROINOTP3C. This bit reflects the confirmed state of UCB OTP3 COPY."]
    #[inline(always)]
    pub fn proinotp3c(
        self,
    ) -> crate::common::RegisterField<
        22,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp3C,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            22,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp3C,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP4 COPY Confirmation   PROINOTP4C. This bit reflects the confirmed state of UCB OTP4 COPY."]
    #[inline(always)]
    pub fn proinotp4c(
        self,
    ) -> crate::common::RegisterField<
        24,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp4C,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            24,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp4C,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP5 COPY Confirmation   PROINOTP5C. This bit reflects the confirmed state of UCB OTP5 COPY."]
    #[inline(always)]
    pub fn proinotp5c(
        self,
    ) -> crate::common::RegisterField<
        26,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp5C,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            26,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp5C,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP6 COPY Confirmation   PROINOTP6C. This bit reflects the confirmed state of UCB OTP6 COPY."]
    #[inline(always)]
    pub fn proinotp6c(
        self,
    ) -> crate::common::RegisterField<
        28,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp6C,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            28,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp6C,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "UCB OTP7 COPY Confirmation   PROINOTP7C. This bit reflects the confirmed state of UCB OTP7 COPY."]
    #[inline(always)]
    pub fn proinotp7c(
        self,
    ) -> crate::common::RegisterField<
        30,
        0x3,
        1,
        0,
        hf_confirm2::Proinotp7C,
        HfConfirm2_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            30,
            0x3,
            1,
            0,
            hf_confirm2::Proinotp7C,
            HfConfirm2_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfConfirm2 {
    #[inline(always)]
    fn default() -> HfConfirm2 {
        <crate::RegValueT<HfConfirm2_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_confirm2 {
    pub struct Proinotp0O_SPEC;
    pub type Proinotp0O = crate::EnumBitfieldStruct<u8, Proinotp0O_SPEC>;
    impl Proinotp0O {
        #[doc = "00 UCB OTP0 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP0 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP0 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP0 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp1O_SPEC;
    pub type Proinotp1O = crate::EnumBitfieldStruct<u8, Proinotp1O_SPEC>;
    impl Proinotp1O {
        #[doc = "00 UCB OTP1 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP1 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP1 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP1 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp2O_SPEC;
    pub type Proinotp2O = crate::EnumBitfieldStruct<u8, Proinotp2O_SPEC>;
    impl Proinotp2O {
        #[doc = "00 UCB OTP2 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP2 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP2 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP2 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp3O_SPEC;
    pub type Proinotp3O = crate::EnumBitfieldStruct<u8, Proinotp3O_SPEC>;
    impl Proinotp3O {
        #[doc = "00 UCB OTP3 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP3 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP3 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP3 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp4O_SPEC;
    pub type Proinotp4O = crate::EnumBitfieldStruct<u8, Proinotp4O_SPEC>;
    impl Proinotp4O {
        #[doc = "00 UCB OTP4 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP4 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP4 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP4 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp5O_SPEC;
    pub type Proinotp5O = crate::EnumBitfieldStruct<u8, Proinotp5O_SPEC>;
    impl Proinotp5O {
        #[doc = "00 UCB OTP5 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP5 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP5 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP5 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp6O_SPEC;
    pub type Proinotp6O = crate::EnumBitfieldStruct<u8, Proinotp6O_SPEC>;
    impl Proinotp6O {
        #[doc = "00 UCB OTP6 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP6 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP6 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP6 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp7O_SPEC;
    pub type Proinotp7O = crate::EnumBitfieldStruct<u8, Proinotp7O_SPEC>;
    impl Proinotp7O {
        #[doc = "00 UCB OTP7 ORIG state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP7 ORIG state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP7 ORIG state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP7 ORIG state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp0C_SPEC;
    pub type Proinotp0C = crate::EnumBitfieldStruct<u8, Proinotp0C_SPEC>;
    impl Proinotp0C {
        #[doc = "00 UCB OTP0 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP0 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP0 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP0 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp1C_SPEC;
    pub type Proinotp1C = crate::EnumBitfieldStruct<u8, Proinotp1C_SPEC>;
    impl Proinotp1C {
        #[doc = "00 UCB OTP1 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP1 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP1 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP1 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp2C_SPEC;
    pub type Proinotp2C = crate::EnumBitfieldStruct<u8, Proinotp2C_SPEC>;
    impl Proinotp2C {
        #[doc = "00 UCB OTP2 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP2 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP2 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP2 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp3C_SPEC;
    pub type Proinotp3C = crate::EnumBitfieldStruct<u8, Proinotp3C_SPEC>;
    impl Proinotp3C {
        #[doc = "00 UCB OTP3 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP3 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP3 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP3 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp4C_SPEC;
    pub type Proinotp4C = crate::EnumBitfieldStruct<u8, Proinotp4C_SPEC>;
    impl Proinotp4C {
        #[doc = "00 UCB OTP4 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP4 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP4 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP4 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp5C_SPEC;
    pub type Proinotp5C = crate::EnumBitfieldStruct<u8, Proinotp5C_SPEC>;
    impl Proinotp5C {
        #[doc = "00 UCB OTP5 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP5 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP5 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP5 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp6C_SPEC;
    pub type Proinotp6C = crate::EnumBitfieldStruct<u8, Proinotp6C_SPEC>;
    impl Proinotp6C {
        #[doc = "00 UCB OTP6 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP6 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP6 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP6 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Proinotp7C_SPEC;
    pub type Proinotp7C = crate::EnumBitfieldStruct<u8, Proinotp7C_SPEC>;
    impl Proinotp7C {
        #[doc = "00 UCB OTP7 COPY state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 UCB OTP7 COPY state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 UCB OTP7 COPY state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 UCB OTP7 COPY state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfControl_SPEC;
impl crate::sealed::RegSpec for HfControl_SPEC {
    type DataType = u32;
}
#[doc = "Flash Control Register\n resetvalue={Application Reset:0x320}"]
pub type HfControl = crate::RegValueT<HfControl_SPEC>;

impl HfControl {
    #[doc = "Start FSI   FSISTART. Flash startup and recovery requests  see CROSSREFERENCE  . ."]
    #[inline(always)]
    pub fn fsistart(
        self,
    ) -> crate::common::RegisterField<0, 0x7, 1, 0, u8, HfControl_SPEC, crate::common::RW> {
        crate::common::RegisterField::<0,0x7,1,0,u8, HfControl_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Enable Program Erase   FSIENPE. The field prevents any Flash program or erase directly in the FSI. It is        set to   8220 Enabled  8221  by the SSW upon finishing the startup. Once in the   8220 enabled  8221  state this field cannot be changed."]
    #[inline(always)]
    pub fn fsienpe(
        self,
    ) -> crate::common::RegisterField<
        4,
        0x3,
        1,
        0,
        hf_control::Fsienpe,
        HfControl_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            4,
            0x3,
            1,
            0,
            hf_control::Fsienpe,
            HfControl_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "PFlash Wait State ECC error injection   WSERRINJ. Error injection into the ECC logic protecting PFlash Wait states."]
    #[inline(always)]
    pub fn wserrinj(
        self,
    ) -> crate::common::RegisterField<
        7,
        0x1,
        1,
        0,
        hf_control::Wserrinj,
        HfControl_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            7,
            0x1,
            1,
            0,
            hf_control::Wserrinj,
            HfControl_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Disable Read from PFLASH   DDFP. This bit enables disables the read access to PFLASH. DMU ramp up and SSW start up This bit is automatically set with reset and is cleared during startup         if no Read Protection installed  and during startup SSW in case of        internal start out of Flash. This is realized by allowing full write access with inactive startup        protection. User Software  Clearing PFLASH Read Protection Once set  DMU HF CONTROL .DDFP        can only be cleared when DMU HF PROTECT .PRODISP        or DMU HF PROTECT .PRODISP0 5        or not DMU HF PROCONPF .RPRO User Software  Setting PFLASH Read Protection Software must write DMU HF CONTROL .DDFP        to 1"]
    #[inline(always)]
    pub fn ddfp(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x1,
        1,
        0,
        hf_control::Ddfp,
        HfControl_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            8,
            0x1,
            1,
            0,
            hf_control::Ddfp,
            HfControl_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Disable Data Fetch from DF0 EEPROM   DDFD. This bit enables disables the data fetch from DF0 EEPROM. DMU ramp up and SSW start up This bit is automatically set with reset and is cleared during startup         if no Read Protection installed  and during startup  BROM SW  in case of        internal start out of Flash. This is realized by allowing full write access with inactive startup        protection. User Software  Clearing DF0 EEPROM Read Protection Once set  DMU HF CONTROL .DDFD        can only be cleared when DMU HF PROTECT .PRODISD        or not DMU HF PROCONDF .RPRO User Software  Setting DF0 EEPROM Read Protection Software must write DMU HF CONTROL .DDFD        to 1"]
    #[inline(always)]
    pub fn ddfd(
        self,
    ) -> crate::common::RegisterField<
        9,
        0x1,
        1,
        0,
        hf_control::Ddfd,
        HfControl_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            9,
            0x1,
            1,
            0,
            hf_control::Ddfd,
            HfControl_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Clear Programming State   CPROG"]
    #[inline(always)]
    pub fn cprog(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x1,
        1,
        0,
        hf_control::Cprog,
        HfControl_SPEC,
        crate::common::W,
    > {
        crate::common::RegisterField::<
            16,
            0x1,
            1,
            0,
            hf_control::Cprog,
            HfControl_SPEC,
            crate::common::W,
        >::from_register(self, 0)
    }
    #[doc = "Clear Erase State   CERASE"]
    #[inline(always)]
    pub fn cerase(
        self,
    ) -> crate::common::RegisterField<
        17,
        0x1,
        1,
        0,
        hf_control::Cerase,
        HfControl_SPEC,
        crate::common::W,
    > {
        crate::common::RegisterField::<
            17,
            0x1,
            1,
            0,
            hf_control::Cerase,
            HfControl_SPEC,
            crate::common::W,
        >::from_register(self, 0)
    }
    #[doc = "Clear User State   CUSER"]
    #[inline(always)]
    pub fn cuser(
        self,
    ) -> crate::common::RegisterField<
        18,
        0x1,
        1,
        0,
        hf_control::Cuser,
        HfControl_SPEC,
        crate::common::W,
    > {
        crate::common::RegisterField::<
            18,
            0x1,
            1,
            0,
            hf_control::Cuser,
            HfControl_SPEC,
            crate::common::W,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfControl {
    #[inline(always)]
    fn default() -> HfControl {
        <crate::RegValueT<HfControl_SPEC> as RegisterValue<_>>::new(800)
    }
}
pub mod hf_control {
    pub struct Fsienpe_SPEC;
    pub type Fsienpe = crate::EnumBitfieldStruct<u8, Fsienpe_SPEC>;
    impl Fsienpe {
        #[doc = "00 Disabled Program Erase        are disabled in the FSI."]
        pub const DISABLED_0: Self = Self::new(0);
        #[doc = "01 Enabled Program Erase        are enabled in the FSI."]
        pub const ENABLED_1: Self = Self::new(1);
        #[doc = "10 Disabled Program Erase        are disabled in the FSI."]
        pub const DISABLED_2: Self = Self::new(2);
        #[doc = "11 Disabled Program Erase        are disabled in the FSI."]
        pub const DISABLED_3: Self = Self::new(3);
    }
    pub struct Wserrinj_SPEC;
    pub type Wserrinj = crate::EnumBitfieldStruct<u8, Wserrinj_SPEC>;
    impl Wserrinj {
        #[doc = "No error injection requested"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "An error is injected into the ECC protecting PFlash wait states"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Ddfp_SPEC;
    pub type Ddfp = crate::EnumBitfieldStruct<u8, Ddfp_SPEC>;
    impl Ddfp {
        #[doc = "0 Read access from the PFLASH memory area is allowed."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read access from the PFLASH memory area is not allowed."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Ddfd_SPEC;
    pub type Ddfd = crate::EnumBitfieldStruct<u8, Ddfd_SPEC>;
    impl Ddfd {
        #[doc = "0 Read access from the DF0 EEPROM memory area is allowed."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read access from the DF0 EEPROM memory area is not allowed."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cprog_SPEC;
    pub type Cprog = crate::EnumBitfieldStruct<u8, Cprog_SPEC>;
    impl Cprog {
        #[doc = "0 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear the Programming State Flag DMU HF OPERATION .PROG"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cerase_SPEC;
    pub type Cerase = crate::EnumBitfieldStruct<u8, Cerase_SPEC>;
    impl Cerase {
        #[doc = "0 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear the Erase State Flag DMU HF OPERATION .ERASE"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cuser_SPEC;
    pub type Cuser = crate::EnumBitfieldStruct<u8, Cuser_SPEC>;
    impl Cuser {
        #[doc = "0 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear the User State Flag DMU HF OPERATION .USER"]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfDsize_SPEC;
impl crate::sealed::RegSpec for HfDsize_SPEC {
    type DataType = u32;
}
#[doc = "DFLASH Size Configuration Register\n resetvalue={Application Reset:0x200100,CFS Value:0x200040}"]
pub type HfDsize = crate::RegValueT<HfDsize_SPEC>;

impl HfDsize {
    #[doc = "Size of Data Flash Bank 0   DF0. See CROSSREFERENCE ."]
    #[inline(always)]
    pub fn df0(
        self,
    ) -> crate::common::RegisterField<5, 0xf, 1, 0, u8, HfDsize_SPEC, crate::common::RW> {
        crate::common::RegisterField::<5,0xf,1,0,u8, HfDsize_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Size of Data Flash Bank 1   DF1. See CROSSREFERENCE ."]
    #[inline(always)]
    pub fn df1(
        self,
    ) -> crate::common::RegisterFieldBool<21, 1, 0, HfDsize_SPEC, crate::common::RW> {
        crate::common::RegisterFieldBool::<21, 1, 0, HfDsize_SPEC, crate::common::RW>::from_register(
            self, 0,
        )
    }
}
impl core::default::Default for HfDsize {
    #[inline(always)]
    fn default() -> HfDsize {
        <crate::RegValueT<HfDsize_SPEC> as RegisterValue<_>>::new(2097152)
    }
}

#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfDwait_SPEC;
impl crate::sealed::RegSpec for HfDwait_SPEC {
    type DataType = u32;
}
#[doc = "DFLASH Wait Cycle Register\n resetvalue={System Reset:0x4000B}"]
pub type HfDwait = crate::RegValueT<HfDwait_SPEC>;

impl HfDwait {
    #[doc = "Operation Mode   RFLASH. DFLASH Wait Cycles for Flash This bit field defines the number of FSI clock cycles for a DFLASH Bank        read access."]
    #[inline(always)]
    pub fn rflash(
        self,
    ) -> crate::common::RegisterField<
        0,
        0xff,
        1,
        0,
        hf_dwait::Rflash,
        HfDwait_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            0,
            0xff,
            1,
            0,
            hf_dwait::Rflash,
            HfDwait_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Operation Mode   RECC. DFLASH Error Correction Cycles This bit field defines the number of FSI clock cycles for the PFLASH        Bank p ECC correction."]
    #[inline(always)]
    pub fn recc(
        self,
    ) -> crate::common::RegisterField<16, 0x7, 1, 0, hf_dwait::Recc, HfDwait_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<16,0x7,1,0,hf_dwait::Recc, HfDwait_SPEC,crate::common::RW>::from_register(self,0)
    }
}
impl core::default::Default for HfDwait {
    #[inline(always)]
    fn default() -> HfDwait {
        <crate::RegValueT<HfDwait_SPEC> as RegisterValue<_>>::new(262155)
    }
}
pub mod hf_dwait {
    pub struct Rflash_SPEC;
    pub type Rflash = crate::EnumBitfieldStruct<u8, Rflash_SPEC>;
    impl Rflash {
        #[doc = "0 Read access takes 2 fFSI clock cycles."]
        pub const CONST_00: Self = Self::new(0);
    }
    pub struct Recc_SPEC;
    pub type Recc = crate::EnumBitfieldStruct<u8, Recc_SPEC>;
    impl Recc {
        #[doc = "0 Error        correction takes 1 fFSI clock cycle."]
        pub const CONST_00: Self = Self::new(0);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfEccc_SPEC;
impl crate::sealed::RegSpec for HfEccc_SPEC {
    type DataType = u32;
}
#[doc = "DF0 ECC Control Register\n resetvalue={Application Reset:0x0C0000000}"]
pub type HfEccc = crate::RegValueT<HfEccc_SPEC>;

impl HfEccc {
    #[doc = "Clear ECC status bits   CLR"]
    #[inline(always)]
    pub fn clr(
        self,
    ) -> crate::common::RegisterField<0, 0x3, 1, 0, hf_eccc::Clr, HfEccc_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<0,0x3,1,0,hf_eccc::Clr, HfEccc_SPEC,crate::common::W>::from_register(self,0)
    }
    #[doc = "Host Command Interface ECC Correction Disable   ECCCORDIS"]
    #[inline(always)]
    pub fn ecccordis(
        self,
    ) -> crate::common::RegisterField<
        28,
        0x3,
        1,
        0,
        hf_eccc::Ecccordis,
        HfEccc_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            28,
            0x3,
            1,
            0,
            hf_eccc::Ecccordis,
            HfEccc_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Host Command Interface Uncorrectable ECC Bit Error Trap Disable   TRAPDIS. Includes CFS and UCB uncorrectable errors."]
    #[inline(always)]
    pub fn trapdis(
        self,
    ) -> crate::common::RegisterField<30, 0x3, 1, 0, hf_eccc::Trapdis, HfEccc_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<
            30,
            0x3,
            1,
            0,
            hf_eccc::Trapdis,
            HfEccc_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfEccc {
    #[inline(always)]
    fn default() -> HfEccc {
        <crate::RegValueT<HfEccc_SPEC> as RegisterValue<_>>::new(3221225472)
    }
}
pub mod hf_eccc {
    pub struct Clr_SPEC;
    pub type Clr = crate::EnumBitfieldStruct<u8, Clr_SPEC>;
    impl Clr {
        #[doc = "00 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 No action."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 No action."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Clear DMU HF ECCS status bits."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Ecccordis_SPEC;
    pub type Ecccordis = crate::EnumBitfieldStruct<u8, Ecccordis_SPEC>;
    impl Ecccordis {
        #[doc = "00 Enabled ECC        correction is enabled for the DF0 read path and if DF1 is configured as        not HSM exclusive  then for the DF1 read path."]
        pub const ENABLED_0: Self = Self::new(0);
        #[doc = "01 Enabled ECC        correction is enabled for the DF0 read path and if DF1 is        configured as not HSM exclusive  then for the DF1 read path."]
        pub const ENABLED_1: Self = Self::new(1);
        #[doc = "10 Enabled ECC        correction is enabled for the DF0 read path and if DF1 is        configured as not HSM exclusive  then for the DF1 read path."]
        pub const ENABLED_2: Self = Self::new(2);
        #[doc = "11 Disabled ECC        correction is disabled for the DF0 read path and if DF1 is configured as        not HSM exclusive  then for the DF1 read path."]
        pub const DISABLED_3: Self = Self::new(3);
    }
    pub struct Trapdis_SPEC;
    pub type Trapdis = crate::EnumBitfieldStruct<u8, Trapdis_SPEC>;
    impl Trapdis {
        #[doc = "00 For DF0 and        DF1  when DF1 is configured as not HSM exclusive   if an uncorrectable        ECC error occurs then a bus error trap is generated."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 For DF0 and        DF1  when DF1 is configured as not HSM exclusive   if an uncorrectable        ECC error occurs then a bus error trap is generated."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 For DF0 and        DF1  when DF1 is configured as not HSM exclusive   if an uncorrectable        ECC error occurs then a bus error trap is generated."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 For DF0 and        DF1  when DF1 is configured as not HSM exclusive   the uncorrectable ECC        error trap is disabled."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfEccr_SPEC;
impl crate::sealed::RegSpec for HfEccr_SPEC {
    type DataType = u32;
}
#[doc = "DF0 ECC Read Register\n resetvalue={Application Reset:0x0}"]
pub type HfEccr = crate::RegValueT<HfEccr_SPEC>;

impl HfEccr {
    #[doc = "Error Correction Read Code   RCODE. ECC checksum read during the last NVM read access."]
    #[inline(always)]
    pub fn rcode(
        self,
    ) -> crate::common::RegisterField<0, 0x3fffff, 1, 0, u32, HfEccr_SPEC, crate::common::R> {
        crate::common::RegisterField::<0,0x3fffff,1,0,u32, HfEccr_SPEC,crate::common::R>::from_register(self,0)
    }
}
impl core::default::Default for HfEccr {
    #[inline(always)]
    fn default() -> HfEccr {
        <crate::RegValueT<HfEccr_SPEC> as RegisterValue<_>>::new(0)
    }
}

#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfEccs_SPEC;
impl crate::sealed::RegSpec for HfEccs_SPEC {
    type DataType = u32;
}
#[doc = "DF0 ECC Status Register\n resetvalue={Application Reset:0x0}"]
pub type HfEccs = crate::RegValueT<HfEccs_SPEC>;

impl HfEccs {
    #[doc = "Read Access Single Bit ECC Error   ERR1. The flag reports a single bit ECC failure during the last NVM read        access. Reset by hardware when DMU HF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn err1(
        self,
    ) -> crate::common::RegisterField<0, 0x1, 1, 0, hf_eccs::Err1, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<0,0x1,1,0,hf_eccs::Err1, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Read Access Double Bit ECC Error   ERR2. The flag reports a double bit ECC failure during the last NVM read        access. Reset by hardware when DMU HF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn err2(
        self,
    ) -> crate::common::RegisterField<1, 0x1, 1, 0, hf_eccs::Err2, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<1,0x1,1,0,hf_eccs::Err2, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Read Access Triple Bit ECC Error   ERR3. The flag reports a triple bit ECC failure during the last NVM read        access. Reset by hardware when DMU HF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn err3(
        self,
    ) -> crate::common::RegisterField<2, 0x1, 1, 0, hf_eccs::Err3, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<2,0x1,1,0,hf_eccs::Err3, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Read Access Multi bit ECC Error   ERRM. The flag reports multi bit ECC failure during the last NVM read access. Reset by hardware when DMU HF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn errm(
        self,
    ) -> crate::common::RegisterField<3, 0x1, 1, 0, hf_eccs::Errm, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<3,0x1,1,0,hf_eccs::Errm, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Any Read Access ECC Error   ERRANY. The flag reports any ECC failure during the last NVM read access. Reset by hardware when DMU HF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn errany(
        self,
    ) -> crate::common::RegisterField<7, 0x1, 1, 0, hf_eccs::Errany, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<7,0x1,1,0,hf_eccs::Errany, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Read Access Blank Digital   BLANKD. The flag reports digital evaluated blank failures during last NVM read        accesses in Complement Sensing mode. Blank        failures in Single Ended mode is also reported when in CFTM. Reset by hardware when DMU HF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn blankd(
        self,
    ) -> crate::common::RegisterField<8, 0x1, 1, 0, hf_eccs::Blankd, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<8,0x1,1,0,hf_eccs::Blankd, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Read Access Blank Analog   BLANKA. The flag reports that all read data cells have sufficient high current  a program of new data without prior erase is possible. Under certain operation history  a valid complement data entry may also appear as blank. Data qualifiers like headers or footers  which are usually used in EEPROM emulation  can be used to distinguish expected valid data from unknown data fields. Only blank failures in Complement Sensing mode are reported in this flag and is intended for use only in this mode. Blank failures in Single Ended mode is also reported when in CFTM. Reset by hardware when DMU HF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn blanka(
        self,
    ) -> crate::common::RegisterField<9, 0x1, 1, 0, hf_eccs::Blanka, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<9,0x1,1,0,hf_eccs::Blanka, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Single Bit ECC Errors   AER1. The status flag accumulates single bit failures during NVM read operations. Reset by hardware when DMU HF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn aer1(
        self,
    ) -> crate::common::RegisterField<16, 0x1, 1, 0, hf_eccs::Aer1, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<16,0x1,1,0,hf_eccs::Aer1, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Double Bit ECC Errors   AER2. The status flag accumulates double bit failures during NVM read operations. Reset by hardware when DMU HF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn aer2(
        self,
    ) -> crate::common::RegisterField<17, 0x1, 1, 0, hf_eccs::Aer2, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<17,0x1,1,0,hf_eccs::Aer2, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Triple Bit ECC Errors   AER3. The status flag accumulates triple bit failures during NVM read operations. Reset by hardware when DMU HF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn aer3(
        self,
    ) -> crate::common::RegisterField<18, 0x1, 1, 0, hf_eccs::Aer3, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<18,0x1,1,0,hf_eccs::Aer3, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Multi bit ECC Errors   AERM. The status bit accumulates multi bit failures during NVM read accesses. Reset by hardware when DMU HF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn aerm(
        self,
    ) -> crate::common::RegisterField<19, 0x1, 1, 0, hf_eccs::Aerm, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<19,0x1,1,0,hf_eccs::Aerm, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Any Read Access ECC Error   AERANY. The status bit accumulates ECC failures during NVM read accesses. Reset by hardware when DMU HF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn aerany(
        self,
    ) -> crate::common::RegisterField<23, 0x1, 1, 0, hf_eccs::Aerany, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<23,0x1,1,0,hf_eccs::Aerany, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Blank Digital   ABLANKD. The flag accumulates digital evaluated blank failures during NVM read accesses  in Complement Sensing mode. Blank failures in Single Ended mode is also reported when in CFTM. Reset by hardware when DMU HF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn ablankd(
        self,
    ) -> crate::common::RegisterField<24, 0x1, 1, 0, hf_eccs::Ablankd, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<24,0x1,1,0,hf_eccs::Ablankd, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Blank Analog   ABLANKA. The flag accumulates analog evaluated blank failures during NVM read accesses. It reports that all read data cells have sufficient high current  a program of new data without prior erase is possible. Under certain operation history  a valid complement data entry may also appear as blank. Data qualifiers like headers or footers  which are usually used in EEPROM emulation  can be used to distinguish expected valid data from unknown data fields. Only blank failures in Complement Sensing mode are reported in this flag and is intended for use only in this mode. Blank failures in Single Ended mode is also reported when in CFTM. Reset by hardware when DMU HF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn ablanka(
        self,
    ) -> crate::common::RegisterField<25, 0x1, 1, 0, hf_eccs::Ablanka, HfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<25,0x1,1,0,hf_eccs::Ablanka, HfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
}
impl core::default::Default for HfEccs {
    #[inline(always)]
    fn default() -> HfEccs {
        <crate::RegValueT<HfEccs_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_eccs {
    pub struct Err1_SPEC;
    pub type Err1 = crate::EnumBitfieldStruct<u8, Err1_SPEC>;
    impl Err1 {
        #[doc = "0 No single bit        ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 A single bit        ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Err2_SPEC;
    pub type Err2 = crate::EnumBitfieldStruct<u8, Err2_SPEC>;
    impl Err2 {
        #[doc = "0 No double bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 A double bit        ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Err3_SPEC;
    pub type Err3 = crate::EnumBitfieldStruct<u8, Err3_SPEC>;
    impl Err3 {
        #[doc = "0 No triple bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 A triple bit        ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Errm_SPEC;
    pub type Errm = crate::EnumBitfieldStruct<u8, Errm_SPEC>;
    impl Errm {
        #[doc = "0 No multi bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Multi bit ECC        failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Errany_SPEC;
    pub type Errany = crate::EnumBitfieldStruct<u8, Errany_SPEC>;
    impl Errany {
        #[doc = "0 No ECC failure        occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 ECC failure        occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Blankd_SPEC;
    pub type Blankd = crate::EnumBitfieldStruct<u8, Blankd_SPEC>;
    impl Blankd {
        #[doc = "0 Read data is not erased."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read data is erased."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Blanka_SPEC;
    pub type Blanka = crate::EnumBitfieldStruct<u8, Blanka_SPEC>;
    impl Blanka {
        #[doc = "0 Read data cells are not erased."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read data cells have sufficient high current  a program of new data without prior erase is possible."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Aer1_SPEC;
    pub type Aer1 = crate::EnumBitfieldStruct<u8, Aer1_SPEC>;
    impl Aer1 {
        #[doc = "0 No single bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 At least one single bit ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Aer2_SPEC;
    pub type Aer2 = crate::EnumBitfieldStruct<u8, Aer2_SPEC>;
    impl Aer2 {
        #[doc = "0 No double bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 At least one double bit ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Aer3_SPEC;
    pub type Aer3 = crate::EnumBitfieldStruct<u8, Aer3_SPEC>;
    impl Aer3 {
        #[doc = "0 No triple bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 At least one triple bit ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Aerm_SPEC;
    pub type Aerm = crate::EnumBitfieldStruct<u8, Aerm_SPEC>;
    impl Aerm {
        #[doc = "0 No multi bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Multi bit ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Aerany_SPEC;
    pub type Aerany = crate::EnumBitfieldStruct<u8, Aerany_SPEC>;
    impl Aerany {
        #[doc = "0 No ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Ablankd_SPEC;
    pub type Ablankd = crate::EnumBitfieldStruct<u8, Ablankd_SPEC>;
    impl Ablankd {
        #[doc = "0 Read data is not erased."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read data is erased."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Ablanka_SPEC;
    pub type Ablanka = crate::EnumBitfieldStruct<u8, Ablanka_SPEC>;
    impl Ablanka {
        #[doc = "0 Read data cells are not erased."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read data cells have sufficient high current  a program of new data without prior erase is possible ."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfEccw_SPEC;
impl crate::sealed::RegSpec for HfEccw_SPEC {
    type DataType = u32;
}
#[doc = "DF0 ECC Write Register\n resetvalue={Application Reset:0x0}"]
pub type HfEccw = crate::RegValueT<HfEccw_SPEC>;

impl HfEccw {
    #[doc = "Error Correction Write Code   WCODE. 22 bit ECC code for the current 64 bit  for DFLASH  or 256 bit  for        PFLASH  write buffer to be written into the assembly buffer instead of a        generated ECC."]
    #[inline(always)]
    pub fn wcode(
        self,
    ) -> crate::common::RegisterField<0, 0x3fffff, 1, 0, u32, HfEccw_SPEC, crate::common::RW> {
        crate::common::RegisterField::<0,0x3fffff,1,0,u32, HfEccw_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "PFLASH ECC Encoding Disable   PECENCDIS"]
    #[inline(always)]
    pub fn pecencdis(
        self,
    ) -> crate::common::RegisterField<
        28,
        0x3,
        1,
        0,
        hf_eccw::Pecencdis,
        HfEccw_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            28,
            0x3,
            1,
            0,
            hf_eccw::Pecencdis,
            HfEccw_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "DFLASH ECC Encoding Disable   DECENCDIS"]
    #[inline(always)]
    pub fn decencdis(
        self,
    ) -> crate::common::RegisterField<
        30,
        0x3,
        1,
        0,
        hf_eccw::Decencdis,
        HfEccw_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            30,
            0x3,
            1,
            0,
            hf_eccw::Decencdis,
            HfEccw_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfEccw {
    #[inline(always)]
    fn default() -> HfEccw {
        <crate::RegValueT<HfEccw_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_eccw {
    pub struct Pecencdis_SPEC;
    pub type Pecencdis = crate::EnumBitfieldStruct<u8, Pecencdis_SPEC>;
    impl Pecencdis {
        #[doc = "00 The ECC code        is automatically calculated."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 The ECC code is automatically calculated."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 The ECC code        is automatically calculated."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 The ECC code        is taken from WCODE."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Decencdis_SPEC;
    pub type Decencdis = crate::EnumBitfieldStruct<u8, Decencdis_SPEC>;
    impl Decencdis {
        #[doc = "00 The ECC code is automatically calculated."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 The ECC code is automatically calculated."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 The ECC code is automatically calculated."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 The ECC code is taken from WCODE."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfEer_SPEC;
impl crate::sealed::RegSpec for HfEer_SPEC {
    type DataType = u32;
}
#[doc = "Enable Error Interrupt Control Register\n resetvalue={Application Reset:0x0}"]
pub type HfEer = crate::RegValueT<HfEer_SPEC>;

impl HfEer {
    #[doc = "Operation Error Interrupt Mask   OPERM"]
    #[inline(always)]
    pub fn operm(
        self,
    ) -> crate::common::RegisterField<0, 0x1, 1, 0, hf_eer::Operm, HfEer_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<0,0x1,1,0,hf_eer::Operm, HfEer_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Command Sequence Error Interrupt Mask   SQERM"]
    #[inline(always)]
    pub fn sqerm(
        self,
    ) -> crate::common::RegisterField<1, 0x1, 1, 0, hf_eer::Sqerm, HfEer_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<1,0x1,1,0,hf_eer::Sqerm, HfEer_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Protection Error Interrupt Mask   PROERM"]
    #[inline(always)]
    pub fn proerm(
        self,
    ) -> crate::common::RegisterField<2, 0x1, 1, 0, hf_eer::Proerm, HfEer_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<2,0x1,1,0,hf_eer::Proerm, HfEer_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Program Verify Error Interrupt Mask   PVERM"]
    #[inline(always)]
    pub fn pverm(
        self,
    ) -> crate::common::RegisterField<3, 0x1, 1, 0, hf_eer::Pverm, HfEer_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<3,0x1,1,0,hf_eer::Pverm, HfEer_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Erase Verify Error Interrupt Mask   EVERM"]
    #[inline(always)]
    pub fn everm(
        self,
    ) -> crate::common::RegisterField<4, 0x1, 1, 0, hf_eer::Everm, HfEer_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<4,0x1,1,0,hf_eer::Everm, HfEer_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "End of Busy Interrupt Mask   EOBM"]
    #[inline(always)]
    pub fn eobm(
        self,
    ) -> crate::common::RegisterField<31, 0x1, 1, 0, hf_eer::Eobm, HfEer_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<31,0x1,1,0,hf_eer::Eobm, HfEer_SPEC,crate::common::RW>::from_register(self,0)
    }
}
impl core::default::Default for HfEer {
    #[inline(always)]
    fn default() -> HfEer {
        <crate::RegValueT<HfEer_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_eer {
    pub struct Operm_SPEC;
    pub type Operm = crate::EnumBitfieldStruct<u8, Operm_SPEC>;
    impl Operm {
        #[doc = "0 Interrupt disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash interrupt because Operation Error is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Sqerm_SPEC;
    pub type Sqerm = crate::EnumBitfieldStruct<u8, Sqerm_SPEC>;
    impl Sqerm {
        #[doc = "0 Interrupt disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash interrupt because Sequence Error is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Proerm_SPEC;
    pub type Proerm = crate::EnumBitfieldStruct<u8, Proerm_SPEC>;
    impl Proerm {
        #[doc = "0 Interrupt disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash interrupt because Protection Error is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Pverm_SPEC;
    pub type Pverm = crate::EnumBitfieldStruct<u8, Pverm_SPEC>;
    impl Pverm {
        #[doc = "0 Interrupt disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash interrupt because Program Verify Error is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Everm_SPEC;
    pub type Everm = crate::EnumBitfieldStruct<u8, Everm_SPEC>;
    impl Everm {
        #[doc = "0 Interrupt disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash interrupt because Erase Verify Error is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Eobm_SPEC;
    pub type Eobm = crate::EnumBitfieldStruct<u8, Eobm_SPEC>;
    impl Eobm {
        #[doc = "0 Interrupt disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 EOB interrupt is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfErrsr_SPEC;
impl crate::sealed::RegSpec for HfErrsr_SPEC {
    type DataType = u32;
}
#[doc = "Error Status Register\n resetvalue={Application Reset:0x0}"]
pub type HfErrsr = crate::RegValueT<HfErrsr_SPEC>;

impl HfErrsr {
    #[doc = "Flash Operation Error   OPER. Cleared with system reset."]
    #[inline(always)]
    pub fn oper(
        self,
    ) -> crate::common::RegisterField<0, 0x1, 1, 0, hf_errsr::Oper, HfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<0,0x1,1,0,hf_errsr::Oper, HfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Command Sequence Error   SQER. A sequence error is not indicated if the Reset to Read command aborts a command sequence. Cleared with application reset  commands  Reset to Read  and  Clear Status  or writing DMU HF CLRE .CSQER   1 ."]
    #[inline(always)]
    pub fn sqer(
        self,
    ) -> crate::common::RegisterField<1, 0x1, 1, 0, hf_errsr::Sqer, HfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<1,0x1,1,0,hf_errsr::Sqer, HfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Protection Error   PROER. A Protection Error is reported e.g. because of a not allowed command  for example an Erase or Write Page command addressing a locked sector  or because of wrong password s  in a protected command sequence such as  Disable Read Protection . A Protection Error is also reported if the safety protection prevented a program erase operation in Flash. Cleared with application reset  with the command  Clear Status  or writing DMU HF CLRE .CPROER   1 ."]
    #[inline(always)]
    pub fn proer(
        self,
    ) -> crate::common::RegisterField<2, 0x1, 1, 0, hf_errsr::Proer, HfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<2,0x1,1,0,hf_errsr::Proer, HfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Program Verify Error   PVER. A verify error was reported on completion of a Flash program operation  even when the operation was directly started in the FSI  Cleared with application reset  with the command   8220 Clear Status  8221  or          writing DMU HF CLRE .CPVER            1 ."]
    #[inline(always)]
    pub fn pver(
        self,
    ) -> crate::common::RegisterField<3, 0x1, 1, 0, hf_errsr::Pver, HfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<3,0x1,1,0,hf_errsr::Pver, HfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Erase Verify Error   EVER. A verify error was reported on completion of a Flash erase operation  even when the operation was directly started in the FSI  . Cleared with application reset  with the command  Clear Status  or writing DMU HF CLRE .CEVER   1 ."]
    #[inline(always)]
    pub fn ever(
        self,
    ) -> crate::common::RegisterField<4, 0x1, 1, 0, hf_errsr::Ever, HfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<4,0x1,1,0,hf_errsr::Ever, HfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "SRI Bus Address ECC Error   ADER. This flag is set when the DMU detects an ECC error in the address phase        bus transaction on the SRI bus. Cleared with application reset or writing DMU HF CLRE .CADER            1 ."]
    #[inline(always)]
    pub fn ader(
        self,
    ) -> crate::common::RegisterField<5, 0x1, 1, 0, hf_errsr::Ader, HfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<5,0x1,1,0,hf_errsr::Ader, HfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Original Error   ORIER. If a UCB contains both ORIG and COPY confirmation codes and during        startup an ERRORED value or an uncorrectable ECC error is detected in        the ORIG confirmation code then the original error flag is set by        hardware. Cleared with application reset."]
    #[inline(always)]
    pub fn orier(
        self,
    ) -> crate::common::RegisterField<6, 0x1, 1, 0, hf_errsr::Orier, HfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<6,0x1,1,0,hf_errsr::Orier, HfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "EVR Primary Monitor Error   PWRER. Cleared with application reset."]
    #[inline(always)]
    pub fn pwrer(
        self,
    ) -> crate::common::RegisterField<7, 0x1, 1, 0, hf_errsr::Pwrer, HfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<7,0x1,1,0,hf_errsr::Pwrer, HfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
}
impl core::default::Default for HfErrsr {
    #[inline(always)]
    fn default() -> HfErrsr {
        <crate::RegValueT<HfErrsr_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_errsr {
    pub struct Oper_SPEC;
    pub type Oper = crate::EnumBitfieldStruct<u8, Oper_SPEC>;
    impl Oper {
        #[doc = "0 No operation error."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash array        operation aborted  because of a Flash array failure  e.g. an ECC error        in FSI SRAM."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Sqer_SPEC;
    pub type Sqer = crate::EnumBitfieldStruct<u8, Sqer_SPEC>;
    impl Sqer {
        #[doc = "0 No sequence error."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Command state machine operation unsuccessful because of improper address or command sequence."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Proer_SPEC;
    pub type Proer = crate::EnumBitfieldStruct<u8, Proer_SPEC>;
    impl Proer {
        #[doc = "0 No protection error."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Protection error."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Pver_SPEC;
    pub type Pver = crate::EnumBitfieldStruct<u8, Pver_SPEC>;
    impl Pver {
        #[doc = "0 The page is correctly programmed. All bits have full expected quality."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 A program verify error has been detected. Full quality of all bits cannot be guaranteed."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Ever_SPEC;
    pub type Ever = crate::EnumBitfieldStruct<u8, Ever_SPEC>;
    impl Ever {
        #[doc = "0 The sector is correctly erased. All erased bits have full expected quality."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 An erase verify error has been detected. Full quality erased bits cannot be guaranteed."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Ader_SPEC;
    pub type Ader = crate::EnumBitfieldStruct<u8, Ader_SPEC>;
    impl Ader {
        #[doc = "0 No SRI address error detected."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 SRI address error detected."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Orier_SPEC;
    pub type Orier = crate::EnumBitfieldStruct<u8, Orier_SPEC>;
    impl Orier {
        #[doc = "0 No original error detected."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Original error detected."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Pwrer_SPEC;
    pub type Pwrer = crate::EnumBitfieldStruct<u8, Pwrer_SPEC>;
    impl Pwrer {
        #[doc = "0 No EVR monitor error detected."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 EVR monitor error detected."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfGftest_SPEC;
impl crate::sealed::RegSpec for HfGftest_SPEC {
    type DataType = u32;
}
#[doc = "General Flash Test Register\n resetvalue={Application Reset:0x0}"]
pub type HfGftest = crate::RegValueT<HfGftest_SPEC>;

impl HfGftest {
    #[doc = "General Flash Test Mode   GFTM. Reset by hardware when DMU HF CLRT .CLR is written to 11 ."]
    #[inline(always)]
    pub fn gftm(
        self,
    ) -> crate::common::RegisterField<0, 0x1, 1, 0, hf_gftest::Gftm, HfGftest_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<0,0x1,1,0,hf_gftest::Gftm, HfGftest_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "FSI Interrupt Enable   FSIINTEN. Writing enabled with DMU HF GFTEST .GFTM   1 . Reset by hardware when DMU HF CLRT .CLR is written to 11 ."]
    #[inline(always)]
    pub fn fsiinten(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x1,
        1,
        0,
        hf_gftest::Fsiinten,
        HfGftest_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            8,
            0x1,
            1,
            0,
            hf_gftest::Fsiinten,
            HfGftest_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "FSI Interrupt Flag   FSIINT. Hardware update and software write enabled with DMU HF GFTEST .GFTM   1 . FSI Interrupt Flag operation  Flag set to 1 by hardware. Flag cleared to 0 by software writing DMU HF GFTEST .FSIINT   0 Flag cleared to 0 and Flash Test Modes exited by software writing DMU HF CLRT .CLR   11 ."]
    #[inline(always)]
    pub fn fsiint(
        self,
    ) -> crate::common::RegisterField<
        9,
        0x1,
        1,
        0,
        hf_gftest::Fsiint,
        HfGftest_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            9,
            0x1,
            1,
            0,
            hf_gftest::Fsiint,
            HfGftest_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfGftest {
    #[inline(always)]
    fn default() -> HfGftest {
        <crate::RegValueT<HfGftest_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_gftest {
    pub struct Gftm_SPEC;
    pub type Gftm = crate::EnumBitfieldStruct<u8, Gftm_SPEC>;
    impl Gftm {
        #[doc = "0 General Flash Test Mode is not enabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 General Flash Test Mode is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Fsiinten_SPEC;
    pub type Fsiinten = crate::EnumBitfieldStruct<u8, Fsiinten_SPEC>;
    impl Fsiinten {
        #[doc = "0 No action"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 The FSI interrupt for test purposes is enabled in Flash Test Mode."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Fsiint_SPEC;
    pub type Fsiint = crate::EnumBitfieldStruct<u8, Fsiint_SPEC>;
    impl Fsiint {
        #[doc = "0 No action"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash interrupt condition detected."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfId_SPEC;
impl crate::sealed::RegSpec for HfId_SPEC {
    type DataType = u32;
}
#[doc = "Module Identification Register\n resetvalue={Application Reset:0x0E7C000}"]
pub type HfId = crate::RegValueT<HfId_SPEC>;

impl HfId {
    #[doc = "Module Revision Number   MOD REV. This bit field defines the module revision number reflecting major        changes in the module."]
    #[inline(always)]
    pub fn mod_rev(
        self,
    ) -> crate::common::RegisterField<0, 0xff, 1, 0, u8, HfId_SPEC, crate::common::R> {
        crate::common::RegisterField::<0,0xff,1,0,u8, HfId_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Module Type   MOD TYPE. The bit field is set to C0 which defines        the module as a 32 bit module."]
    #[inline(always)]
    pub fn mod_type(
        self,
    ) -> crate::common::RegisterField<8, 0xff, 1, 0, u8, HfId_SPEC, crate::common::R> {
        crate::common::RegisterField::<8,0xff,1,0,u8, HfId_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Module Number Value   MOD NUMBER. This bit field defines the module identification number."]
    #[inline(always)]
    pub fn mod_number(
        self,
    ) -> crate::common::RegisterField<16, 0xff, 1, 0, u8, HfId_SPEC, crate::common::R> {
        crate::common::RegisterField::<16,0xff,1,0,u8, HfId_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Flash Revision   FLASH REV. This bit field defines the flash revision number.  31 28  identifies the product. For example  0x9h indicates TC39x        product  0x8h indicates TC38x product etc.  27 24  identifies the        product revision."]
    #[inline(always)]
    pub fn flash_rev(
        self,
    ) -> crate::common::RegisterField<24, 0xff, 1, 0, u8, HfId_SPEC, crate::common::R> {
        crate::common::RegisterField::<24,0xff,1,0,u8, HfId_SPEC,crate::common::R>::from_register(self,0)
    }
}
impl core::default::Default for HfId {
    #[inline(always)]
    fn default() -> HfId {
        <crate::RegValueT<HfId_SPEC> as RegisterValue<_>>::new(15187968)
    }
}

#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfMargin_SPEC;
impl crate::sealed::RegSpec for HfMargin_SPEC {
    type DataType = u32;
}
#[doc = "Margin Control Register\n resetvalue={Application Reset:0x0}"]
pub type HfMargin = crate::RegValueT<HfMargin_SPEC>;

impl HfMargin {
    #[doc = "DF0 Margin Read Selection   SELD0. If a change between the standard and hard read margin setting is done           the system must wait a delay time t FL MarginDel until the next read is requested."]
    #[inline(always)]
    pub fn seld0(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        hf_margin::Seld0,
        HfMargin_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            hf_margin::Seld0,
            HfMargin_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Hard Margin Selection   HMARGIN. Suboptimal 0 bits are read as 1s. Suboptimal 1 bits are read as 0s. The concrete margin values are restored from the configuration sector        and are determined by Infineon."]
    #[inline(always)]
    pub fn hmargin(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x1,
        1,
        0,
        hf_margin::Hmargin,
        HfMargin_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            8,
            0x1,
            1,
            0,
            hf_margin::Hmargin,
            HfMargin_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfMargin {
    #[inline(always)]
    fn default() -> HfMargin {
        <crate::RegValueT<HfMargin_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_margin {
    pub struct Seld0_SPEC;
    pub type Seld0 = crate::EnumBitfieldStruct<u8, Seld0_SPEC>;
    impl Seld0 {
        #[doc = "00 Read with standard margin."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Read with standard margin."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Read with standard margin."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Read with hard margin selected by DMU HF MARGIN .HMARGIN."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Hmargin_SPEC;
    pub type Hmargin = crate::EnumBitfieldStruct<u8, Hmargin_SPEC>;
    impl Hmargin {
        #[doc = "0 Tight0 Tight        margin for 0  low  level."]
        pub const TIGHT_00: Self = Self::new(0);
        #[doc = "1 Tight1 Tight        margin for 1  high  level."]
        pub const TIGHT_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfOperation_SPEC;
impl crate::sealed::RegSpec for HfOperation_SPEC {
    type DataType = u32;
}
#[doc = "Flash Operation Register\n resetvalue={System Reset:0x0}"]
pub type HfOperation = crate::RegValueT<HfOperation_SPEC>;

impl HfOperation {
    #[doc = "Programming State   PROG. HW controlled status flag. Set with last cycle of Write Page Burst and Replace Logical Sector        command sequences. If one BUSY flag is coincidently set  PROG indicates the type of busy        state. If OPER is coincidently set  PROG indicates the type of erroneous        operation. Otherwise  PROG indicates  that operation is still requested        or finished. May be also cleared by writing   8216 1  8217  to DMU HF CONTROL .CPROG. This bit is not set for by program operations initiated by the HSM        interface. Cleared with command   8220 Clear Status  8221 ."]
    #[inline(always)]
    pub fn prog(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        hf_operation::Prog,
        HfOperation_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            hf_operation::Prog,
            HfOperation_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Erase State   ERASE. HW controlled status flag. Set with last cycle of Erase Verify command sequence. Indications are analogous to PROG flag. May be cleared by writing  1  to DMU HF CONTROL .CERASE. This bit is not set for by erase operations initiated by the HSM interface. Cleared with command  Clear Status ."]
    #[inline(always)]
    pub fn erase(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        hf_operation::Erase,
        HfOperation_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            hf_operation::Erase,
            HfOperation_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "User State   USER. HW controlled status flag. Set with last cycle of User command sequence. Indications are analogous to PROG flag. May be cleared by writing   x2018 1  x2019  to DMU HF CONTROL .CUSER. This bit is not set for by user operations initiated by the HSM interface. Cleared with command   x201c Clear Status  x201d ."]
    #[inline(always)]
    pub fn user(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x1,
        1,
        0,
        hf_operation::User,
        HfOperation_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x1,
            1,
            0,
            hf_operation::User,
            HfOperation_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfOperation {
    #[inline(always)]
    fn default() -> HfOperation {
        <crate::RegValueT<HfOperation_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_operation {
    pub struct Prog_SPEC;
    pub type Prog = crate::EnumBitfieldStruct<u8, Prog_SPEC>;
    impl Prog {
        #[doc = "0 There is no program operation requested or in progress or just finished."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Programming operation requested or in action or finished."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Erase_SPEC;
    pub type Erase = crate::EnumBitfieldStruct<u8, Erase_SPEC>;
    impl Erase {
        #[doc = "0 There is no erase operation requested or in progress or just finished"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Erase Verify operation requested or in action or finished."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct User_SPEC;
    pub type User = crate::EnumBitfieldStruct<u8, User_SPEC>;
    impl User {
        #[doc = "0 There is no user operation requested or in progress or just finished"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 User operation requested or in action or finished."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfPcontrol_SPEC;
impl crate::sealed::RegSpec for HfPcontrol_SPEC {
    type DataType = u32;
}
#[doc = "Power Control Register\n resetvalue={Application Reset:0x30000}"]
pub type HfPcontrol = crate::RegValueT<HfPcontrol_SPEC>;

impl HfPcontrol {
    #[doc = "Sleep Mode Control   SLEEP. This bit field determines the Sleep mode."]
    #[inline(always)]
    pub fn sleep(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        hf_pcontrol::Sleep,
        HfPcontrol_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            hf_pcontrol::Sleep,
            HfPcontrol_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Dynamic Idle Enable   IDLE"]
    #[inline(always)]
    pub fn idle(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x3,
        1,
        0,
        hf_pcontrol::Idle,
        HfPcontrol_SPEC,
        crate::common::W,
    > {
        crate::common::RegisterField::<
            8,
            0x3,
            1,
            0,
            hf_pcontrol::Idle,
            HfPcontrol_SPEC,
            crate::common::W,
        >::from_register(self, 0)
    }
    #[doc = "Demand Enable   DEMAND"]
    #[inline(always)]
    pub fn demand(
        self,
    ) -> crate::common::RegisterField<
        10,
        0x3,
        1,
        0,
        hf_pcontrol::Demand,
        HfPcontrol_SPEC,
        crate::common::W,
    > {
        crate::common::RegisterField::<
            10,
            0x3,
            1,
            0,
            hf_pcontrol::Demand,
            HfPcontrol_SPEC,
            crate::common::W,
        >::from_register(self, 0)
    }
    #[doc = "External Sleep Mode Request Disable   ESLDIS. Used for Sleep Mode control. The Sleep Mode request is generated by the SCU."]
    #[inline(always)]
    pub fn esldis(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x3,
        1,
        0,
        hf_pcontrol::Esldis,
        HfPcontrol_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            16,
            0x3,
            1,
            0,
            hf_pcontrol::Esldis,
            HfPcontrol_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Programming Supply 5V   PR5V. Selects the supply for programming."]
    #[inline(always)]
    pub fn pr5v(
        self,
    ) -> crate::common::RegisterField<
        30,
        0x3,
        1,
        0,
        hf_pcontrol::Pr5V,
        HfPcontrol_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            30,
            0x3,
            1,
            0,
            hf_pcontrol::Pr5V,
            HfPcontrol_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfPcontrol {
    #[inline(always)]
    fn default() -> HfPcontrol {
        <crate::RegValueT<HfPcontrol_SPEC> as RegisterValue<_>>::new(196608)
    }
}
pub mod hf_pcontrol {
    pub struct Sleep_SPEC;
    pub type Sleep = crate::EnumBitfieldStruct<u8, Sleep_SPEC>;
    impl Sleep {
        #[doc = "00 Normal operation or Wake up"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Normal operation or Wake up"]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Normal operation or Wake up"]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Sleep mode is requested"]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Idle_SPEC;
    pub type Idle = crate::EnumBitfieldStruct<u8, Idle_SPEC>;
    impl Idle {
        #[doc = "00 Disable Dynamic Idle   DMU HF PSTATUS .IDLE   0  ."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Disable Dynamic Idle   DMU HF PSTATUS .IDLE   0  ."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Disable Dynamic Idle   DMU HF PSTATUS .IDLE   0  ."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Enable Dynamic Idle   DMU HF PSTATUS .IDLE   1  ."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Demand_SPEC;
    pub type Demand = crate::EnumBitfieldStruct<u8, Demand_SPEC>;
    impl Demand {
        #[doc = "00 Disable Demand Mode   DMU HF PSTATUS .DEMAND   0  ."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Disable Demand Mode   DMU HF PSTATUS .DEMAND   0  ."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Disable Demand Mode   DMU HF PSTATUS .DEMAND   0  ."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Enable Demand Mode   DMU HF PSTATUS .DEMAND   1  ."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Esldis_SPEC;
    pub type Esldis = crate::EnumBitfieldStruct<u8, Esldis_SPEC>;
    impl Esldis {
        #[doc = "00 Sleep Mode request is enabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Sleep mode request is disabled. Sleep Mode cannot be entered."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Sleep Mode request is disabled. Sleep Mode cannot be entered."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Sleep Mode request is disabled. Sleep Mode cannot be entered."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Pr5V_SPEC;
    pub type Pr5V = crate::EnumBitfieldStruct<u8, Pr5V_SPEC>;
    impl Pr5V {
        #[doc = "00 P3V The programming voltage is internally generated."]
        pub const P_3_V_0: Self = Self::new(0);
        #[doc = "01 P3V The programming voltage is internally generated."]
        pub const P_3_V_1: Self = Self::new(1);
        #[doc = "10 P3V The programming voltage is internally generated."]
        pub const P_3_V_2: Self = Self::new(2);
        #[doc = "11 P5V As programming voltage the external 5 V supply is used."]
        pub const P_5_V_3: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfProcondbg_SPEC;
impl crate::sealed::RegSpec for HfProcondbg_SPEC {
    type DataType = u32;
}
#[doc = "Debug Interface Protection Configuration\n resetvalue={Application Reset:0x100,CFS Value:0x0}"]
pub type HfProcondbg = crate::RegValueT<HfProcondbg_SPEC>;

impl HfProcondbg {
    #[doc = "OCDS Disabled   OCDSDIS. This bit indicates whether the OCDS is configured as locked."]
    #[inline(always)]
    pub fn ocdsdis(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        hf_procondbg::Ocdsdis,
        HfProcondbg_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            hf_procondbg::Ocdsdis,
            HfProcondbg_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Debug Interface Locked   DBGIFLCK. This bit indicates whether the debug interface is configured as locked."]
    #[inline(always)]
    pub fn dbgiflck(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        hf_procondbg::Dbgiflck,
        HfProcondbg_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            hf_procondbg::Dbgiflck,
            HfProcondbg_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Entered Debug Mode   EDM. This bit indicates whether the debug interface has been opened via Destructive Debug Entry. Consequently the CAN and FlexRay operation is made impossible"]
    #[inline(always)]
    pub fn edm(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x3,
        1,
        0,
        hf_procondbg::Edm,
        HfProcondbg_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x3,
            1,
            0,
            hf_procondbg::Edm,
            HfProcondbg_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfProcondbg {
    #[inline(always)]
    fn default() -> HfProcondbg {
        <crate::RegValueT<HfProcondbg_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_procondbg {
    pub struct Ocdsdis_SPEC;
    pub type Ocdsdis = crate::EnumBitfieldStruct<u8, Ocdsdis_SPEC>;
    impl Ocdsdis {
        #[doc = "0 No OCDS lock configured in UCB DBG."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OCDS lock configured in UCB DBG."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Dbgiflck_SPEC;
    pub type Dbgiflck = crate::EnumBitfieldStruct<u8, Dbgiflck_SPEC>;
    impl Dbgiflck {
        #[doc = "0 No debug interface lock configured in UCB DBG."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Debug interface lock configured in UCB DBG."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Edm_SPEC;
    pub type Edm = crate::EnumBitfieldStruct<u8, Edm_SPEC>;
    impl Edm {
        #[doc = "00  Debug not entered   device operation not affected."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01  Debug not entered   device operation not affected."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10  Debug not entered   device operation not affected."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11  Debug entered   CAN and FlexRay operation affected."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfProcondf_SPEC;
impl crate::sealed::RegSpec for HfProcondf_SPEC {
    type DataType = u32;
}
#[doc = "DFLASH Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type HfProcondf = crate::RegValueT<HfProcondf_SPEC>;

impl HfProcondf {
    #[doc = "DF0 EEPROM Locked for Write Protection   L. This bit indicates whether the DFLASH sectors EEPROMx are write        protected."]
    #[inline(always)]
    pub fn l(
        self,
    ) -> crate::common::RegisterField<0, 0x1, 1, 0, hf_procondf::L, HfProcondf_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            hf_procondf::L,
            HfProcondf_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Hysteresis enable. When enabled by OSCCFG these fields are copied to SCU OSCCON.HYSEN"]
    #[inline(always)]
    pub fn hysen(
        self,
    ) -> crate::common::RegisterField<
        3,
        0x1,
        1,
        0,
        hf_procondf::Hysen,
        HfProcondf_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            3,
            0x1,
            1,
            0,
            hf_procondf::Hysen,
            HfProcondf_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Hysteresis Control. When enabled by OSCCFG these fields are copied to SCU OSCCON.HYSCTL"]
    #[inline(always)]
    pub fn hysctl(
        self,
    ) -> crate::common::RegisterField<
        4,
        0x3,
        1,
        0,
        hf_procondf::Hysctl,
        HfProcondf_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            4,
            0x3,
            1,
            0,
            hf_procondf::Hysctl,
            HfProcondf_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Amplitude Control. When enabled by OSCCFG these fields are copied to SCU OSCCON.AMPCTL"]
    #[inline(always)]
    pub fn ampctl(
        self,
    ) -> crate::common::RegisterField<
        6,
        0x3,
        1,
        0,
        hf_procondf::Ampctl,
        HfProcondf_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            6,
            0x3,
            1,
            0,
            hf_procondf::Ampctl,
            HfProcondf_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "OSC Configuration by SSW   OSCCFG. This bit indicates whether the oscillator configuration  fields  CAPxEN         APREN  MODE  HYSEN  HYSCTL  AMPCTL  are installed by the SSW in        SCU OSCCON."]
    #[inline(always)]
    pub fn osccfg(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x1,
        1,
        0,
        hf_procondf::Osccfg,
        HfProcondf_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            8,
            0x1,
            1,
            0,
            hf_procondf::Osccfg,
            HfProcondf_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "OSC Mode   MODE. When enabled by OSCCFG this field is copied to SCU OSCCON.MODE."]
    #[inline(always)]
    pub fn mode(
        self,
    ) -> crate::common::RegisterField<9, 0x3, 1, 0, u8, HfProcondf_SPEC, crate::common::R> {
        crate::common::RegisterField::<9,0x3,1,0,u8, HfProcondf_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "OSC Amplitude Regulation Enable   APREN. When enabled by OSCCFG this field is copied to SCU OSCCON.APREN."]
    #[inline(always)]
    pub fn apren(
        self,
    ) -> crate::common::RegisterFieldBool<11, 1, 0, HfProcondf_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<11,1,0,HfProcondf_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "OSC Capacitance 3 Enable  x 0 3    CAP3EN. When enabled by OSCCFG these fields are copied to SCU OSCCON.CAPxEN."]
    #[inline(always)]
    pub fn cap0en(
        self,
    ) -> crate::common::RegisterFieldBool<12, 1, 0, HfProcondf_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<12,1,0,HfProcondf_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "OSC Capacitance 3 Enable  x 0 3    CAP3EN. When enabled by OSCCFG these fields are copied to SCU OSCCON.CAPxEN."]
    #[inline(always)]
    pub fn cap1en(
        self,
    ) -> crate::common::RegisterFieldBool<13, 1, 0, HfProcondf_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<13,1,0,HfProcondf_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "OSC Capacitance 3 Enable  x 0 3    CAP3EN. When enabled by OSCCFG these fields are copied to SCU OSCCON.CAPxEN."]
    #[inline(always)]
    pub fn cap2en(
        self,
    ) -> crate::common::RegisterFieldBool<14, 1, 0, HfProcondf_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<14,1,0,HfProcondf_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "OSC Capacitance 3 Enable  x 0 3    CAP3EN. When enabled by OSCCFG these fields are copied to SCU OSCCON.CAPxEN."]
    #[inline(always)]
    pub fn cap3en(
        self,
    ) -> crate::common::RegisterFieldBool<15, 1, 0, HfProcondf_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<15,1,0,HfProcondf_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "ESR0 Prolongation Counter   ESR0CNT. Used to configure the ESR0 delay. Evaluation by SSW."]
    #[inline(always)]
    pub fn esr0cnt(
        self,
    ) -> crate::common::RegisterField<16, 0xfff, 1, 0, u16, HfProcondf_SPEC, crate::common::R> {
        crate::common::RegisterField::<16,0xfff,1,0,u16, HfProcondf_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Read Protection Configuration   RPRO. This bit indicates whether read protection is configured for DFLASH sectors HSMx."]
    #[inline(always)]
    pub fn rpro(
        self,
    ) -> crate::common::RegisterField<
        31,
        0x1,
        1,
        0,
        hf_procondf::Rpro,
        HfProcondf_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            31,
            0x1,
            1,
            0,
            hf_procondf::Rpro,
            HfProcondf_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfProcondf {
    #[inline(always)]
    fn default() -> HfProcondf {
        <crate::RegValueT<HfProcondf_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_procondf {
    pub struct L_SPEC;
    pub type L = crate::EnumBitfieldStruct<u8, L_SPEC>;
    impl L {
        #[doc = "0 No write        protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Write        protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hysen_SPEC;
    pub type Hysen = crate::EnumBitfieldStruct<u8, Hysen_SPEC>;
    impl Hysen {
        #[doc = "Hysteresis is disabled"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "Hysteresis is enabled"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hysctl_SPEC;
    pub type Hysctl = crate::EnumBitfieldStruct<u8, Hysctl_SPEC>;
    impl Hysctl {
        #[doc = "Hysteresis setting 1"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "Hysteresis setting 2"]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "Hysteresis setting 3"]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "Hysteresis setting 4"]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Ampctl_SPEC;
    pub type Ampctl = crate::EnumBitfieldStruct<u8, Ampctl_SPEC>;
    impl Ampctl {
        #[doc = "Amplitude control setting 1"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "Amplitude control setting 2"]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "Amplitude control setting 3"]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "Amplitude control setting 4"]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Osccfg_SPEC;
    pub type Osccfg = crate::EnumBitfieldStruct<u8, Osccfg_SPEC>;
    impl Osccfg {
        #[doc = "0 SSW does not install oscillator configuration values from this register into SCU OSCCON."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 SSW configures oscillator with the configuration values in this register by installing the relevant contents into SCU OSCCON."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Rpro_SPEC;
    pub type Rpro = crate::EnumBitfieldStruct<u8, Rpro_SPEC>;
    impl Rpro {
        #[doc = "0 No read protection configured"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read protection and write protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfProconifx_SPEC;
impl crate::sealed::RegSpec for HfProconifx_SPEC {
    type DataType = u32;
}
#[doc = "DF0 Infineon Mode Control\n resetvalue={System Reset:0x0,CFS Value:0x300}"]
pub type HfProconifx = crate::RegValueT<HfProconifx_SPEC>;

impl HfProconifx {
    #[doc = "DF0 Infineon Mode Control   MODE. Configures the DF0 mode when Infineon has control."]
    #[inline(always)]
    pub fn mode(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        hf_proconifx::Mode,
        HfProconifx_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            hf_proconifx::Mode,
            HfProconifx_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "DF0 Mode Select   SELECT. Selects between Infineon and user control of the DF0 mode."]
    #[inline(always)]
    pub fn select(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x3,
        1,
        0,
        hf_proconifx::Select,
        HfProconifx_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            8,
            0x3,
            1,
            0,
            hf_proconifx::Select,
            HfProconifx_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfProconifx {
    #[inline(always)]
    fn default() -> HfProconifx {
        <crate::RegValueT<HfProconifx_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_proconifx {
    pub struct Mode_SPEC;
    pub type Mode = crate::EnumBitfieldStruct<u8, Mode_SPEC>;
    impl Mode {
        #[doc = "00 Single Ended."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Complement        Sensing."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Complement        Sensing."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Complement        Sensing."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Select_SPEC;
    pub type Select = crate::EnumBitfieldStruct<u8, Select_SPEC>;
    impl Select {
        #[doc = "00 DMU HF PROCONIFX.MODE"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 DMU HF PROCONUSR.MODE"]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 DMU HF PROCONUSR.MODE"]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 DMU HF PROCONUSR.MODE"]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfProconpf_SPEC;
impl crate::sealed::RegSpec for HfProconpf_SPEC {
    type DataType = u32;
}
#[doc = "PFLASH Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type HfProconpf = crate::RegValueT<HfProconpf_SPEC>;

impl HfProconpf {
    #[doc = "Read Protection Configuration   RPRO. This bit indicates whether read protection is configured for PFLASH sectors."]
    #[inline(always)]
    pub fn rpro(
        self,
    ) -> crate::common::RegisterField<
        31,
        0x1,
        1,
        0,
        hf_proconpf::Rpro,
        HfProconpf_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            31,
            0x1,
            1,
            0,
            hf_proconpf::Rpro,
            HfProconpf_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfProconpf {
    #[inline(always)]
    fn default() -> HfProconpf {
        <crate::RegValueT<HfProconpf_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_proconpf {
    pub struct Rpro_SPEC;
    pub type Rpro = crate::EnumBitfieldStruct<u8, Rpro_SPEC>;
    impl Rpro {
        #[doc = "0 No read protection configured"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read protection and write protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfProconram_SPEC;
impl crate::sealed::RegSpec for HfProconram_SPEC {
    type DataType = u32;
}
#[doc = "RAM Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type HfProconram = crate::RegValueT<HfProconram_SPEC>;

impl HfProconram {
    #[doc = "RAM Initialization by SSW Control   RAMIN. These bits defined whether the RAMs selected by the field RAMINSEL are initialized. This field determines also if a RAM is initialized before MBIST access is granted. In all  Init    cases a RAM is initialized before MBIST access is enabled  in the  No Init  case a RAM is not erased. This is independent of the memory selection with RAMINSEL for initialization during startup  see MTU chapter ."]
    #[inline(always)]
    pub fn ramin(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        hf_proconram::Ramin,
        HfProconram_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            hf_proconram::Ramin,
            HfProconram_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "RAM Initialization Selection   RAMINSEL. These bits select which memories are initialized when the RAM initialization is configured with RAMIN. See CROSSREFERENCE ."]
    #[inline(always)]
    pub fn raminsel(
        self,
    ) -> crate::common::RegisterField<16, 0x3f, 1, 0, u8, HfProconram_SPEC, crate::common::R> {
        crate::common::RegisterField::<16,0x3f,1,0,u8, HfProconram_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "LMU Initialization Selection   LMUINSEL. These bits select which memories are initialized when the RAM initialization is configured with RAMIN. See CROSSREFERENCE ."]
    #[inline(always)]
    pub fn lmuinsel(
        self,
    ) -> crate::common::RegisterField<24, 0x7f, 1, 0, u8, HfProconram_SPEC, crate::common::R> {
        crate::common::RegisterField::<24,0x7f,1,0,u8, HfProconram_SPEC,crate::common::R>::from_register(self,0)
    }
}
impl core::default::Default for HfProconram {
    #[inline(always)]
    fn default() -> HfProconram {
        <crate::RegValueT<HfProconram_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_proconram {
    pub struct Ramin_SPEC;
    pub type Ramin = crate::EnumBitfieldStruct<u8, Ramin_SPEC>;
    impl Ramin {
        #[doc = "00 Init All RAM initialization is performed after cold power on  reset and warm power on reset."]
        pub const INIT_ALL_0: Self = Self::new(0);
        #[doc = "01 Init Warm RAM initialization is performed after warm power on resets but not after cold power on reset  not recommended ."]
        pub const INIT_WARM_1: Self = Self::new(1);
        #[doc = "10 Init Cold RAM initialization is performed after cold power on reset."]
        pub const INIT_COLD_2: Self = Self::new(2);
        #[doc = "11 No Init No RAM initialization is performed."]
        pub const NO_INIT_3: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfProcontp_SPEC;
impl crate::sealed::RegSpec for HfProcontp_SPEC {
    type DataType = u32;
}
#[doc = "Tuning Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type HfProcontp = crate::RegValueT<HfProcontp_SPEC>;

impl HfProcontp {
    #[doc = "Tuning Protection   TP. This bit indicates whether tuning protection is installed or not."]
    #[inline(always)]
    pub fn tp(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        hf_procontp::Tp,
        HfProcontp_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            hf_procontp::Tp,
            HfProcontp_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Boot Mode Lock   BML. Used by the SSW to restrict the boot mode selection."]
    #[inline(always)]
    pub fn bml(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x3,
        1,
        0,
        hf_procontp::Bml,
        HfProcontp_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            8,
            0x3,
            1,
            0,
            hf_procontp::Bml,
            HfProcontp_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Enable SOTA mode   SWAPEN. This field enables the entry into  Software update Over the Air SOTA  mode . In this mode  an alternate PFLASH address map can be selected. Please refer to the SOTA section of the Introduction chapter for more details."]
    #[inline(always)]
    pub fn swapen(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x3,
        1,
        0,
        hf_procontp::Swapen,
        HfProcontp_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            16,
            0x3,
            1,
            0,
            hf_procontp::Swapen,
            HfProcontp_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Disable direct LPB access. Disable direct LPB access by the CPU to the Local PFlash Bank  LPB ."]
    #[inline(always)]
    pub fn cpu0ddis0(
        self,
    ) -> crate::common::RegisterField<
        18,
        0x1,
        1,
        0,
        hf_procontp::Cpu0Ddis0,
        HfProcontp_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            18,
            0x1,
            1,
            0,
            hf_procontp::Cpu0Ddis0,
            HfProcontp_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Disable direct LPB access. Disable direct LPB access by the CPU to the Local PFlash Bank  LPB ."]
    #[inline(always)]
    pub fn cpu1ddis1(
        self,
    ) -> crate::common::RegisterField<
        19,
        0x1,
        1,
        0,
        hf_procontp::Cpu1Ddis1,
        HfProcontp_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            19,
            0x1,
            1,
            0,
            hf_procontp::Cpu1Ddis1,
            HfProcontp_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfProcontp {
    #[inline(always)]
    fn default() -> HfProcontp {
        <crate::RegValueT<HfProcontp_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_procontp {
    pub struct Tp_SPEC;
    pub type Tp = crate::EnumBitfieldStruct<u8, Tp_SPEC>;
    impl Tp {
        #[doc = "0 Tuning protection is not configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Tuning protection is configured and installed  if correctly confirmed."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Bml_SPEC;
    pub type Bml = crate::EnumBitfieldStruct<u8, Bml_SPEC>;
    impl Bml {
        #[doc = "00 Boot flow with standard evaluation of boot headers."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Restricted boot flow  never evaluating HWCFG pins and without fallback to boot loader."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Restricted boot flow  never evaluating HWCFG pins and without fallback to boot loader."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Restricted boot flow  never evaluating HWCFG pins and without fallback to boot loader."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Swapen_SPEC;
    pub type Swapen = crate::EnumBitfieldStruct<u8, Swapen_SPEC>;
    impl Swapen {
        #[doc = "00 Disabled SOTA        mode disabled."]
        pub const DISABLED_0: Self = Self::new(0);
        #[doc = "01 Disabled SOTA        mode disabled."]
        pub const DISABLED_1: Self = Self::new(1);
        #[doc = "10 Disabled SOTA        mode disabled."]
        pub const DISABLED_2: Self = Self::new(2);
        #[doc = "11 Enabled SOTA        mode enabled."]
        pub const ENABLED_3: Self = Self::new(3);
    }
    pub struct Cpu0Ddis0_SPEC;
    pub type Cpu0Ddis0 = crate::EnumBitfieldStruct<u8, Cpu0Ddis0_SPEC>;
    impl Cpu0Ddis0 {
        #[doc = "Direct LPB access is enabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "Direct LPB access is disabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cpu1Ddis1_SPEC;
    pub type Cpu1Ddis1 = crate::EnumBitfieldStruct<u8, Cpu1Ddis1_SPEC>;
    impl Cpu1Ddis1 {
        #[doc = "Direct LPB access is enabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "Direct LPB access is disabled."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfProconusr_SPEC;
impl crate::sealed::RegSpec for HfProconusr_SPEC {
    type DataType = u32;
}
#[doc = "DF0 User Mode Control\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type HfProconusr = crate::RegValueT<HfProconusr_SPEC>;

impl HfProconusr {
    #[doc = "DF0 User Mode Control   MODE. Configures the DF0 mode when the user has control."]
    #[inline(always)]
    pub fn mode(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        hf_proconusr::Mode,
        HfProconusr_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            hf_proconusr::Mode,
            HfProconusr_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfProconusr {
    #[inline(always)]
    fn default() -> HfProconusr {
        <crate::RegValueT<HfProconusr_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_proconusr {
    pub struct Mode_SPEC;
    pub type Mode = crate::EnumBitfieldStruct<u8, Mode_SPEC>;
    impl Mode {
        #[doc = "00 Single Ended."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Complement Sensing."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Complement Sensing."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Complement Sensing."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfProtect_SPEC;
impl crate::sealed::RegSpec for HfProtect_SPEC {
    type DataType = u32;
}
#[doc = "Flash Protection Status Register\n resetvalue={Application Reset:0x0}"]
pub type HfProtect = crate::RegValueT<HfProtect_SPEC>;

impl HfProtect {
    #[doc = "PFLASH Protection Disabled   PRODISP. The protection configured by UCB PFLASH ORIG and UCB PFLASH COPY was        successfully disabled by supplying the correct password to   8220 Disable        Protection  8221 . Cleared with command   8220 Resume Protection  8221 ."]
    #[inline(always)]
    pub fn prodisp(
        self,
    ) -> crate::common::RegisterFieldBool<0, 1, 0, HfProtect_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<0, 1, 0, HfProtect_SPEC, crate::common::R>::from_register(
            self, 0,
        )
    }
    #[doc = "DFLASH Protection Disabled   PRODISD. The protection configured by UCB DFLASH ORIG and UCB DFLASH COPY was        successfully disabled by supplying the correct password to   8220 Disable        Protection  8221 . Cleared with command   8220 Resume Protection  8221 ."]
    #[inline(always)]
    pub fn prodisd(
        self,
    ) -> crate::common::RegisterFieldBool<1, 1, 0, HfProtect_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<1, 1, 0, HfProtect_SPEC, crate::common::R>::from_register(
            self, 0,
        )
    }
    #[doc = "Debug Interface Password Protection Disabled   PRODISDBG. The password configured by UCB DBG ORIG and UCB DBG COPY was correctly        received with   8220 Disable Protection  8221 . When DMU SP PROCONHSMCFG.DESTDBG is   8220 destructive  8221  then only the SSW can        disable this protection. This means PRODISDBG is only set when the password matches and  DESTDBG            8220 non destructive  8221  or SCU STCON.STP   0 . Cleared with command   8220 Resume Protection  8221 ."]
    #[inline(always)]
    pub fn prodisdbg(
        self,
    ) -> crate::common::RegisterFieldBool<2, 1, 0, HfProtect_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<2, 1, 0, HfProtect_SPEC, crate::common::R>::from_register(
            self, 0,
        )
    }
    #[doc = "Erase Counter Priority Protection Disabled   PRODISEC. The protection configured by UCB ECPRIO ORIG and UCB ECPRIO COPY was        successfully disabled by supplying the correct password to   8220 Disable        Protection  8221 . Cleared with command  quot Resume Protection quot ."]
    #[inline(always)]
    pub fn prodisec(
        self,
    ) -> crate::common::RegisterFieldBool<3, 1, 0, HfProtect_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<3, 1, 0, HfProtect_SPEC, crate::common::R>::from_register(
            self, 0,
        )
    }
    #[doc = "BMHD Protection Disabled   PRODISBMHD. The protection configured by UCB BMHD0 ORIG and UCB BMHD0 COPY was        successfully disabled by supplying the correct password to   8220 Disable        Protection  8221 . Cleared with command  quot Resume Protection quot ."]
    #[inline(always)]
    pub fn prodisbmhd(
        self,
    ) -> crate::common::RegisterFieldBool<4, 1, 0, HfProtect_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<4, 1, 0, HfProtect_SPEC, crate::common::R>::from_register(
            self, 0,
        )
    }
    #[doc = "UCB SWAP protection Disabled   PRODISSWAP. The protection configured by UCB SWAP ORIG and UCB SWAP COPY was        successfully disabled by supplying the correct password to   8220 Disable        Protection  8221 . Cleared with command  quot Resume Protection quot ."]
    #[inline(always)]
    pub fn prodisswap(
        self,
    ) -> crate::common::RegisterFieldBool<5, 1, 0, HfProtect_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<5, 1, 0, HfProtect_SPEC, crate::common::R>::from_register(
            self, 0,
        )
    }
    #[doc = "Program Flash Protection Disable PRODISP5. The protection configured for PFx by UCB PFLASH ORIG and UCB PFLASH COPY        was successfully disabled by supplying the correct password to   8220 Disable        Protection  8221 . Cleared with command  quot Resume Protection quot ."]
    #[inline(always)]
    pub fn prodisp00(
        self,
    ) -> crate::common::RegisterFieldBool<8, 1, 0, HfProtect_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<8, 1, 0, HfProtect_SPEC, crate::common::R>::from_register(
            self, 0,
        )
    }
    #[doc = "Program Flash Protection Disable PRODISP5. The protection configured for PFx by UCB PFLASH ORIG and UCB PFLASH COPY        was successfully disabled by supplying the correct password to   8220 Disable        Protection  8221 . Cleared with command  quot Resume Protection quot ."]
    #[inline(always)]
    pub fn prodisp11(
        self,
    ) -> crate::common::RegisterFieldBool<9, 1, 0, HfProtect_SPEC, crate::common::R> {
        crate::common::RegisterFieldBool::<9, 1, 0, HfProtect_SPEC, crate::common::R>::from_register(
            self, 0,
        )
    }
    #[doc = "Secure Retest Password Protection Disabled   SRT. Cleared with command  Resume Protection ."]
    #[inline(always)]
    pub fn srt(
        self,
    ) -> crate::common::RegisterField<
        24,
        0x1,
        1,
        0,
        hf_protect::Srt,
        HfProtect_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            24,
            0x1,
            1,
            0,
            hf_protect::Srt,
            HfProtect_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfProtect {
    #[inline(always)]
    fn default() -> HfProtect {
        <crate::RegValueT<HfProtect_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_protect {
    pub struct Srt_SPEC;
    pub type Srt = crate::EnumBitfieldStruct<u8, Srt_SPEC>;
    impl Srt {
        #[doc = "0 Secure Retest protection is not disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Secure Retest protection is disabled."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfPsizEp_SPEC;
impl crate::sealed::RegSpec for HfPsizEp_SPEC {
    type DataType = u32;
}
#[doc = "PFLASH Bank 0 Size Configuration Register\n resetvalue={Application Reset:0x0C0,CFS Value:0x0C0,CFS Value:0x0C0,CFS Value:0x0,CFS Value:0x0,CFS Value:0x0,CFS Value:0x0}"]
pub type HfPsizEp = crate::RegValueT<HfPsizEp_SPEC>;

impl HfPsizEp {
    #[doc = "Size of Program Flash Bank PFp   SIZE. See CROSSREFERENCE ."]
    #[inline(always)]
    pub fn size(
        self,
    ) -> crate::common::RegisterField<6, 0x3, 1, 0, u8, HfPsizEp_SPEC, crate::common::RW> {
        crate::common::RegisterField::<6,0x3,1,0,u8, HfPsizEp_SPEC,crate::common::RW>::from_register(self,0)
    }
}
impl core::default::Default for HfPsizEp {
    #[inline(always)]
    fn default() -> HfPsizEp {
        <crate::RegValueT<HfPsizEp_SPEC> as RegisterValue<_>>::new(0)
    }
}

#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfPstatus_SPEC;
impl crate::sealed::RegSpec for HfPstatus_SPEC {
    type DataType = u32;
}
#[doc = "Power Status Register\n resetvalue={Application Reset:0x0}"]
pub type HfPstatus = crate::RegValueT<HfPstatus_SPEC>;

impl HfPstatus {
    #[doc = "Sleep Mode   SLEEP"]
    #[inline(always)]
    pub fn sleep(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        hf_pstatus::Sleep,
        HfPstatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            hf_pstatus::Sleep,
            HfPstatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Dynamic Idle   IDLE"]
    #[inline(always)]
    pub fn idle(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        hf_pstatus::Idle,
        HfPstatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            hf_pstatus::Idle,
            HfPstatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Demand   DEMAND. For Cranking Mode  DMU HF PSTATUS .DEMAND   1"]
    #[inline(always)]
    pub fn demand(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x1,
        1,
        0,
        hf_pstatus::Demand,
        HfPstatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x1,
            1,
            0,
            hf_pstatus::Demand,
            HfPstatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfPstatus {
    #[inline(always)]
    fn default() -> HfPstatus {
        <crate::RegValueT<HfPstatus_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_pstatus {
    pub struct Sleep_SPEC;
    pub type Sleep = crate::EnumBitfieldStruct<u8, Sleep_SPEC>;
    impl Sleep {
        #[doc = "0 DMU is not in        Sleep Mode"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 DMU is in Sleep        Mode"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Idle_SPEC;
    pub type Idle = crate::EnumBitfieldStruct<u8, Idle_SPEC>;
    impl Idle {
        #[doc = "0 PFLASH is not in Dynamic Idle mode."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 PFLASH is in Dynamic Idle mode."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Demand_SPEC;
    pub type Demand = crate::EnumBitfieldStruct<u8, Demand_SPEC>;
    impl Demand {
        #[doc = "0 PFLASH prefetch buffers enabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 PFLASH prefetch buffers disabled."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfPwait_SPEC;
impl crate::sealed::RegSpec for HfPwait_SPEC {
    type DataType = u32;
}
#[doc = "PFLASH Wait Cycle Register\n resetvalue={System Reset:0x716040B}"]
pub type HfPwait = crate::RegValueT<HfPwait_SPEC>;

impl HfPwait {
    #[doc = "Operation Mode   RFLASH. PFLASH Wait Cycles This bit field defines the number of SRI clock cycles for a PFLASH Bank        p read access."]
    #[inline(always)]
    pub fn rflash(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3f,
        1,
        0,
        hf_pwait::Rflash,
        HfPwait_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            0,
            0x3f,
            1,
            0,
            hf_pwait::Rflash,
            HfPwait_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Operation Mode   RECC. PFLASH Error Correction Cycles This bit field defines the number of SRI clock cycles for the PFLASH        Bank p ECC correction."]
    #[inline(always)]
    pub fn recc(
        self,
    ) -> crate::common::RegisterField<8, 0x7, 1, 0, hf_pwait::Recc, HfPwait_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<8,0x7,1,0,hf_pwait::Recc, HfPwait_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Cranking Mode   CFLASH. PFLASH Wait Cycles This bit field defines the number of SRI clock cycles for a PFLASH Bank        p read access."]
    #[inline(always)]
    pub fn cflash(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x3f,
        1,
        0,
        hf_pwait::Cflash,
        HfPwait_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            16,
            0x3f,
            1,
            0,
            hf_pwait::Cflash,
            HfPwait_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Cranking Mode   CECC. PFLASH Error Correction Cycles This bit field defines the number of SRI clock cycles for the PFLASH        Bank p ECC correction."]
    #[inline(always)]
    pub fn cecc(
        self,
    ) -> crate::common::RegisterField<24, 0x7, 1, 0, hf_pwait::Cecc, HfPwait_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<24,0x7,1,0,hf_pwait::Cecc, HfPwait_SPEC,crate::common::RW>::from_register(self,0)
    }
}
impl core::default::Default for HfPwait {
    #[inline(always)]
    fn default() -> HfPwait {
        <crate::RegValueT<HfPwait_SPEC> as RegisterValue<_>>::new(118883339)
    }
}
pub mod hf_pwait {
    pub struct Rflash_SPEC;
    pub type Rflash = crate::EnumBitfieldStruct<u8, Rflash_SPEC>;
    impl Rflash {
        #[doc = "0 Read access takes 2 fSRI clock cycles."]
        pub const CONST_00: Self = Self::new(0);
    }
    pub struct Recc_SPEC;
    pub type Recc = crate::EnumBitfieldStruct<u8, Recc_SPEC>;
    impl Recc {
        #[doc = "0 Error        correction takes 1 fSRI clock cycle."]
        pub const CONST_00: Self = Self::new(0);
    }
    pub struct Cflash_SPEC;
    pub type Cflash = crate::EnumBitfieldStruct<u8, Cflash_SPEC>;
    impl Cflash {
        #[doc = "0 Read access takes 2 fSRI clock cycles."]
        pub const CONST_00: Self = Self::new(0);
    }
    pub struct Cecc_SPEC;
    pub type Cecc = crate::EnumBitfieldStruct<u8, Cecc_SPEC>;
    impl Cecc {
        #[doc = "0 Error        correction takes 1 fSRI clock cycle."]
        pub const CONST_00: Self = Self::new(0);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfStatus_SPEC;
impl crate::sealed::RegSpec for HfStatus_SPEC {
    type DataType = u32;
}
#[doc = "Flash Status Register\n resetvalue={Application Reset:0x0FF}"]
pub type HfStatus = crate::RegValueT<HfStatus_SPEC>;

impl HfStatus {
    #[doc = "Data Flash Bank 0 Busy   D0BUSY. HW controlled status flag. Indication of busy state of DFLASH bank  160 0 because of active execution of        an operation  DF0 busy state is also indicated during Flash startup        after reset or in sleep mode  while in busy state the DF0 does not allow        read access."]
    #[inline(always)]
    pub fn d0busy(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        hf_status::D0Busy,
        HfStatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            hf_status::D0Busy,
            HfStatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Data Flash Bank 1 Busy   D1BUSY. HW controlled status flag. Indication of busy state of DFLASH bank  160 1 because of active execution of        an operation  DF1 busy state is also indicated during Flash startup        after reset or in sleep mode  while in busy state the DF1 does not allow        read access. Bit is not set for program erase operations initiated by the HSM        interface."]
    #[inline(always)]
    pub fn d1busy(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        hf_status::D1Busy,
        HfStatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            hf_status::D1Busy,
            HfStatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Program Flash PF5BUSY   P5BUSY. HW controlled status flag. Indication of busy state of PFx because of active execution of an        operation  PFx busy state is also indicated during Flash startup after        reset or in sleep mode  while in busy state the PFx does not allow read        access."]
    #[inline(always)]
    pub fn p0busy(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x1,
        1,
        0,
        hf_status::P0Busy,
        HfStatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x1,
            1,
            0,
            hf_status::P0Busy,
            HfStatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Program Flash PF5BUSY   P5BUSY. HW controlled status flag. Indication of busy state of PFx because of active execution of an        operation  PFx busy state is also indicated during Flash startup after        reset or in sleep mode  while in busy state the PFx does not allow read        access."]
    #[inline(always)]
    pub fn p1busy(
        self,
    ) -> crate::common::RegisterField<
        3,
        0x1,
        1,
        0,
        hf_status::P1Busy,
        HfStatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            3,
            0x1,
            1,
            0,
            hf_status::P1Busy,
            HfStatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Flash Array Busy   FABUSY. HW controlled status flag. Or ed indication of busy state of all Flash        array banks  gated with DMU HF CFTEST.CFTM. This flag must be ignored by application software  It is intended for          testing purposes only. This flag is directly generated from the BUSY          flags generated by the FSI and has therefore another timing than the          specific busy flag in STATUS. Internal busy flag for testing purposes. Must be ignored by application        software. This may only use PxBUSY and DxBUSY."]
    #[inline(always)]
    pub fn fabusy(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x1,
        1,
        0,
        hf_status::Fabusy,
        HfStatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            16,
            0x1,
            1,
            0,
            hf_status::Fabusy,
            HfStatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Flash Wafer State   FLW. HW controlled status flag."]
    #[inline(always)]
    pub fn flw(
        self,
    ) -> crate::common::RegisterField<17, 0x1, 1, 0, hf_status::Flw, HfStatus_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<17,0x1,1,0,hf_status::Flw, HfStatus_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Flash Unlocked State   FLU. HW controlled status flag."]
    #[inline(always)]
    pub fn flu(
        self,
    ) -> crate::common::RegisterField<18, 0x1, 1, 0, hf_status::Flu, HfStatus_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<18,0x1,1,0,hf_status::Flu, HfStatus_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Flash Delivery State   FLR. HW controlled status flag."]
    #[inline(always)]
    pub fn flr(
        self,
    ) -> crate::common::RegisterField<19, 0x1, 1, 0, hf_status::Flr, HfStatus_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<19,0x1,1,0,hf_status::Flr, HfStatus_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Data Flash in Page Mode   DFPAGE. HW controlled status flag. Set with Enter Page Mode for DFLASH  cleared with Write Page command. This bit is not set by   8220 Enter Page Mode  8221  initiated by the HSM interface. Read accesses are allowed while in page mode."]
    #[inline(always)]
    pub fn dfpage(
        self,
    ) -> crate::common::RegisterField<
        20,
        0x1,
        1,
        0,
        hf_status::Dfpage,
        HfStatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            20,
            0x1,
            1,
            0,
            hf_status::Dfpage,
            HfStatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Program Flash in Page Mode   PFPAGE. HW controlled status flag. Set with Enter Page Mode for Flash  cleared with Write Page command This bit is not set by   8220 Enter Page Mode  8221  initiated by the HSM interface. Read accesses are allowed while in page mode."]
    #[inline(always)]
    pub fn pfpage(
        self,
    ) -> crate::common::RegisterField<
        21,
        0x1,
        1,
        0,
        hf_status::Pfpage,
        HfStatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            21,
            0x1,
            1,
            0,
            hf_status::Pfpage,
            HfStatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Field Return   FRET. HW controlled status flag. A device is in the Field Return mode when the FAR fuse is blown and          the FDEST pad is set high to sample the FAR fuse state."]
    #[inline(always)]
    pub fn fret(
        self,
    ) -> crate::common::RegisterField<22, 0x1, 1, 0, hf_status::Fret, HfStatus_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<
            22,
            0x1,
            1,
            0,
            hf_status::Fret,
            HfStatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Configuration Sector Confirmation   CFS"]
    #[inline(always)]
    pub fn cfs(
        self,
    ) -> crate::common::RegisterField<24, 0x3, 1, 0, hf_status::Cfs, HfStatus_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<24,0x3,1,0,hf_status::Cfs, HfStatus_SPEC,crate::common::R>::from_register(self,0)
    }
}
impl core::default::Default for HfStatus {
    #[inline(always)]
    fn default() -> HfStatus {
        <crate::RegValueT<HfStatus_SPEC> as RegisterValue<_>>::new(255)
    }
}
pub mod hf_status {
    pub struct D0Busy_SPEC;
    pub type D0Busy = crate::EnumBitfieldStruct<u8, D0Busy_SPEC>;
    impl D0Busy {
        #[doc = "0 DF0 ready  not busy  DF0 in operation mode."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 DF0 busy  DF0 not in operation mode."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct D1Busy_SPEC;
    pub type D1Busy = crate::EnumBitfieldStruct<u8, D1Busy_SPEC>;
    impl D1Busy {
        #[doc = "0 DF1 ready  not        busy  DF1 in operation mode."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 DF1 busy  DF1        not in operation mode."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct P0Busy_SPEC;
    pub type P0Busy = crate::EnumBitfieldStruct<u8, P0Busy_SPEC>;
    impl P0Busy {
        #[doc = "0 PFx ready  not        busy  PFx in operation mode."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 PFx busy  PFx        not in operation mode."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct P1Busy_SPEC;
    pub type P1Busy = crate::EnumBitfieldStruct<u8, P1Busy_SPEC>;
    impl P1Busy {
        #[doc = "0 PFx ready  not        busy  PFx in operation mode."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 PFx busy  PFx        not in operation mode."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Fabusy_SPEC;
    pub type Fabusy = crate::EnumBitfieldStruct<u8, Fabusy_SPEC>;
    impl Fabusy {
        #[doc = "0 Ready  all        Flash array banks are ready."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Busy and        DMU HF CFTEST.CFTM 1  one Flash array bank is busy with program or erase        operation or FSI is busy with recovery  read accesses not possible."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Flw_SPEC;
    pub type Flw = crate::EnumBitfieldStruct<u8, Flw_SPEC>;
    impl Flw {
        #[doc = "0 Flash is not in the Wafer State  i.e. Flash is initialized ."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash is in the Wafer State."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Flu_SPEC;
    pub type Flu = crate::EnumBitfieldStruct<u8, Flu_SPEC>;
    impl Flu {
        #[doc = "0 Flash is not in the Unlocked State."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash is in the Unlocked State."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Flr_SPEC;
    pub type Flr = crate::EnumBitfieldStruct<u8, Flr_SPEC>;
    impl Flr {
        #[doc = "0 Flash is not in the Delivery State."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash is in the Delivery State."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Dfpage_SPEC;
    pub type Dfpage = crate::EnumBitfieldStruct<u8, Dfpage_SPEC>;
    impl Dfpage {
        #[doc = "0 Data Flash not in page mode"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Data Flash in page mode"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Pfpage_SPEC;
    pub type Pfpage = crate::EnumBitfieldStruct<u8, Pfpage_SPEC>;
    impl Pfpage {
        #[doc = "0 Flash not in page mode."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash in page mode."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Fret_SPEC;
    pub type Fret = crate::EnumBitfieldStruct<u8, Fret_SPEC>;
    impl Fret {
        #[doc = "0 Device is not in Field Return mode."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Device is in Field Return mode."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cfs_SPEC;
    pub type Cfs = crate::EnumBitfieldStruct<u8, Cfs_SPEC>;
    impl Cfs {
        #[doc = "00 CFS state is UNREAD."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 CFS state is UNLOCKED."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 CFS state is CONFIRMED."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 CFS state is ERRORED."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct HfSuspend_SPEC;
impl crate::sealed::RegSpec for HfSuspend_SPEC {
    type DataType = u32;
}
#[doc = "Suspend Control Register\n resetvalue={Application Reset:0x0}"]
pub type HfSuspend = crate::RegValueT<HfSuspend_SPEC>;

impl HfSuspend {
    #[doc = "Suspend Request   REQ"]
    #[inline(always)]
    pub fn req(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        hf_suspend::Req,
        HfSuspend_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            hf_suspend::Req,
            HfSuspend_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Suspend Clear   CLR. Software write only active high clear of Suspend Error."]
    #[inline(always)]
    pub fn clr(
        self,
    ) -> crate::common::RegisterField<1, 0x1, 1, 0, hf_suspend::Clr, HfSuspend_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            hf_suspend::Clr,
            HfSuspend_SPEC,
            crate::common::W,
        >::from_register(self, 0)
    }
    #[doc = "Flash Operation Suspended   SPND. Suspension of a Flash program or erase operation."]
    #[inline(always)]
    pub fn spnd(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x1,
        1,
        0,
        hf_suspend::Spnd,
        HfSuspend_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            16,
            0x1,
            1,
            0,
            hf_suspend::Spnd,
            HfSuspend_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Suspend Error   ERR. Reset by hardware when DMU HF SUSPEND .CLR is written to 1 ."]
    #[inline(always)]
    pub fn err(
        self,
    ) -> crate::common::RegisterField<
        17,
        0x1,
        1,
        0,
        hf_suspend::Err,
        HfSuspend_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            17,
            0x1,
            1,
            0,
            hf_suspend::Err,
            HfSuspend_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for HfSuspend {
    #[inline(always)]
    fn default() -> HfSuspend {
        <crate::RegValueT<HfSuspend_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod hf_suspend {
    pub struct Req_SPEC;
    pub type Req = crate::EnumBitfieldStruct<u8, Req_SPEC>;
    impl Req {
        #[doc = "0 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Suspension of a Flash operation requested or pending."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Clr_SPEC;
    pub type Clr = crate::EnumBitfieldStruct<u8, Clr_SPEC>;
    impl Clr {
        #[doc = "0 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear Suspend Error status."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Spnd_SPEC;
    pub type Spnd = crate::EnumBitfieldStruct<u8, Spnd_SPEC>;
    impl Spnd {
        #[doc = "0 No Flash operation is suspended."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash operation is suspended."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Err_SPEC;
    pub type Err = crate::EnumBitfieldStruct<u8, Err_SPEC>;
    impl Err {
        #[doc = "0 No suspend error."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Last suspend request via DMU HF SUSPEND failed."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfClre_SPEC;
impl crate::sealed::RegSpec for SfClre_SPEC {
    type DataType = u32;
}
#[doc = "HSM Clear Error Register\n resetvalue={Application Reset:0x0}"]
pub type SfClre = crate::RegValueT<SfClre_SPEC>;

impl SfClre {
    #[doc = "Clear Command Sequence Error   CSQER"]
    #[inline(always)]
    pub fn csqer(
        self,
    ) -> crate::common::RegisterField<1, 0x1, 1, 0, sf_clre::Csqer, SfClre_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<1,0x1,1,0,sf_clre::Csqer, SfClre_SPEC,crate::common::W>::from_register(self,0)
    }
    #[doc = "Clear Program Verify Error   CPVER"]
    #[inline(always)]
    pub fn cpver(
        self,
    ) -> crate::common::RegisterField<3, 0x1, 1, 0, sf_clre::Cpver, SfClre_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<3,0x1,1,0,sf_clre::Cpver, SfClre_SPEC,crate::common::W>::from_register(self,0)
    }
    #[doc = "Clear Erase Verify Error   CEVER"]
    #[inline(always)]
    pub fn cever(
        self,
    ) -> crate::common::RegisterField<4, 0x1, 1, 0, sf_clre::Cever, SfClre_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<4,0x1,1,0,sf_clre::Cever, SfClre_SPEC,crate::common::W>::from_register(self,0)
    }
}
impl core::default::Default for SfClre {
    #[inline(always)]
    fn default() -> SfClre {
        <crate::RegValueT<SfClre_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sf_clre {
    pub struct Csqer_SPEC;
    pub type Csqer = crate::EnumBitfieldStruct<u8, Csqer_SPEC>;
    impl Csqer {
        #[doc = "0 No action"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear Command Sequence Error Flag DMU SF ERRSR .SQER"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cpver_SPEC;
    pub type Cpver = crate::EnumBitfieldStruct<u8, Cpver_SPEC>;
    impl Cpver {
        #[doc = "0 No action"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear Program Verify Error Flag DMU SF ERRSR .PVER"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cever_SPEC;
    pub type Cever = crate::EnumBitfieldStruct<u8, Cever_SPEC>;
    impl Cever {
        #[doc = "0 No action"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear Erase Verify Error Flag DMU SF ERRSR .EVER"]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfControl_SPEC;
impl crate::sealed::RegSpec for SfControl_SPEC {
    type DataType = u32;
}
#[doc = "HSM Flash Configuration Register\n resetvalue={Application Reset:0x1}"]
pub type SfControl = crate::RegValueT<SfControl_SPEC>;

impl SfControl {
    #[doc = "Lock Access to UCB HSMCFG   LCKHSMUCB. Trap door register. This field can only be written to the   x201c Locked  x201d  state. Other writes are ignored."]
    #[inline(always)]
    pub fn lckhsmucb(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        sf_control::Lckhsmucb,
        SfControl_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            sf_control::Lckhsmucb,
            SfControl_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Clear Programming State   CPROG"]
    #[inline(always)]
    pub fn cprog(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x1,
        1,
        0,
        sf_control::Cprog,
        SfControl_SPEC,
        crate::common::W,
    > {
        crate::common::RegisterField::<
            16,
            0x1,
            1,
            0,
            sf_control::Cprog,
            SfControl_SPEC,
            crate::common::W,
        >::from_register(self, 0)
    }
    #[doc = "Clear Erase State   CERASE"]
    #[inline(always)]
    pub fn cerase(
        self,
    ) -> crate::common::RegisterField<
        17,
        0x1,
        1,
        0,
        sf_control::Cerase,
        SfControl_SPEC,
        crate::common::W,
    > {
        crate::common::RegisterField::<
            17,
            0x1,
            1,
            0,
            sf_control::Cerase,
            SfControl_SPEC,
            crate::common::W,
        >::from_register(self, 0)
    }
    #[doc = "Clear User State   CUSER"]
    #[inline(always)]
    pub fn cuser(
        self,
    ) -> crate::common::RegisterField<
        18,
        0x1,
        1,
        0,
        sf_control::Cuser,
        SfControl_SPEC,
        crate::common::W,
    > {
        crate::common::RegisterField::<
            18,
            0x1,
            1,
            0,
            sf_control::Cuser,
            SfControl_SPEC,
            crate::common::W,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SfControl {
    #[inline(always)]
    fn default() -> SfControl {
        <crate::RegValueT<SfControl_SPEC> as RegisterValue<_>>::new(1)
    }
}
pub mod sf_control {
    pub struct Lckhsmucb_SPEC;
    pub type Lckhsmucb = crate::EnumBitfieldStruct<u8, Lckhsmucb_SPEC>;
    impl Lckhsmucb {
        #[doc = "00 Locked Reads to UCB HSMCFG forbidden."]
        pub const LOCKED_0: Self = Self::new(0);
        #[doc = "01 Unlocked Reads by HSM to UCB HSMCFG allowed."]
        pub const UNLOCKED_1: Self = Self::new(1);
        #[doc = "10 Locked Reads to UCB HSMCFG forbidden."]
        pub const LOCKED_2: Self = Self::new(2);
        #[doc = "11 Locked Reads to UCB HSMCFG forbidden."]
        pub const LOCKED_3: Self = Self::new(3);
    }
    pub struct Cprog_SPEC;
    pub type Cprog = crate::EnumBitfieldStruct<u8, Cprog_SPEC>;
    impl Cprog {
        #[doc = "0 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear the Programming State Flag DMU SF OPERATION .PROG"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cerase_SPEC;
    pub type Cerase = crate::EnumBitfieldStruct<u8, Cerase_SPEC>;
    impl Cerase {
        #[doc = "0 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear the Erase State Flag DMU SF OPERATION .ERASE"]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Cuser_SPEC;
    pub type Cuser = crate::EnumBitfieldStruct<u8, Cuser_SPEC>;
    impl Cuser {
        #[doc = "0 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear the User State Flag DMU SF OPERATION .USER"]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfEccc_SPEC;
impl crate::sealed::RegSpec for SfEccc_SPEC {
    type DataType = u32;
}
#[doc = "HSM DF1 ECC Control Register\n resetvalue={Application Reset:0x0C0000000}"]
pub type SfEccc = crate::RegValueT<SfEccc_SPEC>;

impl SfEccc {
    #[doc = "Clear ECC status bits   CLR"]
    #[inline(always)]
    pub fn clr(
        self,
    ) -> crate::common::RegisterField<0, 0x3, 1, 0, sf_eccc::Clr, SfEccc_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<0,0x3,1,0,sf_eccc::Clr, SfEccc_SPEC,crate::common::W>::from_register(self,0)
    }
    #[doc = "HSM Command Interface ECC Correction Disable   ECCCORDIS"]
    #[inline(always)]
    pub fn ecccordis(
        self,
    ) -> crate::common::RegisterField<
        28,
        0x3,
        1,
        0,
        sf_eccc::Ecccordis,
        SfEccc_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            28,
            0x3,
            1,
            0,
            sf_eccc::Ecccordis,
            SfEccc_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "HSM Command Interface Uncorrectable ECC Bit Error Trap Disable   TRAPDIS"]
    #[inline(always)]
    pub fn trapdis(
        self,
    ) -> crate::common::RegisterField<30, 0x3, 1, 0, sf_eccc::Trapdis, SfEccc_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<
            30,
            0x3,
            1,
            0,
            sf_eccc::Trapdis,
            SfEccc_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SfEccc {
    #[inline(always)]
    fn default() -> SfEccc {
        <crate::RegValueT<SfEccc_SPEC> as RegisterValue<_>>::new(3221225472)
    }
}
pub mod sf_eccc {
    pub struct Clr_SPEC;
    pub type Clr = crate::EnumBitfieldStruct<u8, Clr_SPEC>;
    impl Clr {
        #[doc = "00 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 No action."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 No action."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Clear the DMU SF ECCS status bits."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Ecccordis_SPEC;
    pub type Ecccordis = crate::EnumBitfieldStruct<u8, Ecccordis_SPEC>;
    impl Ecccordis {
        #[doc = "00 Enabled If        DF1 is configured as HSM exclusive  then  ECC correction for the DF1        read path is enabled."]
        pub const ENABLED_0: Self = Self::new(0);
        #[doc = "01 Enabled If        DF1 is configured as HSM exclusive  then  ECC correction for the DF1        read path is enabled."]
        pub const ENABLED_1: Self = Self::new(1);
        #[doc = "10 Enabled If        DF1 is configured as HSM exclusive  then  ECC correction for the DF1        read path is enabled."]
        pub const ENABLED_2: Self = Self::new(2);
        #[doc = "11 Disabled If        DF1 is configured as HSM exclusive  then  ECC correction for the DF1        read path is disabled."]
        pub const DISABLED_3: Self = Self::new(3);
    }
    pub struct Trapdis_SPEC;
    pub type Trapdis = crate::EnumBitfieldStruct<u8, Trapdis_SPEC>;
    impl Trapdis {
        #[doc = "00 If DF1 is        configured as HSM exclusive  and if an uncorrectable ECC error occurs         then a bus error trap is generated."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 If DF1 is        configured as HSM exclusive  and if an uncorrectable ECC error occurs         then a bus error trap is generated."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 If DF1 is        configured as HSM exclusive  and if an uncorrectable ECC error occurs         then a bus error trap is generated."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 If DF1 is        configured as HSM exclusive  then the uncorrectable ECC error trap is        disabled."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfEccr_SPEC;
impl crate::sealed::RegSpec for SfEccr_SPEC {
    type DataType = u32;
}
#[doc = "HSM DF1 ECC Read Register\n resetvalue={Application Reset:0x0}"]
pub type SfEccr = crate::RegValueT<SfEccr_SPEC>;

impl SfEccr {
    #[doc = "Error Correction Read Code   RCODE. ECC checksum read during the last NVM read access."]
    #[inline(always)]
    pub fn rcode(
        self,
    ) -> crate::common::RegisterField<0, 0x3fffff, 1, 0, u32, SfEccr_SPEC, crate::common::R> {
        crate::common::RegisterField::<0,0x3fffff,1,0,u32, SfEccr_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Redundant Bits   RED. Redundant bits directly from Flash."]
    #[inline(always)]
    pub fn red(
        self,
    ) -> crate::common::RegisterField<22, 0x3, 1, 0, u8, SfEccr_SPEC, crate::common::R> {
        crate::common::RegisterField::<22,0x3,1,0,u8, SfEccr_SPEC,crate::common::R>::from_register(self,0)
    }
}
impl core::default::Default for SfEccr {
    #[inline(always)]
    fn default() -> SfEccr {
        <crate::RegValueT<SfEccr_SPEC> as RegisterValue<_>>::new(0)
    }
}

#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfEccs_SPEC;
impl crate::sealed::RegSpec for SfEccs_SPEC {
    type DataType = u32;
}
#[doc = "HSM DF1 ECC Status Register\n resetvalue={Application Reset:0x0}"]
pub type SfEccs = crate::RegValueT<SfEccs_SPEC>;

impl SfEccs {
    #[doc = "Read Access Single Bit ECC Error   ERR1. The flag reports a single bit ECC failure during the last NVM read access. Reset by hardware when DMU SF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn err1(
        self,
    ) -> crate::common::RegisterField<0, 0x1, 1, 0, sf_eccs::Err1, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<0,0x1,1,0,sf_eccs::Err1, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Read Access Double Bit ECC Error   ERR2. The flag reports a double bit ECC failure during the last NVM read        access. Reset by hardware when DMU SF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn err2(
        self,
    ) -> crate::common::RegisterField<1, 0x1, 1, 0, sf_eccs::Err2, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<1,0x1,1,0,sf_eccs::Err2, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Read Access Triple Bit ECC Error   ERR3. The flag reports a triple bit ECC failure during the last NVM read        access. Reset by hardware when DMU SF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn err3(
        self,
    ) -> crate::common::RegisterField<2, 0x1, 1, 0, sf_eccs::Err3, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<2,0x1,1,0,sf_eccs::Err3, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Read Access Multi bit ECC Error   ERRM. The flag reports multi bit ECC failure during the last NVM read access. Reset by hardware when DMU SF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn errm(
        self,
    ) -> crate::common::RegisterField<3, 0x1, 1, 0, sf_eccs::Errm, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<3,0x1,1,0,sf_eccs::Errm, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Any Read Access ECC Error   ERRANY. The flag reports any ECC failure during the last NVM read access. Reset by hardware when DMU SF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn errany(
        self,
    ) -> crate::common::RegisterField<7, 0x1, 1, 0, sf_eccs::Errany, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<7,0x1,1,0,sf_eccs::Errany, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Read Access Blank Digital   BLANKD. The flag reports digital evaluated blank failures during last NVM read        accesses in Complement Sensing mode. Blank failures in Single Ended mode is also reported when in CFTM. Reset by hardware when DMU SF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn blankd(
        self,
    ) -> crate::common::RegisterField<8, 0x1, 1, 0, sf_eccs::Blankd, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<8,0x1,1,0,sf_eccs::Blankd, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Read Access Blank Analog   BLANKA. The flag reports that all read data cells have sufficient high current  a program of new data without prior erase is possible. Under certain operation history  a valid complement data entry may also appear as blank. Data qualifiers like headers or footers  which are usually used in EEPROM emulation  can be used to distinguish expected valid data from unknown data fields. Only blank failures in Complement Sensing mode are reported in this flag and is intended for use only in this mode. Blank failures in Single Ended mode is also reported when in CFTM. Reset by hardware when DMU SF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn blanka(
        self,
    ) -> crate::common::RegisterField<9, 0x1, 1, 0, sf_eccs::Blanka, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<9,0x1,1,0,sf_eccs::Blanka, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Single Bit ECC Errors   AER1. The status flag accumulates single bit failures during NVM read        operations. Reset by hardware when DMU SF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn aer1(
        self,
    ) -> crate::common::RegisterField<16, 0x1, 1, 0, sf_eccs::Aer1, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<16,0x1,1,0,sf_eccs::Aer1, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Double Bit ECC Errors   AER2. The status flag accumulates double bit failures during NVM read        operations. Reset by hardware when DMU SF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn aer2(
        self,
    ) -> crate::common::RegisterField<17, 0x1, 1, 0, sf_eccs::Aer2, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<17,0x1,1,0,sf_eccs::Aer2, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Triple Bit ECC Errors   AER3. The status flag accumulates triple bit failures during NVM read operations. Reset by hardware when DMU SF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn aer3(
        self,
    ) -> crate::common::RegisterField<18, 0x1, 1, 0, sf_eccs::Aer3, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<18,0x1,1,0,sf_eccs::Aer3, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Multi bit ECC Errors   AERM. The status bit accumulates multi bit failures during NVM read accesses. Reset by hardware when DMU SF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn aerm(
        self,
    ) -> crate::common::RegisterField<19, 0x1, 1, 0, sf_eccs::Aerm, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<19,0x1,1,0,sf_eccs::Aerm, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Any Read Access ECC Error   AERANY. The status bit accumulates ECC failures during NVM read accesses. Reset by hardware when DMU SF ECCC .CLR          is written to 11 ."]
    #[inline(always)]
    pub fn aerany(
        self,
    ) -> crate::common::RegisterField<23, 0x1, 1, 0, sf_eccs::Aerany, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<23,0x1,1,0,sf_eccs::Aerany, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Blank Digital   ABLANKD. The flag accumulates digital evaluated blank failures during NVM read accesses  in Complement Sensing mode. Blank failures in Single Ended mode is also reported when in CFTM. Reset by hardware when DMU SF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn ablankd(
        self,
    ) -> crate::common::RegisterField<24, 0x1, 1, 0, sf_eccs::Ablankd, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<24,0x1,1,0,sf_eccs::Ablankd, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Accumulated Blank Analog   ABLANKA. The flag accumulates analog evaluated blank failures during NVM read accesses. It reports that all read data cells have sufficient high current  a program of new data without prior erase is possible. Under certain operation history  a valid complement data entry may also appear as blank. Data qualifiers like headers or footers  which are usually used in EEPROM emulation  can be used to distinguish expected valid data from unknown data fields. Only blank failures in Complement Sensing mode are reported in this flag and is intended for use only in this mode. Blank failures in Single Ended mode is also reported when in CFTM. Reset by hardware when DMU SF ECCC .CLR is written to 11 ."]
    #[inline(always)]
    pub fn ablanka(
        self,
    ) -> crate::common::RegisterField<25, 0x1, 1, 0, sf_eccs::Ablanka, SfEccs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<25,0x1,1,0,sf_eccs::Ablanka, SfEccs_SPEC,crate::common::R>::from_register(self,0)
    }
}
impl core::default::Default for SfEccs {
    #[inline(always)]
    fn default() -> SfEccs {
        <crate::RegValueT<SfEccs_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sf_eccs {
    pub struct Err1_SPEC;
    pub type Err1 = crate::EnumBitfieldStruct<u8, Err1_SPEC>;
    impl Err1 {
        #[doc = "0 No single bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 A single bit        ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Err2_SPEC;
    pub type Err2 = crate::EnumBitfieldStruct<u8, Err2_SPEC>;
    impl Err2 {
        #[doc = "0 No double bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 A double bit        ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Err3_SPEC;
    pub type Err3 = crate::EnumBitfieldStruct<u8, Err3_SPEC>;
    impl Err3 {
        #[doc = "0 No triple bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 A triple bit        ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Errm_SPEC;
    pub type Errm = crate::EnumBitfieldStruct<u8, Errm_SPEC>;
    impl Errm {
        #[doc = "0 No multi bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Multi bit ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Errany_SPEC;
    pub type Errany = crate::EnumBitfieldStruct<u8, Errany_SPEC>;
    impl Errany {
        #[doc = "0 No ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Blankd_SPEC;
    pub type Blankd = crate::EnumBitfieldStruct<u8, Blankd_SPEC>;
    impl Blankd {
        #[doc = "0 Read data is not erased."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read data is erased."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Blanka_SPEC;
    pub type Blanka = crate::EnumBitfieldStruct<u8, Blanka_SPEC>;
    impl Blanka {
        #[doc = "0 Read data cells are not erased."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read data cells have sufficient high current  a program of new data without prior erase is possible ."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Aer1_SPEC;
    pub type Aer1 = crate::EnumBitfieldStruct<u8, Aer1_SPEC>;
    impl Aer1 {
        #[doc = "0 No single bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 At least one        single bit ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Aer2_SPEC;
    pub type Aer2 = crate::EnumBitfieldStruct<u8, Aer2_SPEC>;
    impl Aer2 {
        #[doc = "0 No double bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 At least one        double bit ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Aer3_SPEC;
    pub type Aer3 = crate::EnumBitfieldStruct<u8, Aer3_SPEC>;
    impl Aer3 {
        #[doc = "0 No triple bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 At least one triple bit ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Aerm_SPEC;
    pub type Aerm = crate::EnumBitfieldStruct<u8, Aerm_SPEC>;
    impl Aerm {
        #[doc = "0 No multi bit ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Multi bit ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Aerany_SPEC;
    pub type Aerany = crate::EnumBitfieldStruct<u8, Aerany_SPEC>;
    impl Aerany {
        #[doc = "0 No ECC failure occurred."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 ECC failure occurred."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Ablankd_SPEC;
    pub type Ablankd = crate::EnumBitfieldStruct<u8, Ablankd_SPEC>;
    impl Ablankd {
        #[doc = "0 Read data is not erased."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read data is erased."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Ablanka_SPEC;
    pub type Ablanka = crate::EnumBitfieldStruct<u8, Ablanka_SPEC>;
    impl Ablanka {
        #[doc = "0 Read data cells are not erased."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Read data cells have sufficient high current  a program of new data without prior erase is possible ."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfEccw_SPEC;
impl crate::sealed::RegSpec for SfEccw_SPEC {
    type DataType = u32;
}
#[doc = "HSM DF1 ECC Write Register\n resetvalue={Application Reset:0x0}"]
pub type SfEccw = crate::RegValueT<SfEccw_SPEC>;

impl SfEccw {
    #[doc = "Error Correction Write Code   WCODE. 22 bit ECC code for the current 64 bit  for DFLASH  or 256 bit  for        PFLASH  write buffer to be written into the assembly buffer instead of a        generated ECC."]
    #[inline(always)]
    pub fn wcode(
        self,
    ) -> crate::common::RegisterField<0, 0x3fffff, 1, 0, u32, SfEccw_SPEC, crate::common::RW> {
        crate::common::RegisterField::<0,0x3fffff,1,0,u32, SfEccw_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "ECC Encoding Disable   ECCENCDIS"]
    #[inline(always)]
    pub fn eccencdis(
        self,
    ) -> crate::common::RegisterField<
        30,
        0x3,
        1,
        0,
        sf_eccw::Eccencdis,
        SfEccw_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            30,
            0x3,
            1,
            0,
            sf_eccw::Eccencdis,
            SfEccw_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SfEccw {
    #[inline(always)]
    fn default() -> SfEccw {
        <crate::RegValueT<SfEccw_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sf_eccw {
    pub struct Eccencdis_SPEC;
    pub type Eccencdis = crate::EnumBitfieldStruct<u8, Eccencdis_SPEC>;
    impl Eccencdis {
        #[doc = "00 The ECC code is automatically calculated."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 The ECC code is automatically calculated."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 The ECC code is automatically calculated."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 The ECC code is taken from WCODE."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfEer_SPEC;
impl crate::sealed::RegSpec for SfEer_SPEC {
    type DataType = u32;
}
#[doc = "HSM Enable Error Interrupt Control Register\n resetvalue={Application Reset:0x0}"]
pub type SfEer = crate::RegValueT<SfEer_SPEC>;

impl SfEer {
    #[doc = "Operation Error Interrupt Mask   OPERM"]
    #[inline(always)]
    pub fn operm(
        self,
    ) -> crate::common::RegisterField<0, 0x1, 1, 0, sf_eer::Operm, SfEer_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<0,0x1,1,0,sf_eer::Operm, SfEer_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Command Sequence Error Interrupt Mask   SQERM"]
    #[inline(always)]
    pub fn sqerm(
        self,
    ) -> crate::common::RegisterField<1, 0x1, 1, 0, sf_eer::Sqerm, SfEer_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<1,0x1,1,0,sf_eer::Sqerm, SfEer_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Program Verify Error Interrupt Mask   PVERM"]
    #[inline(always)]
    pub fn pverm(
        self,
    ) -> crate::common::RegisterField<3, 0x1, 1, 0, sf_eer::Pverm, SfEer_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<3,0x1,1,0,sf_eer::Pverm, SfEer_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "Erase Verify Error Interrupt Mask   EVERM"]
    #[inline(always)]
    pub fn everm(
        self,
    ) -> crate::common::RegisterField<4, 0x1, 1, 0, sf_eer::Everm, SfEer_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<4,0x1,1,0,sf_eer::Everm, SfEer_SPEC,crate::common::RW>::from_register(self,0)
    }
    #[doc = "End of Busy Interrupt Mask   EOBM"]
    #[inline(always)]
    pub fn eobm(
        self,
    ) -> crate::common::RegisterField<31, 0x1, 1, 0, sf_eer::Eobm, SfEer_SPEC, crate::common::RW>
    {
        crate::common::RegisterField::<31,0x1,1,0,sf_eer::Eobm, SfEer_SPEC,crate::common::RW>::from_register(self,0)
    }
}
impl core::default::Default for SfEer {
    #[inline(always)]
    fn default() -> SfEer {
        <crate::RegValueT<SfEer_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sf_eer {
    pub struct Operm_SPEC;
    pub type Operm = crate::EnumBitfieldStruct<u8, Operm_SPEC>;
    impl Operm {
        #[doc = "0 Interrupt disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash interrupt because Operation Error is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Sqerm_SPEC;
    pub type Sqerm = crate::EnumBitfieldStruct<u8, Sqerm_SPEC>;
    impl Sqerm {
        #[doc = "0 Interrupt disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash interrupt because Sequence Error is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Pverm_SPEC;
    pub type Pverm = crate::EnumBitfieldStruct<u8, Pverm_SPEC>;
    impl Pverm {
        #[doc = "0 Interrupt disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash interrupt because Program Verify Error is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Everm_SPEC;
    pub type Everm = crate::EnumBitfieldStruct<u8, Everm_SPEC>;
    impl Everm {
        #[doc = "0 Interrupt disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash interrupt because Erase Verify Error is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Eobm_SPEC;
    pub type Eobm = crate::EnumBitfieldStruct<u8, Eobm_SPEC>;
    impl Eobm {
        #[doc = "0 Interrupt disabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 EOB interrupt is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfErrsr_SPEC;
impl crate::sealed::RegSpec for SfErrsr_SPEC {
    type DataType = u32;
}
#[doc = "HSM Error Status Register\n resetvalue={Application Reset:0x0}"]
pub type SfErrsr = crate::RegValueT<SfErrsr_SPEC>;

impl SfErrsr {
    #[doc = "Flash Operation Error   OPER. Cleared with system reset."]
    #[inline(always)]
    pub fn oper(
        self,
    ) -> crate::common::RegisterField<0, 0x1, 1, 0, sf_errsr::Oper, SfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<0,0x1,1,0,sf_errsr::Oper, SfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Command Sequence Error   SQER. A sequence error is not indicated if the Reset to Read command aborts a command sequence. Cleared with application reset  commands  Reset to Read  and  Clear Status  or writing DMU SF CLRE .CSQER   1 ."]
    #[inline(always)]
    pub fn sqer(
        self,
    ) -> crate::common::RegisterField<1, 0x1, 1, 0, sf_errsr::Sqer, SfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<1,0x1,1,0,sf_errsr::Sqer, SfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Program Verify Error   PVER. A verify error was reported on completion of a Flash program operation  even when the operation was directly started in the FSI  . Cleared with application reset  with the command  Clear Status  or writing DMU SF CLRE .CPVER   1 ."]
    #[inline(always)]
    pub fn pver(
        self,
    ) -> crate::common::RegisterField<3, 0x1, 1, 0, sf_errsr::Pver, SfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<3,0x1,1,0,sf_errsr::Pver, SfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Erase Verify Error   EVER. A verify error was reported on completion of a Flash erase operation  even when the operation was directly started in the FSI  . Cleared with application reset  with the command  Clear Status  or writing DMU SF CLRE .CEVER   1 ."]
    #[inline(always)]
    pub fn ever(
        self,
    ) -> crate::common::RegisterField<4, 0x1, 1, 0, sf_errsr::Ever, SfErrsr_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<4,0x1,1,0,sf_errsr::Ever, SfErrsr_SPEC,crate::common::R>::from_register(self,0)
    }
}
impl core::default::Default for SfErrsr {
    #[inline(always)]
    fn default() -> SfErrsr {
        <crate::RegValueT<SfErrsr_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sf_errsr {
    pub struct Oper_SPEC;
    pub type Oper = crate::EnumBitfieldStruct<u8, Oper_SPEC>;
    impl Oper {
        #[doc = "0 No operation error."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash array operation aborted  because of a Flash array failure  e.g. an ECC error in microcode."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Sqer_SPEC;
    pub type Sqer = crate::EnumBitfieldStruct<u8, Sqer_SPEC>;
    impl Sqer {
        #[doc = "0 No sequence error"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Command state machine operation unsuccessful because of improper address or command sequence."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Pver_SPEC;
    pub type Pver = crate::EnumBitfieldStruct<u8, Pver_SPEC>;
    impl Pver {
        #[doc = "0 The page is correctly programmed. All bits have full expected quality."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 A program verify error has been detected. Full quality of all bits cannot be guaranteed."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Ever_SPEC;
    pub type Ever = crate::EnumBitfieldStruct<u8, Ever_SPEC>;
    impl Ever {
        #[doc = "0 The sector is correctly erased. All erased bits have full expected quality."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 An erase verify error has been detected. Full quality erased bits cannot be guaranteed."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfMargin_SPEC;
impl crate::sealed::RegSpec for SfMargin_SPEC {
    type DataType = u32;
}
#[doc = "HSM DF1 Margin Control Register\n resetvalue={Application Reset:0x0}"]
pub type SfMargin = crate::RegValueT<SfMargin_SPEC>;

impl SfMargin {
    #[doc = "DF1 Margin Read Selection   SELD1. If a change between the standard and hard read margin setting is done           the system must wait a delay time tFL MarginDel until the next read is          requested."]
    #[inline(always)]
    pub fn seld1(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        sf_margin::Seld1,
        SfMargin_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            sf_margin::Seld1,
            SfMargin_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Hard Margin Selection   HMARGIN. Suboptimal 0 bits are read as 1s. Suboptimal 1 bits are read as 0s. The concrete margin values are restored from the configuration sector        and are determined by Infineon."]
    #[inline(always)]
    pub fn hmargin(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x1,
        1,
        0,
        sf_margin::Hmargin,
        SfMargin_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            8,
            0x1,
            1,
            0,
            sf_margin::Hmargin,
            SfMargin_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SfMargin {
    #[inline(always)]
    fn default() -> SfMargin {
        <crate::RegValueT<SfMargin_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sf_margin {
    pub struct Seld1_SPEC;
    pub type Seld1 = crate::EnumBitfieldStruct<u8, Seld1_SPEC>;
    impl Seld1 {
        #[doc = "00 Read with        standard margin."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Read with        standard margin."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Read with        standard margin."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Read with hard        margin selected by DMU SF MARGIN.HMARGIN"]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Hmargin_SPEC;
    pub type Hmargin = crate::EnumBitfieldStruct<u8, Hmargin_SPEC>;
    impl Hmargin {
        #[doc = "0 Tight0 Tight        margin for 0  low  level."]
        pub const TIGHT_00: Self = Self::new(0);
        #[doc = "1 Tight1 Tight        margin for 1  high  level."]
        pub const TIGHT_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfOperation_SPEC;
impl crate::sealed::RegSpec for SfOperation_SPEC {
    type DataType = u32;
}
#[doc = "HSM Flash Operation Register\n resetvalue={System Reset:0x0}"]
pub type SfOperation = crate::RegValueT<SfOperation_SPEC>;

impl SfOperation {
    #[doc = "Programming State   PROG. HW controlled status flag. Set with last cycle of Write Page Burst command sequence. If one BUSY flag is coincidently set  PROG indicates the type of busy        state. If OPER is coincidently set  PROG indicates the type of erroneous        operation. Otherwise  PROG indicates  that operation is still requested        or finished. Can be also cleared by writing   8216 11  8217  to DMU SF CONTROL .CPROG. This bit is not set for by program operations initiated by the Host        interface. Cleared with command   8220 Clear Status  8221 ."]
    #[inline(always)]
    pub fn prog(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        sf_operation::Prog,
        SfOperation_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            sf_operation::Prog,
            SfOperation_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Erase State   ERASE. HW controlled status flag. Set with last cycle of Erase Verify command sequence. Indications are analogous to PROG flag. Can be also cleared by writing   8216 11  8217  to DMU SF CONTROL .CERASE. This bit is not set for by erase operations initiated by the Host        interface. Cleared with command   8220 Clear Status  8221 ."]
    #[inline(always)]
    pub fn erase(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        sf_operation::Erase,
        SfOperation_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            sf_operation::Erase,
            SfOperation_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "User State   USER. HW controlled status flag. Set with last cycle of User command sequence. Indications are analogous to PROG flag. May be cleared by writing   8216 1  8217  to DMU SF CONTROL .CUSER. This bit is not set for by user operations initiated by the Host        interface. Cleared with command   8220 Clear Status  8221 ."]
    #[inline(always)]
    pub fn user(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x1,
        1,
        0,
        sf_operation::User,
        SfOperation_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x1,
            1,
            0,
            sf_operation::User,
            SfOperation_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SfOperation {
    #[inline(always)]
    fn default() -> SfOperation {
        <crate::RegValueT<SfOperation_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sf_operation {
    pub struct Prog_SPEC;
    pub type Prog = crate::EnumBitfieldStruct<u8, Prog_SPEC>;
    impl Prog {
        #[doc = "0 There is no program operation requested or in progress or just finished."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Programming operation requested or in action or finished."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Erase_SPEC;
    pub type Erase = crate::EnumBitfieldStruct<u8, Erase_SPEC>;
    impl Erase {
        #[doc = "0 There is no erase operation requested or in progress or just finished"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Erase Verify operation requested or in action or finished."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct User_SPEC;
    pub type User = crate::EnumBitfieldStruct<u8, User_SPEC>;
    impl User {
        #[doc = "0 There is no user operation requested or in progress or just finished"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 User operation requested or in action or finished."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfProconifx_SPEC;
impl crate::sealed::RegSpec for SfProconifx_SPEC {
    type DataType = u32;
}
#[doc = "HSM DF1 Infineon Mode Control\n resetvalue={System Reset:0x0,CFS Value:0x300}"]
pub type SfProconifx = crate::RegValueT<SfProconifx_SPEC>;

impl SfProconifx {
    #[doc = "DF1 Infineon Mode Control   MODE. Configures the DF1 mode when Infineon has control."]
    #[inline(always)]
    pub fn mode(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        sf_proconifx::Mode,
        SfProconifx_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            sf_proconifx::Mode,
            SfProconifx_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "DF1 Mode Select   SELECT. Selects between Infineon and user control of the DF1 mode."]
    #[inline(always)]
    pub fn select(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x3,
        1,
        0,
        sf_proconifx::Select,
        SfProconifx_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            8,
            0x3,
            1,
            0,
            sf_proconifx::Select,
            SfProconifx_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SfProconifx {
    #[inline(always)]
    fn default() -> SfProconifx {
        <crate::RegValueT<SfProconifx_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sf_proconifx {
    pub struct Mode_SPEC;
    pub type Mode = crate::EnumBitfieldStruct<u8, Mode_SPEC>;
    impl Mode {
        #[doc = "00 Single Ended."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Complement Sensing."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Complement Sensing."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Complement Sensing."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Select_SPEC;
    pub type Select = crate::EnumBitfieldStruct<u8, Select_SPEC>;
    impl Select {
        #[doc = "00 DMU SF PROCONIFX .MODE"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 DMU SF PROCONUSR .MODE"]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 DMU SF PROCONUSR .MODE"]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 DMU SF PROCONUSR .MODE"]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfProconusr_SPEC;
impl crate::sealed::RegSpec for SfProconusr_SPEC {
    type DataType = u32;
}
#[doc = "HSM DF1 User Mode Control\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type SfProconusr = crate::RegValueT<SfProconusr_SPEC>;

impl SfProconusr {
    #[doc = "DF1 User Mode Control   MODE. Configures the DF1 mode when the user has control."]
    #[inline(always)]
    pub fn mode(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x3,
        1,
        0,
        sf_proconusr::Mode,
        SfProconusr_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x3,
            1,
            0,
            sf_proconusr::Mode,
            SfProconusr_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SfProconusr {
    #[inline(always)]
    fn default() -> SfProconusr {
        <crate::RegValueT<SfProconusr_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sf_proconusr {
    pub struct Mode_SPEC;
    pub type Mode = crate::EnumBitfieldStruct<u8, Mode_SPEC>;
    impl Mode {
        #[doc = "00 Single Ended."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Complement Sensing."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Complement Sensing."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Complement Sensing."]
        pub const CONST_33: Self = Self::new(3);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfStatus_SPEC;
impl crate::sealed::RegSpec for SfStatus_SPEC {
    type DataType = u32;
}
#[doc = "HSM Flash Status Register\n resetvalue={Application Reset:0x2}"]
pub type SfStatus = crate::RegValueT<SfStatus_SPEC>;

impl SfStatus {
    #[doc = "Data Flash Bank 1 Busy   D1BUSY. HW controlled status flag. Indication of busy state of DFLASH bank 1 because of active execution of an operation  DF1 busy state is also indicated during Flash startup after reset or in sleep mode  while in busy state the DF1 does not allow read access."]
    #[inline(always)]
    pub fn d1busy(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        sf_status::D1Busy,
        SfStatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            sf_status::D1Busy,
            SfStatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Data Flash in Page Mode   DFPAGE. HW controlled status flag. Set with Enter Page Mode for DFLASH  cleared with Write Page command. Read accesses are allowed while in page mode."]
    #[inline(always)]
    pub fn dfpage(
        self,
    ) -> crate::common::RegisterField<
        20,
        0x1,
        1,
        0,
        sf_status::Dfpage,
        SfStatus_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            20,
            0x1,
            1,
            0,
            sf_status::Dfpage,
            SfStatus_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SfStatus {
    #[inline(always)]
    fn default() -> SfStatus {
        <crate::RegValueT<SfStatus_SPEC> as RegisterValue<_>>::new(2)
    }
}
pub mod sf_status {
    pub struct D1Busy_SPEC;
    pub type D1Busy = crate::EnumBitfieldStruct<u8, D1Busy_SPEC>;
    impl D1Busy {
        #[doc = "0 DF1 ready  not busy  DF1 in operation mode."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 DF1 busy  DF1 not in operation mode."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Dfpage_SPEC;
    pub type Dfpage = crate::EnumBitfieldStruct<u8, Dfpage_SPEC>;
    impl Dfpage {
        #[doc = "0 Data Flash not in page mode"]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Data Flash in page mode"]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SfSuspend_SPEC;
impl crate::sealed::RegSpec for SfSuspend_SPEC {
    type DataType = u32;
}
#[doc = "HSM Suspend Control Register\n resetvalue={Application Reset:0x0}"]
pub type SfSuspend = crate::RegValueT<SfSuspend_SPEC>;

impl SfSuspend {
    #[doc = "Suspend Request   REQ"]
    #[inline(always)]
    pub fn req(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        sf_suspend::Req,
        SfSuspend_SPEC,
        crate::common::RW,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            sf_suspend::Req,
            SfSuspend_SPEC,
            crate::common::RW,
        >::from_register(self, 0)
    }
    #[doc = "Suspend Clear   CLR. Software write only active high clear of Suspend Error."]
    #[inline(always)]
    pub fn clr(
        self,
    ) -> crate::common::RegisterField<1, 0x1, 1, 0, sf_suspend::Clr, SfSuspend_SPEC, crate::common::W>
    {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            sf_suspend::Clr,
            SfSuspend_SPEC,
            crate::common::W,
        >::from_register(self, 0)
    }
    #[doc = "Flash Operation Suspended   SPND. Suspension of a Flash program or erase operation."]
    #[inline(always)]
    pub fn spnd(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x1,
        1,
        0,
        sf_suspend::Spnd,
        SfSuspend_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            16,
            0x1,
            1,
            0,
            sf_suspend::Spnd,
            SfSuspend_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Suspend Error   ERR. Reset by hardware when DMU SF SUSPEND .CLR is written to 1 ."]
    #[inline(always)]
    pub fn err(
        self,
    ) -> crate::common::RegisterField<
        17,
        0x1,
        1,
        0,
        sf_suspend::Err,
        SfSuspend_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            17,
            0x1,
            1,
            0,
            sf_suspend::Err,
            SfSuspend_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SfSuspend {
    #[inline(always)]
    fn default() -> SfSuspend {
        <crate::RegValueT<SfSuspend_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sf_suspend {
    pub struct Req_SPEC;
    pub type Req = crate::EnumBitfieldStruct<u8, Req_SPEC>;
    impl Req {
        #[doc = "0 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Suspension of a Flash operation requested or pending."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Clr_SPEC;
    pub type Clr = crate::EnumBitfieldStruct<u8, Clr_SPEC>;
    impl Clr {
        #[doc = "0 No action."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Clear Suspend Error status."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Spnd_SPEC;
    pub type Spnd = crate::EnumBitfieldStruct<u8, Spnd_SPEC>;
    impl Spnd {
        #[doc = "0 No Flash operation is suspended."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Flash operation is suspended."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Err_SPEC;
    pub type Err = crate::EnumBitfieldStruct<u8, Err_SPEC>;
    impl Err {
        #[doc = "0 No suspend error."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Last suspend request via DMU SF SUSPEND failed."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SpProconhsm_SPEC;
impl crate::sealed::RegSpec for SpProconhsm_SPEC {
    type DataType = u32;
}
#[doc = "HSM Interface Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type SpProconhsm = crate::RegValueT<SpProconhsm_SPEC>;

impl SpProconhsm {
    #[doc = "HSM Debug Disable   HSMDBGDIS. This bit indicates whether HSM debug is configured as   8220 disabled  8221 ."]
    #[inline(always)]
    pub fn hsmdbgdis(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        sp_proconhsm::Hsmdbgdis,
        SpProconhsm_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            sp_proconhsm::Hsmdbgdis,
            SpProconhsm_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Debug Interface Locked   DBGIFLCK. This bit indicates whether the chip debug interface is configured as          8220 locked  8221 ."]
    #[inline(always)]
    pub fn dbgiflck(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        sp_proconhsm::Dbgiflck,
        SpProconhsm_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            sp_proconhsm::Dbgiflck,
            SpProconhsm_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Test Interface Locked   TSTIFLCK. This bit indicates whether the chip test interface is configured as  locked . TSTIFLCK is not used."]
    #[inline(always)]
    pub fn tstiflck(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x1,
        1,
        0,
        sp_proconhsm::Tstiflck,
        SpProconhsm_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x1,
            1,
            0,
            sp_proconhsm::Tstiflck,
            SpProconhsm_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "HSM Test Disable   HSMTSTDIS. This bit indicates whether the HSM test is configured as   8220 disabled  8221 . HSMTSTDIS is not used."]
    #[inline(always)]
    pub fn hsmtstdis(
        self,
    ) -> crate::common::RegisterField<
        3,
        0x1,
        1,
        0,
        sp_proconhsm::Hsmtstdis,
        SpProconhsm_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            3,
            0x1,
            1,
            0,
            sp_proconhsm::Hsmtstdis,
            SpProconhsm_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "HSM Trace Disable   HSMTRDIS. This bit field indicates whether the HSM tracing and capturing of        transactions for debug and in error cases via BCU is configured as          8220 disabled  8221 . In order to ensure that with UCB delivery state HSM tracing is fully          enabled the encoding for this bit field is inverted compared to the          corresponding HSM control registers."]
    #[inline(always)]
    pub fn hsmtrdis(
        self,
    ) -> crate::common::RegisterField<
        4,
        0x3,
        1,
        0,
        sp_proconhsm::Hsmtrdis,
        SpProconhsm_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            4,
            0x3,
            1,
            0,
            sp_proconhsm::Hsmtrdis,
            SpProconhsm_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "HSM Type of Trace   HSMTRTYPE. This bit field indicates which information can be captured by the BCU        for HSM transactions. In order to ensure that with UCB delivery state HSM tracing is fully          enabled the encoding for this bit field is inverted compared to the          corresponding HSM control registers."]
    #[inline(always)]
    pub fn hsmtrtype(
        self,
    ) -> crate::common::RegisterField<
        6,
        0x1,
        1,
        0,
        sp_proconhsm::Hsmtrtype,
        SpProconhsm_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            6,
            0x1,
            1,
            0,
            sp_proconhsm::Hsmtrtype,
            SpProconhsm_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SpProconhsm {
    #[inline(always)]
    fn default() -> SpProconhsm {
        <crate::RegValueT<SpProconhsm_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sp_proconhsm {
    pub struct Hsmdbgdis_SPEC;
    pub type Hsmdbgdis = crate::EnumBitfieldStruct<u8, Hsmdbgdis_SPEC>;
    impl Hsmdbgdis {
        #[doc = "0 HSM debug is enabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 HSM debug is disabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Dbgiflck_SPEC;
    pub type Dbgiflck = crate::EnumBitfieldStruct<u8, Dbgiflck_SPEC>;
    impl Dbgiflck {
        #[doc = "0 Debug is unlocked."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Debug is locked."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Tstiflck_SPEC;
    pub type Tstiflck = crate::EnumBitfieldStruct<u8, Tstiflck_SPEC>;
    impl Tstiflck {
        #[doc = "0 Test interface is unlocked."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Test interface is locked."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsmtstdis_SPEC;
    pub type Hsmtstdis = crate::EnumBitfieldStruct<u8, Hsmtstdis_SPEC>;
    impl Hsmtstdis {
        #[doc = "0 HSM test is enabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 HSM test is disabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsmtrdis_SPEC;
    pub type Hsmtrdis = crate::EnumBitfieldStruct<u8, Hsmtrdis_SPEC>;
    impl Hsmtrdis {
        #[doc = "00 TRACEEN Tracing enabled."]
        pub const TRACEEN_0: Self = Self::new(0);
        #[doc = "01 TRACEDIS2 Tracing disabled."]
        pub const TRACEDIS_21: Self = Self::new(1);
        #[doc = "10 TRACEDIS1 Tracing disabled."]
        pub const TRACEDIS_12: Self = Self::new(2);
        #[doc = "11 TRACEDIS0 Tracing disabled."]
        pub const TRACEDIS_03: Self = Self::new(3);
    }
    pub struct Hsmtrtype_SPEC;
    pub type Hsmtrtype = crate::EnumBitfieldStruct<u8, Hsmtrtype_SPEC>;
    impl Hsmtrtype {
        #[doc = "0 TRDATA Trace addresses and data."]
        pub const TRDATA_0: Self = Self::new(0);
        #[doc = "1 TRADDR Trace addresses only."]
        pub const TRADDR_1: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SpProconhsmcbs_SPEC;
impl crate::sealed::RegSpec for SpProconhsmcbs_SPEC {
    type DataType = u32;
}
#[doc = "HSM Code Boot Sector\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type SpProconhsmcbs = crate::RegValueT<SpProconhsmcbs_SPEC>;

impl SpProconhsmcbs {
    #[doc = "Boot Sector Selection   BOOTSEL0. This field controls which of the HSM code sectors is searched for boot code. See CROSSREFERENCE ."]
    #[inline(always)]
    pub fn bootsel0(
        self,
    ) -> crate::common::RegisterField<0, 0x3f, 1, 0, u8, SpProconhsmcbs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<0,0x3f,1,0,u8, SpProconhsmcbs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Boot Sector Selection   BOOTSEL1. This field controls which of the HSM code sectors is searched for boot code. See CROSSREFERENCE ."]
    #[inline(always)]
    pub fn bootsel1(
        self,
    ) -> crate::common::RegisterField<8, 0x3f, 1, 0, u8, SpProconhsmcbs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<8,0x3f,1,0,u8, SpProconhsmcbs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Boot Sector Selection   BOOTSEL2. This field controls which of the HSM code sectors is searched for boot        code. See CROSSREFERENCE ."]
    #[inline(always)]
    pub fn bootsel2(
        self,
    ) -> crate::common::RegisterField<16, 0x3f, 1, 0, u8, SpProconhsmcbs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<16,0x3f,1,0,u8, SpProconhsmcbs_SPEC,crate::common::R>::from_register(self,0)
    }
    #[doc = "Boot Sector Selection   BOOTSEL3. This field controls which of the HSM code sectors is searched for boot code. See CROSSREFERENCE ."]
    #[inline(always)]
    pub fn bootsel3(
        self,
    ) -> crate::common::RegisterField<24, 0x3f, 1, 0, u8, SpProconhsmcbs_SPEC, crate::common::R>
    {
        crate::common::RegisterField::<24,0x3f,1,0,u8, SpProconhsmcbs_SPEC,crate::common::R>::from_register(self,0)
    }
}
impl core::default::Default for SpProconhsmcbs {
    #[inline(always)]
    fn default() -> SpProconhsmcbs {
        <crate::RegValueT<SpProconhsmcbs_SPEC> as RegisterValue<_>>::new(0)
    }
}

#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SpProconhsmcfg_SPEC;
impl crate::sealed::RegSpec for SpProconhsmcfg_SPEC {
    type DataType = u32;
}
#[doc = "HSM Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type SpProconhsmcfg = crate::RegValueT<SpProconhsmcfg_SPEC>;

impl SpProconhsmcfg {
    #[doc = "HSM Boot Enable   HSMBOOTEN"]
    #[inline(always)]
    pub fn hsmbooten(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        sp_proconhsmcfg::Hsmbooten,
        SpProconhsmcfg_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            sp_proconhsmcfg::Hsmbooten,
            SpProconhsmcfg_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "SSW Wait   SSWWAIT. Defines if the SSW waits for the HSM to release the jump of CPU0 to user code."]
    #[inline(always)]
    pub fn sswwait(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        sp_proconhsmcfg::Sswwait,
        SpProconhsmcfg_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            sp_proconhsmcfg::Sswwait,
            SpProconhsmcfg_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "HSM Data Sectors Exclusive   HSMDX. This bit indicates whether the DFLASH1 logical sectors EEPROMx are configured as   x201c HSM exclusive  x201d ."]
    #[inline(always)]
    pub fn hsmdx(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x1,
        1,
        0,
        sp_proconhsmcfg::Hsmdx,
        SpProconhsmcfg_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x1,
            1,
            0,
            sp_proconhsmcfg::Hsmdx,
            SpProconhsmcfg_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "HSM RAM Clear   HSMRAMKEEP"]
    #[inline(always)]
    pub fn hsmramkeep(
        self,
    ) -> crate::common::RegisterField<
        4,
        0x3,
        1,
        0,
        sp_proconhsmcfg::Hsmramkeep,
        SpProconhsmcfg_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            4,
            0x3,
            1,
            0,
            sp_proconhsmcfg::Hsmramkeep,
            SpProconhsmcfg_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Enable HSM Forcing of Pins HSM1 2   HSMENPINS. This bit indicates whether HSM may force the value of the pins HSM1 2  i.e. overrule the value driven by the application ."]
    #[inline(always)]
    pub fn hsmenpins(
        self,
    ) -> crate::common::RegisterField<
        7,
        0x3,
        1,
        0,
        sp_proconhsmcfg::Hsmenpins,
        SpProconhsmcfg_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            7,
            0x3,
            1,
            0,
            sp_proconhsmcfg::Hsmenpins,
            SpProconhsmcfg_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Enable HSM Triggering Resets   HSMENRES. This bit indicates whether HSM may trigger application or system resets."]
    #[inline(always)]
    pub fn hsmenres(
        self,
    ) -> crate::common::RegisterField<
        9,
        0x3,
        1,
        0,
        sp_proconhsmcfg::Hsmenres,
        SpProconhsmcfg_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            9,
            0x3,
            1,
            0,
            sp_proconhsmcfg::Hsmenres,
            SpProconhsmcfg_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Destructive Debug Entry   DESTDBG. This field configures the destructive debug entry. Security  functionally not part of the HSM."]
    #[inline(always)]
    pub fn destdbg(
        self,
    ) -> crate::common::RegisterField<
        11,
        0x3,
        1,
        0,
        sp_proconhsmcfg::Destdbg,
        SpProconhsmcfg_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            11,
            0x3,
            1,
            0,
            sp_proconhsmcfg::Destdbg,
            SpProconhsmcfg_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "Block Flash Analysis   BLKFLAN. The commands   x201c Verify Erased Page  x201d     x201c Verify Erased WL  x201d     x201c Verify Erased Logical Sector Range  x201d   are blocked on the HSM code ranges. Security  functionally not part of the HSM. Also blocks User Margin Count  User Vth Count and User Content Count ."]
    #[inline(always)]
    pub fn blkflan(
        self,
    ) -> crate::common::RegisterField<
        13,
        0x1,
        1,
        0,
        sp_proconhsmcfg::Blkflan,
        SpProconhsmcfg_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            13,
            0x1,
            1,
            0,
            sp_proconhsmcfg::Blkflan,
            SpProconhsmcfg_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SpProconhsmcfg {
    #[inline(always)]
    fn default() -> SpProconhsmcfg {
        <crate::RegValueT<SpProconhsmcfg_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sp_proconhsmcfg {
    pub struct Hsmbooten_SPEC;
    pub type Hsmbooten = crate::EnumBitfieldStruct<u8, Hsmbooten_SPEC>;
    impl Hsmbooten {
        #[doc = "0 HSM Boot is not enabled."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 HSM Boot is enabled."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Sswwait_SPEC;
    pub type Sswwait = crate::EnumBitfieldStruct<u8, Sswwait_SPEC>;
    impl Sswwait {
        #[doc = "0 The SSW does not wait for HSM."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 SSW wait for acknowledge of HSM."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsmdx_SPEC;
    pub type Hsmdx = crate::EnumBitfieldStruct<u8, Hsmdx_SPEC>;
    impl Hsmdx {
        #[doc = "0 HSMx are not HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 HSMx are HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsmramkeep_SPEC;
    pub type Hsmramkeep = crate::EnumBitfieldStruct<u8, Hsmramkeep_SPEC>;
    impl Hsmramkeep {
        #[doc = "00 SSW clears HSM RAM after all power on resets and system resets."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 SSW clears HSM RAM after all power on resets but not system reset."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 SSW clears HSM RAM after all power on resets but not system reset."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 SSW clears HSM RAM only after cold power on reset."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Hsmenpins_SPEC;
    pub type Hsmenpins = crate::EnumBitfieldStruct<u8, Hsmenpins_SPEC>;
    impl Hsmenpins {
        #[doc = "00 HSM cannot force pins."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 HSM cannot force pins."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 HSM cannot force pins."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 HSM can force pins."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Hsmenres_SPEC;
    pub type Hsmenres = crate::EnumBitfieldStruct<u8, Hsmenres_SPEC>;
    impl Hsmenres {
        #[doc = "00 HSM cannot trigger resets."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 HSM cannot trigger resets."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 HSM cannot trigger resets."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 HSM can trigger resets."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Destdbg_SPEC;
    pub type Destdbg = crate::EnumBitfieldStruct<u8, Destdbg_SPEC>;
    impl Destdbg {
        #[doc = "00 Debug entry is        non destructive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "01 Debug entry is        non destructive."]
        pub const CONST_11: Self = Self::new(1);
        #[doc = "10 Debug entry is        non destructive."]
        pub const CONST_22: Self = Self::new(2);
        #[doc = "11 Debug entry is        destructive."]
        pub const CONST_33: Self = Self::new(3);
    }
    pub struct Blkflan_SPEC;
    pub type Blkflan = crate::EnumBitfieldStruct<u8, Blkflan_SPEC>;
    impl Blkflan {
        #[doc = "0 Functions allowed on all Flash ranges."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Functions blocked on HSM exclusive Flash ranges."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SpProconhsmcotp0_SPEC;
impl crate::sealed::RegSpec for SpProconhsmcotp0_SPEC {
    type DataType = u32;
}
#[doc = "HSM Code OTP Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type SpProconhsmcotp0 = crate::RegValueT<SpProconhsmcotp0_SPEC>;

impl SpProconhsmcotp0 {
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm0rom(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm0Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm0Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm1rom(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm1Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm1Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm2rom(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm2Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm2Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm3rom(
        self,
    ) -> crate::common::RegisterField<
        3,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm3Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            3,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm3Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm4rom(
        self,
    ) -> crate::common::RegisterField<
        4,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm4Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            4,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm4Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm5rom(
        self,
    ) -> crate::common::RegisterField<
        5,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm5Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            5,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm5Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm6rom(
        self,
    ) -> crate::common::RegisterField<
        6,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm6Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            6,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm6Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm7rom(
        self,
    ) -> crate::common::RegisterField<
        7,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm7Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            7,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm7Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm8rom(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm8Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            8,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm8Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm9rom(
        self,
    ) -> crate::common::RegisterField<
        9,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm9Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            9,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm9Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm10rom(
        self,
    ) -> crate::common::RegisterField<
        10,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm10Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            10,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm10Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm11rom(
        self,
    ) -> crate::common::RegisterField<
        11,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm11Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            11,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm11Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm12rom(
        self,
    ) -> crate::common::RegisterField<
        12,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm12Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            12,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm12Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm13rom(
        self,
    ) -> crate::common::RegisterField<
        13,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm13Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            13,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm13Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm14rom(
        self,
    ) -> crate::common::RegisterField<
        14,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm14Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            14,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm14Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm15rom(
        self,
    ) -> crate::common::RegisterField<
        15,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm15Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            15,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm15Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm16rom(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm16Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            16,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm16Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm17rom(
        self,
    ) -> crate::common::RegisterField<
        17,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm17Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            17,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm17Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm18rom(
        self,
    ) -> crate::common::RegisterField<
        18,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm18Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            18,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm18Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm19rom(
        self,
    ) -> crate::common::RegisterField<
        19,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm19Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            19,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm19Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm20rom(
        self,
    ) -> crate::common::RegisterField<
        20,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm20Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            20,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm20Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm21rom(
        self,
    ) -> crate::common::RegisterField<
        21,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm21Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            21,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm21Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm22rom(
        self,
    ) -> crate::common::RegisterField<
        22,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm22Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            22,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm22Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm23rom(
        self,
    ) -> crate::common::RegisterField<
        23,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm23Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            23,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm23Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm24rom(
        self,
    ) -> crate::common::RegisterField<
        24,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm24Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            24,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm24Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm25rom(
        self,
    ) -> crate::common::RegisterField<
        25,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm25Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            25,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm25Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm26rom(
        self,
    ) -> crate::common::RegisterField<
        26,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm26Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            26,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm26Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm27rom(
        self,
    ) -> crate::common::RegisterField<
        27,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm27Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            27,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm27Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm28rom(
        self,
    ) -> crate::common::RegisterField<
        28,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm28Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            28,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm28Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm29rom(
        self,
    ) -> crate::common::RegisterField<
        29,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm29Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            29,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm29Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm30rom(
        self,
    ) -> crate::common::RegisterField<
        30,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm30Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            30,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm30Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Locked Forever   HSM31ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm31rom(
        self,
    ) -> crate::common::RegisterField<
        31,
        0x1,
        1,
        0,
        sp_proconhsmcotp0::Hsm31Rom,
        SpProconhsmcotp0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            31,
            0x1,
            1,
            0,
            sp_proconhsmcotp0::Hsm31Rom,
            SpProconhsmcotp0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SpProconhsmcotp0 {
    #[inline(always)]
    fn default() -> SpProconhsmcotp0 {
        <crate::RegValueT<SpProconhsmcotp0_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sp_proconhsmcotp0 {
    pub struct Hsm0Rom_SPEC;
    pub type Hsm0Rom = crate::EnumBitfieldStruct<u8, Hsm0Rom_SPEC>;
    impl Hsm0Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm1Rom_SPEC;
    pub type Hsm1Rom = crate::EnumBitfieldStruct<u8, Hsm1Rom_SPEC>;
    impl Hsm1Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm2Rom_SPEC;
    pub type Hsm2Rom = crate::EnumBitfieldStruct<u8, Hsm2Rom_SPEC>;
    impl Hsm2Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm3Rom_SPEC;
    pub type Hsm3Rom = crate::EnumBitfieldStruct<u8, Hsm3Rom_SPEC>;
    impl Hsm3Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm4Rom_SPEC;
    pub type Hsm4Rom = crate::EnumBitfieldStruct<u8, Hsm4Rom_SPEC>;
    impl Hsm4Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm5Rom_SPEC;
    pub type Hsm5Rom = crate::EnumBitfieldStruct<u8, Hsm5Rom_SPEC>;
    impl Hsm5Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm6Rom_SPEC;
    pub type Hsm6Rom = crate::EnumBitfieldStruct<u8, Hsm6Rom_SPEC>;
    impl Hsm6Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm7Rom_SPEC;
    pub type Hsm7Rom = crate::EnumBitfieldStruct<u8, Hsm7Rom_SPEC>;
    impl Hsm7Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm8Rom_SPEC;
    pub type Hsm8Rom = crate::EnumBitfieldStruct<u8, Hsm8Rom_SPEC>;
    impl Hsm8Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm9Rom_SPEC;
    pub type Hsm9Rom = crate::EnumBitfieldStruct<u8, Hsm9Rom_SPEC>;
    impl Hsm9Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm10Rom_SPEC;
    pub type Hsm10Rom = crate::EnumBitfieldStruct<u8, Hsm10Rom_SPEC>;
    impl Hsm10Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm11Rom_SPEC;
    pub type Hsm11Rom = crate::EnumBitfieldStruct<u8, Hsm11Rom_SPEC>;
    impl Hsm11Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm12Rom_SPEC;
    pub type Hsm12Rom = crate::EnumBitfieldStruct<u8, Hsm12Rom_SPEC>;
    impl Hsm12Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm13Rom_SPEC;
    pub type Hsm13Rom = crate::EnumBitfieldStruct<u8, Hsm13Rom_SPEC>;
    impl Hsm13Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm14Rom_SPEC;
    pub type Hsm14Rom = crate::EnumBitfieldStruct<u8, Hsm14Rom_SPEC>;
    impl Hsm14Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm15Rom_SPEC;
    pub type Hsm15Rom = crate::EnumBitfieldStruct<u8, Hsm15Rom_SPEC>;
    impl Hsm15Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm16Rom_SPEC;
    pub type Hsm16Rom = crate::EnumBitfieldStruct<u8, Hsm16Rom_SPEC>;
    impl Hsm16Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm17Rom_SPEC;
    pub type Hsm17Rom = crate::EnumBitfieldStruct<u8, Hsm17Rom_SPEC>;
    impl Hsm17Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm18Rom_SPEC;
    pub type Hsm18Rom = crate::EnumBitfieldStruct<u8, Hsm18Rom_SPEC>;
    impl Hsm18Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm19Rom_SPEC;
    pub type Hsm19Rom = crate::EnumBitfieldStruct<u8, Hsm19Rom_SPEC>;
    impl Hsm19Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm20Rom_SPEC;
    pub type Hsm20Rom = crate::EnumBitfieldStruct<u8, Hsm20Rom_SPEC>;
    impl Hsm20Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm21Rom_SPEC;
    pub type Hsm21Rom = crate::EnumBitfieldStruct<u8, Hsm21Rom_SPEC>;
    impl Hsm21Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm22Rom_SPEC;
    pub type Hsm22Rom = crate::EnumBitfieldStruct<u8, Hsm22Rom_SPEC>;
    impl Hsm22Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm23Rom_SPEC;
    pub type Hsm23Rom = crate::EnumBitfieldStruct<u8, Hsm23Rom_SPEC>;
    impl Hsm23Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm24Rom_SPEC;
    pub type Hsm24Rom = crate::EnumBitfieldStruct<u8, Hsm24Rom_SPEC>;
    impl Hsm24Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm25Rom_SPEC;
    pub type Hsm25Rom = crate::EnumBitfieldStruct<u8, Hsm25Rom_SPEC>;
    impl Hsm25Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm26Rom_SPEC;
    pub type Hsm26Rom = crate::EnumBitfieldStruct<u8, Hsm26Rom_SPEC>;
    impl Hsm26Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm27Rom_SPEC;
    pub type Hsm27Rom = crate::EnumBitfieldStruct<u8, Hsm27Rom_SPEC>;
    impl Hsm27Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm28Rom_SPEC;
    pub type Hsm28Rom = crate::EnumBitfieldStruct<u8, Hsm28Rom_SPEC>;
    impl Hsm28Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm29Rom_SPEC;
    pub type Hsm29Rom = crate::EnumBitfieldStruct<u8, Hsm29Rom_SPEC>;
    impl Hsm29Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm30Rom_SPEC;
    pub type Hsm30Rom = crate::EnumBitfieldStruct<u8, Hsm30Rom_SPEC>;
    impl Hsm30Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm31Rom_SPEC;
    pub type Hsm31Rom = crate::EnumBitfieldStruct<u8, Hsm31Rom_SPEC>;
    impl Hsm31Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SpProconhsmcotp1_SPEC;
impl crate::sealed::RegSpec for SpProconhsmcotp1_SPEC {
    type DataType = u32;
}
#[doc = "HSM Code OTP Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type SpProconhsmcotp1 = crate::RegValueT<SpProconhsmcotp1_SPEC>;

impl SpProconhsmcotp1 {
    #[doc = "PFLASH Sector 39 HSM Code Locked Forever   HSM39ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm32rom(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        sp_proconhsmcotp1::Hsm32Rom,
        SpProconhsmcotp1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            sp_proconhsmcotp1::Hsm32Rom,
            SpProconhsmcotp1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Locked Forever   HSM39ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm33rom(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        sp_proconhsmcotp1::Hsm33Rom,
        SpProconhsmcotp1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            sp_proconhsmcotp1::Hsm33Rom,
            SpProconhsmcotp1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Locked Forever   HSM39ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm34rom(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x1,
        1,
        0,
        sp_proconhsmcotp1::Hsm34Rom,
        SpProconhsmcotp1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x1,
            1,
            0,
            sp_proconhsmcotp1::Hsm34Rom,
            SpProconhsmcotp1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Locked Forever   HSM39ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm35rom(
        self,
    ) -> crate::common::RegisterField<
        3,
        0x1,
        1,
        0,
        sp_proconhsmcotp1::Hsm35Rom,
        SpProconhsmcotp1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            3,
            0x1,
            1,
            0,
            sp_proconhsmcotp1::Hsm35Rom,
            SpProconhsmcotp1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Locked Forever   HSM39ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm36rom(
        self,
    ) -> crate::common::RegisterField<
        4,
        0x1,
        1,
        0,
        sp_proconhsmcotp1::Hsm36Rom,
        SpProconhsmcotp1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            4,
            0x1,
            1,
            0,
            sp_proconhsmcotp1::Hsm36Rom,
            SpProconhsmcotp1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Locked Forever   HSM39ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm37rom(
        self,
    ) -> crate::common::RegisterField<
        5,
        0x1,
        1,
        0,
        sp_proconhsmcotp1::Hsm37Rom,
        SpProconhsmcotp1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            5,
            0x1,
            1,
            0,
            sp_proconhsmcotp1::Hsm37Rom,
            SpProconhsmcotp1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Locked Forever   HSM39ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm38rom(
        self,
    ) -> crate::common::RegisterField<
        6,
        0x1,
        1,
        0,
        sp_proconhsmcotp1::Hsm38Rom,
        SpProconhsmcotp1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            6,
            0x1,
            1,
            0,
            sp_proconhsmcotp1::Hsm38Rom,
            SpProconhsmcotp1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Locked Forever   HSM39ROM. This bit indicates whether PFLASH sector is an HSM Code OTP protected sector with read only functionality."]
    #[inline(always)]
    pub fn hsm39rom(
        self,
    ) -> crate::common::RegisterField<
        7,
        0x1,
        1,
        0,
        sp_proconhsmcotp1::Hsm39Rom,
        SpProconhsmcotp1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            7,
            0x1,
            1,
            0,
            sp_proconhsmcotp1::Hsm39Rom,
            SpProconhsmcotp1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SpProconhsmcotp1 {
    #[inline(always)]
    fn default() -> SpProconhsmcotp1 {
        <crate::RegValueT<SpProconhsmcotp1_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sp_proconhsmcotp1 {
    pub struct Hsm32Rom_SPEC;
    pub type Hsm32Rom = crate::EnumBitfieldStruct<u8, Hsm32Rom_SPEC>;
    impl Hsm32Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm33Rom_SPEC;
    pub type Hsm33Rom = crate::EnumBitfieldStruct<u8, Hsm33Rom_SPEC>;
    impl Hsm33Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm34Rom_SPEC;
    pub type Hsm34Rom = crate::EnumBitfieldStruct<u8, Hsm34Rom_SPEC>;
    impl Hsm34Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm35Rom_SPEC;
    pub type Hsm35Rom = crate::EnumBitfieldStruct<u8, Hsm35Rom_SPEC>;
    impl Hsm35Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm36Rom_SPEC;
    pub type Hsm36Rom = crate::EnumBitfieldStruct<u8, Hsm36Rom_SPEC>;
    impl Hsm36Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm37Rom_SPEC;
    pub type Hsm37Rom = crate::EnumBitfieldStruct<u8, Hsm37Rom_SPEC>;
    impl Hsm37Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm38Rom_SPEC;
    pub type Hsm38Rom = crate::EnumBitfieldStruct<u8, Hsm38Rom_SPEC>;
    impl Hsm38Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm39Rom_SPEC;
    pub type Hsm39Rom = crate::EnumBitfieldStruct<u8, Hsm39Rom_SPEC>;
    impl Hsm39Rom {
        #[doc = "0 No OTP protection is configured."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 OTP protection is configured."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SpProconhsmcx0_SPEC;
impl crate::sealed::RegSpec for SpProconhsmcx0_SPEC {
    type DataType = u32;
}
#[doc = "HSM Code Exclusive Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type SpProconhsmcx0 = crate::RegValueT<SpProconhsmcx0_SPEC>;

impl SpProconhsmcx0 {
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm0x(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm0X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm0X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm1x(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm1X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm1X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm2x(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm2X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm2X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm3x(
        self,
    ) -> crate::common::RegisterField<
        3,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm3X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            3,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm3X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm4x(
        self,
    ) -> crate::common::RegisterField<
        4,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm4X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            4,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm4X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm5x(
        self,
    ) -> crate::common::RegisterField<
        5,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm5X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            5,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm5X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm6x(
        self,
    ) -> crate::common::RegisterField<
        6,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm6X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            6,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm6X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm7x(
        self,
    ) -> crate::common::RegisterField<
        7,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm7X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            7,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm7X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm8x(
        self,
    ) -> crate::common::RegisterField<
        8,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm8X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            8,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm8X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm9x(
        self,
    ) -> crate::common::RegisterField<
        9,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm9X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            9,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm9X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm10x(
        self,
    ) -> crate::common::RegisterField<
        10,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm10X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            10,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm10X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm11x(
        self,
    ) -> crate::common::RegisterField<
        11,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm11X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            11,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm11X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm12x(
        self,
    ) -> crate::common::RegisterField<
        12,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm12X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            12,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm12X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm13x(
        self,
    ) -> crate::common::RegisterField<
        13,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm13X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            13,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm13X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm14x(
        self,
    ) -> crate::common::RegisterField<
        14,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm14X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            14,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm14X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm15x(
        self,
    ) -> crate::common::RegisterField<
        15,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm15X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            15,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm15X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm16x(
        self,
    ) -> crate::common::RegisterField<
        16,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm16X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            16,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm16X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm17x(
        self,
    ) -> crate::common::RegisterField<
        17,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm17X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            17,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm17X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm18x(
        self,
    ) -> crate::common::RegisterField<
        18,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm18X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            18,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm18X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm19x(
        self,
    ) -> crate::common::RegisterField<
        19,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm19X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            19,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm19X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm20x(
        self,
    ) -> crate::common::RegisterField<
        20,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm20X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            20,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm20X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm21x(
        self,
    ) -> crate::common::RegisterField<
        21,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm21X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            21,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm21X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm22x(
        self,
    ) -> crate::common::RegisterField<
        22,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm22X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            22,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm22X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm23x(
        self,
    ) -> crate::common::RegisterField<
        23,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm23X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            23,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm23X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm24x(
        self,
    ) -> crate::common::RegisterField<
        24,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm24X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            24,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm24X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm25x(
        self,
    ) -> crate::common::RegisterField<
        25,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm25X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            25,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm25X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm26x(
        self,
    ) -> crate::common::RegisterField<
        26,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm26X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            26,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm26X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm27x(
        self,
    ) -> crate::common::RegisterField<
        27,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm27X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            27,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm27X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm28x(
        self,
    ) -> crate::common::RegisterField<
        28,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm28X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            28,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm28X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm29x(
        self,
    ) -> crate::common::RegisterField<
        29,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm29X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            29,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm29X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm30x(
        self,
    ) -> crate::common::RegisterField<
        30,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm30X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            30,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm30X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 31 HSM Code Exclusive   HSM31X. This bit indicates whether the PFLASH logical sector is   8220 HSM exclusive  8221 ."]
    #[inline(always)]
    pub fn hsm31x(
        self,
    ) -> crate::common::RegisterField<
        31,
        0x1,
        1,
        0,
        sp_proconhsmcx0::Hsm31X,
        SpProconhsmcx0_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            31,
            0x1,
            1,
            0,
            sp_proconhsmcx0::Hsm31X,
            SpProconhsmcx0_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SpProconhsmcx0 {
    #[inline(always)]
    fn default() -> SpProconhsmcx0 {
        <crate::RegValueT<SpProconhsmcx0_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sp_proconhsmcx0 {
    pub struct Hsm0X_SPEC;
    pub type Hsm0X = crate::EnumBitfieldStruct<u8, Hsm0X_SPEC>;
    impl Hsm0X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm1X_SPEC;
    pub type Hsm1X = crate::EnumBitfieldStruct<u8, Hsm1X_SPEC>;
    impl Hsm1X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm2X_SPEC;
    pub type Hsm2X = crate::EnumBitfieldStruct<u8, Hsm2X_SPEC>;
    impl Hsm2X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm3X_SPEC;
    pub type Hsm3X = crate::EnumBitfieldStruct<u8, Hsm3X_SPEC>;
    impl Hsm3X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm4X_SPEC;
    pub type Hsm4X = crate::EnumBitfieldStruct<u8, Hsm4X_SPEC>;
    impl Hsm4X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm5X_SPEC;
    pub type Hsm5X = crate::EnumBitfieldStruct<u8, Hsm5X_SPEC>;
    impl Hsm5X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm6X_SPEC;
    pub type Hsm6X = crate::EnumBitfieldStruct<u8, Hsm6X_SPEC>;
    impl Hsm6X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm7X_SPEC;
    pub type Hsm7X = crate::EnumBitfieldStruct<u8, Hsm7X_SPEC>;
    impl Hsm7X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm8X_SPEC;
    pub type Hsm8X = crate::EnumBitfieldStruct<u8, Hsm8X_SPEC>;
    impl Hsm8X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm9X_SPEC;
    pub type Hsm9X = crate::EnumBitfieldStruct<u8, Hsm9X_SPEC>;
    impl Hsm9X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm10X_SPEC;
    pub type Hsm10X = crate::EnumBitfieldStruct<u8, Hsm10X_SPEC>;
    impl Hsm10X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm11X_SPEC;
    pub type Hsm11X = crate::EnumBitfieldStruct<u8, Hsm11X_SPEC>;
    impl Hsm11X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm12X_SPEC;
    pub type Hsm12X = crate::EnumBitfieldStruct<u8, Hsm12X_SPEC>;
    impl Hsm12X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm13X_SPEC;
    pub type Hsm13X = crate::EnumBitfieldStruct<u8, Hsm13X_SPEC>;
    impl Hsm13X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm14X_SPEC;
    pub type Hsm14X = crate::EnumBitfieldStruct<u8, Hsm14X_SPEC>;
    impl Hsm14X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm15X_SPEC;
    pub type Hsm15X = crate::EnumBitfieldStruct<u8, Hsm15X_SPEC>;
    impl Hsm15X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm16X_SPEC;
    pub type Hsm16X = crate::EnumBitfieldStruct<u8, Hsm16X_SPEC>;
    impl Hsm16X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm17X_SPEC;
    pub type Hsm17X = crate::EnumBitfieldStruct<u8, Hsm17X_SPEC>;
    impl Hsm17X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm18X_SPEC;
    pub type Hsm18X = crate::EnumBitfieldStruct<u8, Hsm18X_SPEC>;
    impl Hsm18X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm19X_SPEC;
    pub type Hsm19X = crate::EnumBitfieldStruct<u8, Hsm19X_SPEC>;
    impl Hsm19X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm20X_SPEC;
    pub type Hsm20X = crate::EnumBitfieldStruct<u8, Hsm20X_SPEC>;
    impl Hsm20X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm21X_SPEC;
    pub type Hsm21X = crate::EnumBitfieldStruct<u8, Hsm21X_SPEC>;
    impl Hsm21X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm22X_SPEC;
    pub type Hsm22X = crate::EnumBitfieldStruct<u8, Hsm22X_SPEC>;
    impl Hsm22X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm23X_SPEC;
    pub type Hsm23X = crate::EnumBitfieldStruct<u8, Hsm23X_SPEC>;
    impl Hsm23X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm24X_SPEC;
    pub type Hsm24X = crate::EnumBitfieldStruct<u8, Hsm24X_SPEC>;
    impl Hsm24X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm25X_SPEC;
    pub type Hsm25X = crate::EnumBitfieldStruct<u8, Hsm25X_SPEC>;
    impl Hsm25X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm26X_SPEC;
    pub type Hsm26X = crate::EnumBitfieldStruct<u8, Hsm26X_SPEC>;
    impl Hsm26X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm27X_SPEC;
    pub type Hsm27X = crate::EnumBitfieldStruct<u8, Hsm27X_SPEC>;
    impl Hsm27X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm28X_SPEC;
    pub type Hsm28X = crate::EnumBitfieldStruct<u8, Hsm28X_SPEC>;
    impl Hsm28X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm29X_SPEC;
    pub type Hsm29X = crate::EnumBitfieldStruct<u8, Hsm29X_SPEC>;
    impl Hsm29X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm30X_SPEC;
    pub type Hsm30X = crate::EnumBitfieldStruct<u8, Hsm30X_SPEC>;
    impl Hsm30X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm31X_SPEC;
    pub type Hsm31X = crate::EnumBitfieldStruct<u8, Hsm31X_SPEC>;
    impl Hsm31X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
}
#[doc(hidden)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct SpProconhsmcx1_SPEC;
impl crate::sealed::RegSpec for SpProconhsmcx1_SPEC {
    type DataType = u32;
}
#[doc = "HSM Code Exclusive Protection Configuration\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
pub type SpProconhsmcx1 = crate::RegValueT<SpProconhsmcx1_SPEC>;

impl SpProconhsmcx1 {
    #[doc = "PFLASH Sector 39 HSM Code Exclusive   HSM39X. This bit indicates whether the PFLASH logical sector is  HSM exclusive ."]
    #[inline(always)]
    pub fn hsm32x(
        self,
    ) -> crate::common::RegisterField<
        0,
        0x1,
        1,
        0,
        sp_proconhsmcx1::Hsm32X,
        SpProconhsmcx1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            0,
            0x1,
            1,
            0,
            sp_proconhsmcx1::Hsm32X,
            SpProconhsmcx1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Exclusive   HSM39X. This bit indicates whether the PFLASH logical sector is  HSM exclusive ."]
    #[inline(always)]
    pub fn hsm33x(
        self,
    ) -> crate::common::RegisterField<
        1,
        0x1,
        1,
        0,
        sp_proconhsmcx1::Hsm33X,
        SpProconhsmcx1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            1,
            0x1,
            1,
            0,
            sp_proconhsmcx1::Hsm33X,
            SpProconhsmcx1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Exclusive   HSM39X. This bit indicates whether the PFLASH logical sector is  HSM exclusive ."]
    #[inline(always)]
    pub fn hsm34x(
        self,
    ) -> crate::common::RegisterField<
        2,
        0x1,
        1,
        0,
        sp_proconhsmcx1::Hsm34X,
        SpProconhsmcx1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            2,
            0x1,
            1,
            0,
            sp_proconhsmcx1::Hsm34X,
            SpProconhsmcx1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Exclusive   HSM39X. This bit indicates whether the PFLASH logical sector is  HSM exclusive ."]
    #[inline(always)]
    pub fn hsm35x(
        self,
    ) -> crate::common::RegisterField<
        3,
        0x1,
        1,
        0,
        sp_proconhsmcx1::Hsm35X,
        SpProconhsmcx1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            3,
            0x1,
            1,
            0,
            sp_proconhsmcx1::Hsm35X,
            SpProconhsmcx1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Exclusive   HSM39X. This bit indicates whether the PFLASH logical sector is  HSM exclusive ."]
    #[inline(always)]
    pub fn hsm36x(
        self,
    ) -> crate::common::RegisterField<
        4,
        0x1,
        1,
        0,
        sp_proconhsmcx1::Hsm36X,
        SpProconhsmcx1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            4,
            0x1,
            1,
            0,
            sp_proconhsmcx1::Hsm36X,
            SpProconhsmcx1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Exclusive   HSM39X. This bit indicates whether the PFLASH logical sector is  HSM exclusive ."]
    #[inline(always)]
    pub fn hsm37x(
        self,
    ) -> crate::common::RegisterField<
        5,
        0x1,
        1,
        0,
        sp_proconhsmcx1::Hsm37X,
        SpProconhsmcx1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            5,
            0x1,
            1,
            0,
            sp_proconhsmcx1::Hsm37X,
            SpProconhsmcx1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Exclusive   HSM39X. This bit indicates whether the PFLASH logical sector is  HSM exclusive ."]
    #[inline(always)]
    pub fn hsm38x(
        self,
    ) -> crate::common::RegisterField<
        6,
        0x1,
        1,
        0,
        sp_proconhsmcx1::Hsm38X,
        SpProconhsmcx1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            6,
            0x1,
            1,
            0,
            sp_proconhsmcx1::Hsm38X,
            SpProconhsmcx1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
    #[doc = "PFLASH Sector 39 HSM Code Exclusive   HSM39X. This bit indicates whether the PFLASH logical sector is  HSM exclusive ."]
    #[inline(always)]
    pub fn hsm39x(
        self,
    ) -> crate::common::RegisterField<
        7,
        0x1,
        1,
        0,
        sp_proconhsmcx1::Hsm39X,
        SpProconhsmcx1_SPEC,
        crate::common::R,
    > {
        crate::common::RegisterField::<
            7,
            0x1,
            1,
            0,
            sp_proconhsmcx1::Hsm39X,
            SpProconhsmcx1_SPEC,
            crate::common::R,
        >::from_register(self, 0)
    }
}
impl core::default::Default for SpProconhsmcx1 {
    #[inline(always)]
    fn default() -> SpProconhsmcx1 {
        <crate::RegValueT<SpProconhsmcx1_SPEC> as RegisterValue<_>>::new(0)
    }
}
pub mod sp_proconhsmcx1 {
    pub struct Hsm32X_SPEC;
    pub type Hsm32X = crate::EnumBitfieldStruct<u8, Hsm32X_SPEC>;
    impl Hsm32X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm33X_SPEC;
    pub type Hsm33X = crate::EnumBitfieldStruct<u8, Hsm33X_SPEC>;
    impl Hsm33X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm34X_SPEC;
    pub type Hsm34X = crate::EnumBitfieldStruct<u8, Hsm34X_SPEC>;
    impl Hsm34X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm35X_SPEC;
    pub type Hsm35X = crate::EnumBitfieldStruct<u8, Hsm35X_SPEC>;
    impl Hsm35X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm36X_SPEC;
    pub type Hsm36X = crate::EnumBitfieldStruct<u8, Hsm36X_SPEC>;
    impl Hsm36X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm37X_SPEC;
    pub type Hsm37X = crate::EnumBitfieldStruct<u8, Hsm37X_SPEC>;
    impl Hsm37X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm38X_SPEC;
    pub type Hsm38X = crate::EnumBitfieldStruct<u8, Hsm38X_SPEC>;
    impl Hsm38X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
    pub struct Hsm39X_SPEC;
    pub type Hsm39X = crate::EnumBitfieldStruct<u8, Hsm39X_SPEC>;
    impl Hsm39X {
        #[doc = "0 Logical sector is not configured HSM exclusive."]
        pub const CONST_00: Self = Self::new(0);
        #[doc = "1 Logical sector is configured HSM exclusive."]
        pub const CONST_11: Self = Self::new(1);
    }
}

#[doc = "HP"]
#[derive(Copy, Clone, Eq, PartialEq)]
pub struct Hp(pub(super) *mut u8);
unsafe impl core::marker::Send for Hp {}
unsafe impl core::marker::Sync for Hp {}
impl Hp {
    #[doc = "PFLASH Bank 0 Erase Counter Priority configuration 0\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_ecprioi0(&self) -> crate::common::Reg<hp::HpEcpriOi0_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(160usize)) }
    }
    #[doc = "PFLASH Bank 0 Erase Counter Priority Configuration 1\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_ecprioi1(&self) -> crate::common::Reg<hp::HpEcpriOi1_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(164usize)) }
    }
    #[doc = "PFLASH Bank 0 Erase Counter Priority Configuration 2\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_ecprioi2(&self) -> crate::common::Reg<hp::HpEcpriOi2_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(168usize)) }
    }
    #[doc = "PFLASH Bank 0 Erase Counter Priority Configuration 3\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_ecprioi3(&self) -> crate::common::Reg<hp::HpEcpriOi3_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(172usize)) }
    }
    #[doc = "PFLASH Bank 0 Erase Counter Priority Configuration 4\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_ecprioi4(&self) -> crate::common::Reg<hp::HpEcpriOi4_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(176usize)) }
    }
    #[doc = "PFLASH Bank 0 Erase Counter Priority Configuration 5\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_ecprioi5(&self) -> crate::common::Reg<hp::HpEcpriOi5_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(180usize)) }
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 0\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconotpi0(
        &self,
    ) -> crate::common::Reg<hp::HpProconotPi0_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(64usize)) }
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 1\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconotpi1(
        &self,
    ) -> crate::common::Reg<hp::HpProconotPi1_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(68usize)) }
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 2\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconotpi2(
        &self,
    ) -> crate::common::Reg<hp::HpProconotPi2_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(72usize)) }
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 3\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconotpi3(
        &self,
    ) -> crate::common::Reg<hp::HpProconotPi3_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(76usize)) }
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 4\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconotpi4(
        &self,
    ) -> crate::common::Reg<hp::HpProconotPi4_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(80usize)) }
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 5\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconotpi5(
        &self,
    ) -> crate::common::Reg<hp::HpProconotPi5_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(84usize)) }
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 0\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconpi0(&self) -> crate::common::Reg<hp::HpProconPi0_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(0usize)) }
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 1\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconpi1(&self) -> crate::common::Reg<hp::HpProconPi1_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(4usize)) }
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 2\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconpi2(&self) -> crate::common::Reg<hp::HpProconPi2_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(8usize)) }
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 3\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconpi3(&self) -> crate::common::Reg<hp::HpProconPi3_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(12usize)) }
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 4\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconpi4(&self) -> crate::common::Reg<hp::HpProconPi4_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(16usize)) }
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 5\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconpi5(&self) -> crate::common::Reg<hp::HpProconPi5_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(20usize)) }
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 0\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconwopi0(
        &self,
    ) -> crate::common::Reg<hp::HpProconwoPi0_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(128usize)) }
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 1\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconwopi1(
        &self,
    ) -> crate::common::Reg<hp::HpProconwoPi1_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(132usize)) }
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 2\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconwopi2(
        &self,
    ) -> crate::common::Reg<hp::HpProconwoPi2_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(136usize)) }
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 3\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconwopi3(
        &self,
    ) -> crate::common::Reg<hp::HpProconwoPi3_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(140usize)) }
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 4\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconwopi4(
        &self,
    ) -> crate::common::Reg<hp::HpProconwoPi4_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(144usize)) }
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 5\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    #[inline(always)]
    pub const fn hp_proconwopi5(
        &self,
    ) -> crate::common::Reg<hp::HpProconwoPi5_SPEC, crate::common::R> {
        unsafe { crate::common::Reg::from_ptr(self.0.add(148usize)) }
    }
}
pub mod hp {
    #[allow(unused_imports)]
    use crate::common::*;
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpEcpriOi0_SPEC;
    impl crate::sealed::RegSpec for HpEcpriOi0_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Erase Counter Priority configuration 0\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpEcpriOi0 = crate::RegValueT<HpEcpriOi0_SPEC>;

    impl HpEcpriOi0 {
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s0l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_ecprioi0::S0L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_ecprioi0::S0L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s1l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_ecprioi0::S1L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_ecprioi0::S1L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s2l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_ecprioi0::S2L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_ecprioi0::S2L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s3l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_ecprioi0::S3L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_ecprioi0::S3L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s4l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_ecprioi0::S4L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_ecprioi0::S4L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s5l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_ecprioi0::S5L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_ecprioi0::S5L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s6l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_ecprioi0::S6L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_ecprioi0::S6L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s7l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_ecprioi0::S7L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_ecprioi0::S7L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s8l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_ecprioi0::S8L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_ecprioi0::S8L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s9l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_ecprioi0::S9L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_ecprioi0::S9L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s10l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_ecprioi0::S10L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_ecprioi0::S10L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s11l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_ecprioi0::S11L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_ecprioi0::S11L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s12l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_ecprioi0::S12L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_ecprioi0::S12L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s13l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_ecprioi0::S13L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_ecprioi0::S13L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s14l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_ecprioi0::S14L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_ecprioi0::S14L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s15l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_ecprioi0::S15L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_ecprioi0::S15L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s16l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_ecprioi0::S16L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_ecprioi0::S16L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s17l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_ecprioi0::S17L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_ecprioi0::S17L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s18l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_ecprioi0::S18L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_ecprioi0::S18L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s19l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_ecprioi0::S19L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_ecprioi0::S19L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s20l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_ecprioi0::S20L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_ecprioi0::S20L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s21l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_ecprioi0::S21L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_ecprioi0::S21L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s22l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_ecprioi0::S22L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_ecprioi0::S22L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s23l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_ecprioi0::S23L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_ecprioi0::S23L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s24l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_ecprioi0::S24L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_ecprioi0::S24L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s25l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_ecprioi0::S25L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_ecprioi0::S25L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s26l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_ecprioi0::S26L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_ecprioi0::S26L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s27l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_ecprioi0::S27L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_ecprioi0::S27L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s28l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_ecprioi0::S28L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_ecprioi0::S28L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s29l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_ecprioi0::S29L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_ecprioi0::S29L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s30l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_ecprioi0::S30L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_ecprioi0::S30L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Erase Counter priority   S31L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s31l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_ecprioi0::S31L,
            HpEcpriOi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_ecprioi0::S31L,
                HpEcpriOi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpEcpriOi0 {
        #[inline(always)]
        fn default() -> HpEcpriOi0 {
            <crate::RegValueT<HpEcpriOi0_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_ecprioi0 {
        pub struct S0L_SPEC;
        pub type S0L = crate::EnumBitfieldStruct<u8, S0L_SPEC>;
        impl S0L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S1L_SPEC;
        pub type S1L = crate::EnumBitfieldStruct<u8, S1L_SPEC>;
        impl S1L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S2L_SPEC;
        pub type S2L = crate::EnumBitfieldStruct<u8, S2L_SPEC>;
        impl S2L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S3L_SPEC;
        pub type S3L = crate::EnumBitfieldStruct<u8, S3L_SPEC>;
        impl S3L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S4L_SPEC;
        pub type S4L = crate::EnumBitfieldStruct<u8, S4L_SPEC>;
        impl S4L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S5L_SPEC;
        pub type S5L = crate::EnumBitfieldStruct<u8, S5L_SPEC>;
        impl S5L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S6L_SPEC;
        pub type S6L = crate::EnumBitfieldStruct<u8, S6L_SPEC>;
        impl S6L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S7L_SPEC;
        pub type S7L = crate::EnumBitfieldStruct<u8, S7L_SPEC>;
        impl S7L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S8L_SPEC;
        pub type S8L = crate::EnumBitfieldStruct<u8, S8L_SPEC>;
        impl S8L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S9L_SPEC;
        pub type S9L = crate::EnumBitfieldStruct<u8, S9L_SPEC>;
        impl S9L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S10L_SPEC;
        pub type S10L = crate::EnumBitfieldStruct<u8, S10L_SPEC>;
        impl S10L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S11L_SPEC;
        pub type S11L = crate::EnumBitfieldStruct<u8, S11L_SPEC>;
        impl S11L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S12L_SPEC;
        pub type S12L = crate::EnumBitfieldStruct<u8, S12L_SPEC>;
        impl S12L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S13L_SPEC;
        pub type S13L = crate::EnumBitfieldStruct<u8, S13L_SPEC>;
        impl S13L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S14L_SPEC;
        pub type S14L = crate::EnumBitfieldStruct<u8, S14L_SPEC>;
        impl S14L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S15L_SPEC;
        pub type S15L = crate::EnumBitfieldStruct<u8, S15L_SPEC>;
        impl S15L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S16L_SPEC;
        pub type S16L = crate::EnumBitfieldStruct<u8, S16L_SPEC>;
        impl S16L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S17L_SPEC;
        pub type S17L = crate::EnumBitfieldStruct<u8, S17L_SPEC>;
        impl S17L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S18L_SPEC;
        pub type S18L = crate::EnumBitfieldStruct<u8, S18L_SPEC>;
        impl S18L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S19L_SPEC;
        pub type S19L = crate::EnumBitfieldStruct<u8, S19L_SPEC>;
        impl S19L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S20L_SPEC;
        pub type S20L = crate::EnumBitfieldStruct<u8, S20L_SPEC>;
        impl S20L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S21L_SPEC;
        pub type S21L = crate::EnumBitfieldStruct<u8, S21L_SPEC>;
        impl S21L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S22L_SPEC;
        pub type S22L = crate::EnumBitfieldStruct<u8, S22L_SPEC>;
        impl S22L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S23L_SPEC;
        pub type S23L = crate::EnumBitfieldStruct<u8, S23L_SPEC>;
        impl S23L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S24L_SPEC;
        pub type S24L = crate::EnumBitfieldStruct<u8, S24L_SPEC>;
        impl S24L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S25L_SPEC;
        pub type S25L = crate::EnumBitfieldStruct<u8, S25L_SPEC>;
        impl S25L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S26L_SPEC;
        pub type S26L = crate::EnumBitfieldStruct<u8, S26L_SPEC>;
        impl S26L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S27L_SPEC;
        pub type S27L = crate::EnumBitfieldStruct<u8, S27L_SPEC>;
        impl S27L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S28L_SPEC;
        pub type S28L = crate::EnumBitfieldStruct<u8, S28L_SPEC>;
        impl S28L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S29L_SPEC;
        pub type S29L = crate::EnumBitfieldStruct<u8, S29L_SPEC>;
        impl S29L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S30L_SPEC;
        pub type S30L = crate::EnumBitfieldStruct<u8, S30L_SPEC>;
        impl S30L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S31L_SPEC;
        pub type S31L = crate::EnumBitfieldStruct<u8, S31L_SPEC>;
        impl S31L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpEcpriOi1_SPEC;
    impl crate::sealed::RegSpec for HpEcpriOi1_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Erase Counter Priority Configuration 1\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpEcpriOi1 = crate::RegValueT<HpEcpriOi1_SPEC>;

    impl HpEcpriOi1 {
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s32l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_ecprioi1::S32L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_ecprioi1::S32L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s33l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_ecprioi1::S33L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_ecprioi1::S33L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s34l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_ecprioi1::S34L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_ecprioi1::S34L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s35l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_ecprioi1::S35L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_ecprioi1::S35L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s36l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_ecprioi1::S36L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_ecprioi1::S36L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s37l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_ecprioi1::S37L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_ecprioi1::S37L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s38l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_ecprioi1::S38L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_ecprioi1::S38L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s39l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_ecprioi1::S39L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_ecprioi1::S39L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s40l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_ecprioi1::S40L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_ecprioi1::S40L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s41l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_ecprioi1::S41L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_ecprioi1::S41L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s42l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_ecprioi1::S42L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_ecprioi1::S42L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s43l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_ecprioi1::S43L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_ecprioi1::S43L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s44l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_ecprioi1::S44L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_ecprioi1::S44L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s45l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_ecprioi1::S45L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_ecprioi1::S45L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s46l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_ecprioi1::S46L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_ecprioi1::S46L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s47l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_ecprioi1::S47L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_ecprioi1::S47L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s48l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_ecprioi1::S48L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_ecprioi1::S48L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s49l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_ecprioi1::S49L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_ecprioi1::S49L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s50l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_ecprioi1::S50L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_ecprioi1::S50L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s51l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_ecprioi1::S51L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_ecprioi1::S51L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s52l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_ecprioi1::S52L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_ecprioi1::S52L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s53l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_ecprioi1::S53L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_ecprioi1::S53L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s54l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_ecprioi1::S54L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_ecprioi1::S54L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s55l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_ecprioi1::S55L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_ecprioi1::S55L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s56l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_ecprioi1::S56L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_ecprioi1::S56L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s57l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_ecprioi1::S57L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_ecprioi1::S57L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s58l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_ecprioi1::S58L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_ecprioi1::S58L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s59l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_ecprioi1::S59L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_ecprioi1::S59L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s60l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_ecprioi1::S60L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_ecprioi1::S60L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s61l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_ecprioi1::S61L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_ecprioi1::S61L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s62l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_ecprioi1::S62L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_ecprioi1::S62L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Erase Counter priority   S63L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s63l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_ecprioi1::S63L,
            HpEcpriOi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_ecprioi1::S63L,
                HpEcpriOi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpEcpriOi1 {
        #[inline(always)]
        fn default() -> HpEcpriOi1 {
            <crate::RegValueT<HpEcpriOi1_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_ecprioi1 {
        pub struct S32L_SPEC;
        pub type S32L = crate::EnumBitfieldStruct<u8, S32L_SPEC>;
        impl S32L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S33L_SPEC;
        pub type S33L = crate::EnumBitfieldStruct<u8, S33L_SPEC>;
        impl S33L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S34L_SPEC;
        pub type S34L = crate::EnumBitfieldStruct<u8, S34L_SPEC>;
        impl S34L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S35L_SPEC;
        pub type S35L = crate::EnumBitfieldStruct<u8, S35L_SPEC>;
        impl S35L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S36L_SPEC;
        pub type S36L = crate::EnumBitfieldStruct<u8, S36L_SPEC>;
        impl S36L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S37L_SPEC;
        pub type S37L = crate::EnumBitfieldStruct<u8, S37L_SPEC>;
        impl S37L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S38L_SPEC;
        pub type S38L = crate::EnumBitfieldStruct<u8, S38L_SPEC>;
        impl S38L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S39L_SPEC;
        pub type S39L = crate::EnumBitfieldStruct<u8, S39L_SPEC>;
        impl S39L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S40L_SPEC;
        pub type S40L = crate::EnumBitfieldStruct<u8, S40L_SPEC>;
        impl S40L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S41L_SPEC;
        pub type S41L = crate::EnumBitfieldStruct<u8, S41L_SPEC>;
        impl S41L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S42L_SPEC;
        pub type S42L = crate::EnumBitfieldStruct<u8, S42L_SPEC>;
        impl S42L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S43L_SPEC;
        pub type S43L = crate::EnumBitfieldStruct<u8, S43L_SPEC>;
        impl S43L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S44L_SPEC;
        pub type S44L = crate::EnumBitfieldStruct<u8, S44L_SPEC>;
        impl S44L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S45L_SPEC;
        pub type S45L = crate::EnumBitfieldStruct<u8, S45L_SPEC>;
        impl S45L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S46L_SPEC;
        pub type S46L = crate::EnumBitfieldStruct<u8, S46L_SPEC>;
        impl S46L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S47L_SPEC;
        pub type S47L = crate::EnumBitfieldStruct<u8, S47L_SPEC>;
        impl S47L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S48L_SPEC;
        pub type S48L = crate::EnumBitfieldStruct<u8, S48L_SPEC>;
        impl S48L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S49L_SPEC;
        pub type S49L = crate::EnumBitfieldStruct<u8, S49L_SPEC>;
        impl S49L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S50L_SPEC;
        pub type S50L = crate::EnumBitfieldStruct<u8, S50L_SPEC>;
        impl S50L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S51L_SPEC;
        pub type S51L = crate::EnumBitfieldStruct<u8, S51L_SPEC>;
        impl S51L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S52L_SPEC;
        pub type S52L = crate::EnumBitfieldStruct<u8, S52L_SPEC>;
        impl S52L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S53L_SPEC;
        pub type S53L = crate::EnumBitfieldStruct<u8, S53L_SPEC>;
        impl S53L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S54L_SPEC;
        pub type S54L = crate::EnumBitfieldStruct<u8, S54L_SPEC>;
        impl S54L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S55L_SPEC;
        pub type S55L = crate::EnumBitfieldStruct<u8, S55L_SPEC>;
        impl S55L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S56L_SPEC;
        pub type S56L = crate::EnumBitfieldStruct<u8, S56L_SPEC>;
        impl S56L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S57L_SPEC;
        pub type S57L = crate::EnumBitfieldStruct<u8, S57L_SPEC>;
        impl S57L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S58L_SPEC;
        pub type S58L = crate::EnumBitfieldStruct<u8, S58L_SPEC>;
        impl S58L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S59L_SPEC;
        pub type S59L = crate::EnumBitfieldStruct<u8, S59L_SPEC>;
        impl S59L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S60L_SPEC;
        pub type S60L = crate::EnumBitfieldStruct<u8, S60L_SPEC>;
        impl S60L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S61L_SPEC;
        pub type S61L = crate::EnumBitfieldStruct<u8, S61L_SPEC>;
        impl S61L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S62L_SPEC;
        pub type S62L = crate::EnumBitfieldStruct<u8, S62L_SPEC>;
        impl S62L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S63L_SPEC;
        pub type S63L = crate::EnumBitfieldStruct<u8, S63L_SPEC>;
        impl S63L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpEcpriOi2_SPEC;
    impl crate::sealed::RegSpec for HpEcpriOi2_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Erase Counter Priority Configuration 2\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpEcpriOi2 = crate::RegValueT<HpEcpriOi2_SPEC>;

    impl HpEcpriOi2 {
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s64l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_ecprioi2::S64L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_ecprioi2::S64L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s65l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_ecprioi2::S65L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_ecprioi2::S65L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s66l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_ecprioi2::S66L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_ecprioi2::S66L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s67l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_ecprioi2::S67L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_ecprioi2::S67L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s68l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_ecprioi2::S68L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_ecprioi2::S68L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s69l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_ecprioi2::S69L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_ecprioi2::S69L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s70l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_ecprioi2::S70L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_ecprioi2::S70L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s71l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_ecprioi2::S71L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_ecprioi2::S71L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s72l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_ecprioi2::S72L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_ecprioi2::S72L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s73l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_ecprioi2::S73L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_ecprioi2::S73L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s74l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_ecprioi2::S74L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_ecprioi2::S74L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s75l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_ecprioi2::S75L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_ecprioi2::S75L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s76l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_ecprioi2::S76L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_ecprioi2::S76L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s77l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_ecprioi2::S77L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_ecprioi2::S77L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s78l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_ecprioi2::S78L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_ecprioi2::S78L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s79l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_ecprioi2::S79L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_ecprioi2::S79L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s80l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_ecprioi2::S80L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_ecprioi2::S80L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s81l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_ecprioi2::S81L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_ecprioi2::S81L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s82l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_ecprioi2::S82L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_ecprioi2::S82L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s83l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_ecprioi2::S83L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_ecprioi2::S83L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s84l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_ecprioi2::S84L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_ecprioi2::S84L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s85l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_ecprioi2::S85L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_ecprioi2::S85L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s86l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_ecprioi2::S86L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_ecprioi2::S86L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s87l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_ecprioi2::S87L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_ecprioi2::S87L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s88l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_ecprioi2::S88L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_ecprioi2::S88L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s89l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_ecprioi2::S89L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_ecprioi2::S89L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s90l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_ecprioi2::S90L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_ecprioi2::S90L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s91l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_ecprioi2::S91L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_ecprioi2::S91L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s92l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_ecprioi2::S92L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_ecprioi2::S92L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s93l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_ecprioi2::S93L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_ecprioi2::S93L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s94l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_ecprioi2::S94L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_ecprioi2::S94L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Erase Counter priority   S95L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s95l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_ecprioi2::S95L,
            HpEcpriOi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_ecprioi2::S95L,
                HpEcpriOi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpEcpriOi2 {
        #[inline(always)]
        fn default() -> HpEcpriOi2 {
            <crate::RegValueT<HpEcpriOi2_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_ecprioi2 {
        pub struct S64L_SPEC;
        pub type S64L = crate::EnumBitfieldStruct<u8, S64L_SPEC>;
        impl S64L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S65L_SPEC;
        pub type S65L = crate::EnumBitfieldStruct<u8, S65L_SPEC>;
        impl S65L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S66L_SPEC;
        pub type S66L = crate::EnumBitfieldStruct<u8, S66L_SPEC>;
        impl S66L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S67L_SPEC;
        pub type S67L = crate::EnumBitfieldStruct<u8, S67L_SPEC>;
        impl S67L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S68L_SPEC;
        pub type S68L = crate::EnumBitfieldStruct<u8, S68L_SPEC>;
        impl S68L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S69L_SPEC;
        pub type S69L = crate::EnumBitfieldStruct<u8, S69L_SPEC>;
        impl S69L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S70L_SPEC;
        pub type S70L = crate::EnumBitfieldStruct<u8, S70L_SPEC>;
        impl S70L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S71L_SPEC;
        pub type S71L = crate::EnumBitfieldStruct<u8, S71L_SPEC>;
        impl S71L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S72L_SPEC;
        pub type S72L = crate::EnumBitfieldStruct<u8, S72L_SPEC>;
        impl S72L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S73L_SPEC;
        pub type S73L = crate::EnumBitfieldStruct<u8, S73L_SPEC>;
        impl S73L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S74L_SPEC;
        pub type S74L = crate::EnumBitfieldStruct<u8, S74L_SPEC>;
        impl S74L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S75L_SPEC;
        pub type S75L = crate::EnumBitfieldStruct<u8, S75L_SPEC>;
        impl S75L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S76L_SPEC;
        pub type S76L = crate::EnumBitfieldStruct<u8, S76L_SPEC>;
        impl S76L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S77L_SPEC;
        pub type S77L = crate::EnumBitfieldStruct<u8, S77L_SPEC>;
        impl S77L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S78L_SPEC;
        pub type S78L = crate::EnumBitfieldStruct<u8, S78L_SPEC>;
        impl S78L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S79L_SPEC;
        pub type S79L = crate::EnumBitfieldStruct<u8, S79L_SPEC>;
        impl S79L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S80L_SPEC;
        pub type S80L = crate::EnumBitfieldStruct<u8, S80L_SPEC>;
        impl S80L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S81L_SPEC;
        pub type S81L = crate::EnumBitfieldStruct<u8, S81L_SPEC>;
        impl S81L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S82L_SPEC;
        pub type S82L = crate::EnumBitfieldStruct<u8, S82L_SPEC>;
        impl S82L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S83L_SPEC;
        pub type S83L = crate::EnumBitfieldStruct<u8, S83L_SPEC>;
        impl S83L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S84L_SPEC;
        pub type S84L = crate::EnumBitfieldStruct<u8, S84L_SPEC>;
        impl S84L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S85L_SPEC;
        pub type S85L = crate::EnumBitfieldStruct<u8, S85L_SPEC>;
        impl S85L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S86L_SPEC;
        pub type S86L = crate::EnumBitfieldStruct<u8, S86L_SPEC>;
        impl S86L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S87L_SPEC;
        pub type S87L = crate::EnumBitfieldStruct<u8, S87L_SPEC>;
        impl S87L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S88L_SPEC;
        pub type S88L = crate::EnumBitfieldStruct<u8, S88L_SPEC>;
        impl S88L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S89L_SPEC;
        pub type S89L = crate::EnumBitfieldStruct<u8, S89L_SPEC>;
        impl S89L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S90L_SPEC;
        pub type S90L = crate::EnumBitfieldStruct<u8, S90L_SPEC>;
        impl S90L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S91L_SPEC;
        pub type S91L = crate::EnumBitfieldStruct<u8, S91L_SPEC>;
        impl S91L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S92L_SPEC;
        pub type S92L = crate::EnumBitfieldStruct<u8, S92L_SPEC>;
        impl S92L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S93L_SPEC;
        pub type S93L = crate::EnumBitfieldStruct<u8, S93L_SPEC>;
        impl S93L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S94L_SPEC;
        pub type S94L = crate::EnumBitfieldStruct<u8, S94L_SPEC>;
        impl S94L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S95L_SPEC;
        pub type S95L = crate::EnumBitfieldStruct<u8, S95L_SPEC>;
        impl S95L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpEcpriOi3_SPEC;
    impl crate::sealed::RegSpec for HpEcpriOi3_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Erase Counter Priority Configuration 3\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpEcpriOi3 = crate::RegValueT<HpEcpriOi3_SPEC>;

    impl HpEcpriOi3 {
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s96l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_ecprioi3::S96L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_ecprioi3::S96L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s97l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_ecprioi3::S97L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_ecprioi3::S97L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s98l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_ecprioi3::S98L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_ecprioi3::S98L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s99l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_ecprioi3::S99L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_ecprioi3::S99L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s100l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_ecprioi3::S100L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_ecprioi3::S100L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s101l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_ecprioi3::S101L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_ecprioi3::S101L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s102l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_ecprioi3::S102L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_ecprioi3::S102L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s103l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_ecprioi3::S103L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_ecprioi3::S103L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s104l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_ecprioi3::S104L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_ecprioi3::S104L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s105l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_ecprioi3::S105L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_ecprioi3::S105L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s106l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_ecprioi3::S106L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_ecprioi3::S106L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s107l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_ecprioi3::S107L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_ecprioi3::S107L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s108l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_ecprioi3::S108L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_ecprioi3::S108L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s109l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_ecprioi3::S109L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_ecprioi3::S109L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s110l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_ecprioi3::S110L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_ecprioi3::S110L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s111l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_ecprioi3::S111L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_ecprioi3::S111L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s112l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_ecprioi3::S112L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_ecprioi3::S112L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s113l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_ecprioi3::S113L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_ecprioi3::S113L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s114l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_ecprioi3::S114L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_ecprioi3::S114L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s115l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_ecprioi3::S115L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_ecprioi3::S115L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s116l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_ecprioi3::S116L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_ecprioi3::S116L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s117l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_ecprioi3::S117L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_ecprioi3::S117L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s118l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_ecprioi3::S118L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_ecprioi3::S118L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s119l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_ecprioi3::S119L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_ecprioi3::S119L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s120l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_ecprioi3::S120L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_ecprioi3::S120L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s121l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_ecprioi3::S121L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_ecprioi3::S121L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s122l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_ecprioi3::S122L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_ecprioi3::S122L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s123l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_ecprioi3::S123L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_ecprioi3::S123L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s124l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_ecprioi3::S124L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_ecprioi3::S124L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s125l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_ecprioi3::S125L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_ecprioi3::S125L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s126l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_ecprioi3::S126L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_ecprioi3::S126L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Erase Counter priority   S127L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s127l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_ecprioi3::S127L,
            HpEcpriOi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_ecprioi3::S127L,
                HpEcpriOi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpEcpriOi3 {
        #[inline(always)]
        fn default() -> HpEcpriOi3 {
            <crate::RegValueT<HpEcpriOi3_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_ecprioi3 {
        pub struct S96L_SPEC;
        pub type S96L = crate::EnumBitfieldStruct<u8, S96L_SPEC>;
        impl S96L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S97L_SPEC;
        pub type S97L = crate::EnumBitfieldStruct<u8, S97L_SPEC>;
        impl S97L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S98L_SPEC;
        pub type S98L = crate::EnumBitfieldStruct<u8, S98L_SPEC>;
        impl S98L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S99L_SPEC;
        pub type S99L = crate::EnumBitfieldStruct<u8, S99L_SPEC>;
        impl S99L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S100L_SPEC;
        pub type S100L = crate::EnumBitfieldStruct<u8, S100L_SPEC>;
        impl S100L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S101L_SPEC;
        pub type S101L = crate::EnumBitfieldStruct<u8, S101L_SPEC>;
        impl S101L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S102L_SPEC;
        pub type S102L = crate::EnumBitfieldStruct<u8, S102L_SPEC>;
        impl S102L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S103L_SPEC;
        pub type S103L = crate::EnumBitfieldStruct<u8, S103L_SPEC>;
        impl S103L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S104L_SPEC;
        pub type S104L = crate::EnumBitfieldStruct<u8, S104L_SPEC>;
        impl S104L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S105L_SPEC;
        pub type S105L = crate::EnumBitfieldStruct<u8, S105L_SPEC>;
        impl S105L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S106L_SPEC;
        pub type S106L = crate::EnumBitfieldStruct<u8, S106L_SPEC>;
        impl S106L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S107L_SPEC;
        pub type S107L = crate::EnumBitfieldStruct<u8, S107L_SPEC>;
        impl S107L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S108L_SPEC;
        pub type S108L = crate::EnumBitfieldStruct<u8, S108L_SPEC>;
        impl S108L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S109L_SPEC;
        pub type S109L = crate::EnumBitfieldStruct<u8, S109L_SPEC>;
        impl S109L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S110L_SPEC;
        pub type S110L = crate::EnumBitfieldStruct<u8, S110L_SPEC>;
        impl S110L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S111L_SPEC;
        pub type S111L = crate::EnumBitfieldStruct<u8, S111L_SPEC>;
        impl S111L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S112L_SPEC;
        pub type S112L = crate::EnumBitfieldStruct<u8, S112L_SPEC>;
        impl S112L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S113L_SPEC;
        pub type S113L = crate::EnumBitfieldStruct<u8, S113L_SPEC>;
        impl S113L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S114L_SPEC;
        pub type S114L = crate::EnumBitfieldStruct<u8, S114L_SPEC>;
        impl S114L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S115L_SPEC;
        pub type S115L = crate::EnumBitfieldStruct<u8, S115L_SPEC>;
        impl S115L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S116L_SPEC;
        pub type S116L = crate::EnumBitfieldStruct<u8, S116L_SPEC>;
        impl S116L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S117L_SPEC;
        pub type S117L = crate::EnumBitfieldStruct<u8, S117L_SPEC>;
        impl S117L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S118L_SPEC;
        pub type S118L = crate::EnumBitfieldStruct<u8, S118L_SPEC>;
        impl S118L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S119L_SPEC;
        pub type S119L = crate::EnumBitfieldStruct<u8, S119L_SPEC>;
        impl S119L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S120L_SPEC;
        pub type S120L = crate::EnumBitfieldStruct<u8, S120L_SPEC>;
        impl S120L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S121L_SPEC;
        pub type S121L = crate::EnumBitfieldStruct<u8, S121L_SPEC>;
        impl S121L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S122L_SPEC;
        pub type S122L = crate::EnumBitfieldStruct<u8, S122L_SPEC>;
        impl S122L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S123L_SPEC;
        pub type S123L = crate::EnumBitfieldStruct<u8, S123L_SPEC>;
        impl S123L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S124L_SPEC;
        pub type S124L = crate::EnumBitfieldStruct<u8, S124L_SPEC>;
        impl S124L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S125L_SPEC;
        pub type S125L = crate::EnumBitfieldStruct<u8, S125L_SPEC>;
        impl S125L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S126L_SPEC;
        pub type S126L = crate::EnumBitfieldStruct<u8, S126L_SPEC>;
        impl S126L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S127L_SPEC;
        pub type S127L = crate::EnumBitfieldStruct<u8, S127L_SPEC>;
        impl S127L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpEcpriOi4_SPEC;
    impl crate::sealed::RegSpec for HpEcpriOi4_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Erase Counter Priority Configuration 4\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpEcpriOi4 = crate::RegValueT<HpEcpriOi4_SPEC>;

    impl HpEcpriOi4 {
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s128l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_ecprioi4::S128L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_ecprioi4::S128L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s129l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_ecprioi4::S129L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_ecprioi4::S129L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s130l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_ecprioi4::S130L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_ecprioi4::S130L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s131l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_ecprioi4::S131L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_ecprioi4::S131L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s132l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_ecprioi4::S132L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_ecprioi4::S132L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s133l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_ecprioi4::S133L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_ecprioi4::S133L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s134l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_ecprioi4::S134L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_ecprioi4::S134L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s135l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_ecprioi4::S135L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_ecprioi4::S135L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s136l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_ecprioi4::S136L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_ecprioi4::S136L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s137l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_ecprioi4::S137L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_ecprioi4::S137L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s138l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_ecprioi4::S138L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_ecprioi4::S138L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s139l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_ecprioi4::S139L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_ecprioi4::S139L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s140l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_ecprioi4::S140L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_ecprioi4::S140L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s141l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_ecprioi4::S141L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_ecprioi4::S141L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s142l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_ecprioi4::S142L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_ecprioi4::S142L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s143l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_ecprioi4::S143L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_ecprioi4::S143L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s144l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_ecprioi4::S144L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_ecprioi4::S144L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s145l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_ecprioi4::S145L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_ecprioi4::S145L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s146l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_ecprioi4::S146L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_ecprioi4::S146L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s147l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_ecprioi4::S147L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_ecprioi4::S147L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s148l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_ecprioi4::S148L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_ecprioi4::S148L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s149l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_ecprioi4::S149L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_ecprioi4::S149L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s150l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_ecprioi4::S150L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_ecprioi4::S150L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s151l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_ecprioi4::S151L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_ecprioi4::S151L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s152l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_ecprioi4::S152L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_ecprioi4::S152L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s153l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_ecprioi4::S153L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_ecprioi4::S153L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s154l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_ecprioi4::S154L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_ecprioi4::S154L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s155l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_ecprioi4::S155L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_ecprioi4::S155L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s156l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_ecprioi4::S156L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_ecprioi4::S156L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s157l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_ecprioi4::S157L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_ecprioi4::S157L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s158l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_ecprioi4::S158L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_ecprioi4::S158L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Erase Counter priority   S159L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s159l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_ecprioi4::S159L,
            HpEcpriOi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_ecprioi4::S159L,
                HpEcpriOi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpEcpriOi4 {
        #[inline(always)]
        fn default() -> HpEcpriOi4 {
            <crate::RegValueT<HpEcpriOi4_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_ecprioi4 {
        pub struct S128L_SPEC;
        pub type S128L = crate::EnumBitfieldStruct<u8, S128L_SPEC>;
        impl S128L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S129L_SPEC;
        pub type S129L = crate::EnumBitfieldStruct<u8, S129L_SPEC>;
        impl S129L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S130L_SPEC;
        pub type S130L = crate::EnumBitfieldStruct<u8, S130L_SPEC>;
        impl S130L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S131L_SPEC;
        pub type S131L = crate::EnumBitfieldStruct<u8, S131L_SPEC>;
        impl S131L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S132L_SPEC;
        pub type S132L = crate::EnumBitfieldStruct<u8, S132L_SPEC>;
        impl S132L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S133L_SPEC;
        pub type S133L = crate::EnumBitfieldStruct<u8, S133L_SPEC>;
        impl S133L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S134L_SPEC;
        pub type S134L = crate::EnumBitfieldStruct<u8, S134L_SPEC>;
        impl S134L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S135L_SPEC;
        pub type S135L = crate::EnumBitfieldStruct<u8, S135L_SPEC>;
        impl S135L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S136L_SPEC;
        pub type S136L = crate::EnumBitfieldStruct<u8, S136L_SPEC>;
        impl S136L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S137L_SPEC;
        pub type S137L = crate::EnumBitfieldStruct<u8, S137L_SPEC>;
        impl S137L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S138L_SPEC;
        pub type S138L = crate::EnumBitfieldStruct<u8, S138L_SPEC>;
        impl S138L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S139L_SPEC;
        pub type S139L = crate::EnumBitfieldStruct<u8, S139L_SPEC>;
        impl S139L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S140L_SPEC;
        pub type S140L = crate::EnumBitfieldStruct<u8, S140L_SPEC>;
        impl S140L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S141L_SPEC;
        pub type S141L = crate::EnumBitfieldStruct<u8, S141L_SPEC>;
        impl S141L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S142L_SPEC;
        pub type S142L = crate::EnumBitfieldStruct<u8, S142L_SPEC>;
        impl S142L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S143L_SPEC;
        pub type S143L = crate::EnumBitfieldStruct<u8, S143L_SPEC>;
        impl S143L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S144L_SPEC;
        pub type S144L = crate::EnumBitfieldStruct<u8, S144L_SPEC>;
        impl S144L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S145L_SPEC;
        pub type S145L = crate::EnumBitfieldStruct<u8, S145L_SPEC>;
        impl S145L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S146L_SPEC;
        pub type S146L = crate::EnumBitfieldStruct<u8, S146L_SPEC>;
        impl S146L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S147L_SPEC;
        pub type S147L = crate::EnumBitfieldStruct<u8, S147L_SPEC>;
        impl S147L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S148L_SPEC;
        pub type S148L = crate::EnumBitfieldStruct<u8, S148L_SPEC>;
        impl S148L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S149L_SPEC;
        pub type S149L = crate::EnumBitfieldStruct<u8, S149L_SPEC>;
        impl S149L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S150L_SPEC;
        pub type S150L = crate::EnumBitfieldStruct<u8, S150L_SPEC>;
        impl S150L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S151L_SPEC;
        pub type S151L = crate::EnumBitfieldStruct<u8, S151L_SPEC>;
        impl S151L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S152L_SPEC;
        pub type S152L = crate::EnumBitfieldStruct<u8, S152L_SPEC>;
        impl S152L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S153L_SPEC;
        pub type S153L = crate::EnumBitfieldStruct<u8, S153L_SPEC>;
        impl S153L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S154L_SPEC;
        pub type S154L = crate::EnumBitfieldStruct<u8, S154L_SPEC>;
        impl S154L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S155L_SPEC;
        pub type S155L = crate::EnumBitfieldStruct<u8, S155L_SPEC>;
        impl S155L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S156L_SPEC;
        pub type S156L = crate::EnumBitfieldStruct<u8, S156L_SPEC>;
        impl S156L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S157L_SPEC;
        pub type S157L = crate::EnumBitfieldStruct<u8, S157L_SPEC>;
        impl S157L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S158L_SPEC;
        pub type S158L = crate::EnumBitfieldStruct<u8, S158L_SPEC>;
        impl S158L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S159L_SPEC;
        pub type S159L = crate::EnumBitfieldStruct<u8, S159L_SPEC>;
        impl S159L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpEcpriOi5_SPEC;
    impl crate::sealed::RegSpec for HpEcpriOi5_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Erase Counter Priority Configuration 5\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpEcpriOi5 = crate::RegValueT<HpEcpriOi5_SPEC>;

    impl HpEcpriOi5 {
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s160l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_ecprioi5::S160L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_ecprioi5::S160L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s161l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_ecprioi5::S161L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_ecprioi5::S161L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s162l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_ecprioi5::S162L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_ecprioi5::S162L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s163l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_ecprioi5::S163L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_ecprioi5::S163L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s164l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_ecprioi5::S164L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_ecprioi5::S164L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s165l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_ecprioi5::S165L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_ecprioi5::S165L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s166l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_ecprioi5::S166L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_ecprioi5::S166L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s167l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_ecprioi5::S167L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_ecprioi5::S167L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s168l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_ecprioi5::S168L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_ecprioi5::S168L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s169l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_ecprioi5::S169L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_ecprioi5::S169L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s170l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_ecprioi5::S170L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_ecprioi5::S170L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s171l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_ecprioi5::S171L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_ecprioi5::S171L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s172l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_ecprioi5::S172L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_ecprioi5::S172L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s173l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_ecprioi5::S173L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_ecprioi5::S173L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s174l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_ecprioi5::S174L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_ecprioi5::S174L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s175l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_ecprioi5::S175L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_ecprioi5::S175L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s176l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_ecprioi5::S176L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_ecprioi5::S176L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s177l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_ecprioi5::S177L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_ecprioi5::S177L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s178l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_ecprioi5::S178L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_ecprioi5::S178L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s179l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_ecprioi5::S179L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_ecprioi5::S179L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s180l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_ecprioi5::S180L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_ecprioi5::S180L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s181l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_ecprioi5::S181L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_ecprioi5::S181L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s182l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_ecprioi5::S182L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_ecprioi5::S182L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s183l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_ecprioi5::S183L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_ecprioi5::S183L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s184l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_ecprioi5::S184L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_ecprioi5::S184L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s185l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_ecprioi5::S185L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_ecprioi5::S185L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s186l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_ecprioi5::S186L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_ecprioi5::S186L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s187l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_ecprioi5::S187L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_ecprioi5::S187L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s188l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_ecprioi5::S188L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_ecprioi5::S188L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s189l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_ecprioi5::S189L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_ecprioi5::S189L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s190l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_ecprioi5::S190L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_ecprioi5::S190L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Erase Counter priority   S191L. These bits indicate whether PFLASH sector x has high or low priority for        Erase Counter recording."]
        #[inline(always)]
        pub fn s191l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_ecprioi5::S191L,
            HpEcpriOi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_ecprioi5::S191L,
                HpEcpriOi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpEcpriOi5 {
        #[inline(always)]
        fn default() -> HpEcpriOi5 {
            <crate::RegValueT<HpEcpriOi5_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_ecprioi5 {
        pub struct S160L_SPEC;
        pub type S160L = crate::EnumBitfieldStruct<u8, S160L_SPEC>;
        impl S160L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S161L_SPEC;
        pub type S161L = crate::EnumBitfieldStruct<u8, S161L_SPEC>;
        impl S161L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S162L_SPEC;
        pub type S162L = crate::EnumBitfieldStruct<u8, S162L_SPEC>;
        impl S162L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S163L_SPEC;
        pub type S163L = crate::EnumBitfieldStruct<u8, S163L_SPEC>;
        impl S163L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S164L_SPEC;
        pub type S164L = crate::EnumBitfieldStruct<u8, S164L_SPEC>;
        impl S164L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S165L_SPEC;
        pub type S165L = crate::EnumBitfieldStruct<u8, S165L_SPEC>;
        impl S165L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S166L_SPEC;
        pub type S166L = crate::EnumBitfieldStruct<u8, S166L_SPEC>;
        impl S166L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S167L_SPEC;
        pub type S167L = crate::EnumBitfieldStruct<u8, S167L_SPEC>;
        impl S167L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S168L_SPEC;
        pub type S168L = crate::EnumBitfieldStruct<u8, S168L_SPEC>;
        impl S168L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S169L_SPEC;
        pub type S169L = crate::EnumBitfieldStruct<u8, S169L_SPEC>;
        impl S169L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S170L_SPEC;
        pub type S170L = crate::EnumBitfieldStruct<u8, S170L_SPEC>;
        impl S170L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S171L_SPEC;
        pub type S171L = crate::EnumBitfieldStruct<u8, S171L_SPEC>;
        impl S171L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S172L_SPEC;
        pub type S172L = crate::EnumBitfieldStruct<u8, S172L_SPEC>;
        impl S172L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S173L_SPEC;
        pub type S173L = crate::EnumBitfieldStruct<u8, S173L_SPEC>;
        impl S173L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S174L_SPEC;
        pub type S174L = crate::EnumBitfieldStruct<u8, S174L_SPEC>;
        impl S174L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S175L_SPEC;
        pub type S175L = crate::EnumBitfieldStruct<u8, S175L_SPEC>;
        impl S175L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S176L_SPEC;
        pub type S176L = crate::EnumBitfieldStruct<u8, S176L_SPEC>;
        impl S176L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S177L_SPEC;
        pub type S177L = crate::EnumBitfieldStruct<u8, S177L_SPEC>;
        impl S177L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S178L_SPEC;
        pub type S178L = crate::EnumBitfieldStruct<u8, S178L_SPEC>;
        impl S178L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S179L_SPEC;
        pub type S179L = crate::EnumBitfieldStruct<u8, S179L_SPEC>;
        impl S179L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S180L_SPEC;
        pub type S180L = crate::EnumBitfieldStruct<u8, S180L_SPEC>;
        impl S180L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S181L_SPEC;
        pub type S181L = crate::EnumBitfieldStruct<u8, S181L_SPEC>;
        impl S181L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S182L_SPEC;
        pub type S182L = crate::EnumBitfieldStruct<u8, S182L_SPEC>;
        impl S182L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S183L_SPEC;
        pub type S183L = crate::EnumBitfieldStruct<u8, S183L_SPEC>;
        impl S183L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S184L_SPEC;
        pub type S184L = crate::EnumBitfieldStruct<u8, S184L_SPEC>;
        impl S184L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S185L_SPEC;
        pub type S185L = crate::EnumBitfieldStruct<u8, S185L_SPEC>;
        impl S185L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S186L_SPEC;
        pub type S186L = crate::EnumBitfieldStruct<u8, S186L_SPEC>;
        impl S186L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S187L_SPEC;
        pub type S187L = crate::EnumBitfieldStruct<u8, S187L_SPEC>;
        impl S187L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S188L_SPEC;
        pub type S188L = crate::EnumBitfieldStruct<u8, S188L_SPEC>;
        impl S188L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S189L_SPEC;
        pub type S189L = crate::EnumBitfieldStruct<u8, S189L_SPEC>;
        impl S189L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S190L_SPEC;
        pub type S190L = crate::EnumBitfieldStruct<u8, S190L_SPEC>;
        impl S190L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S191L_SPEC;
        pub type S191L = crate::EnumBitfieldStruct<u8, S191L_SPEC>;
        impl S191L {
            #[doc = "0 Low priority is        configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 High priority        is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconotPi0_SPEC;
    impl crate::sealed::RegSpec for HpProconotPi0_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 0\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconotPi0 = crate::RegValueT<HpProconotPi0_SPEC>;

    impl HpProconotPi0 {
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s0rom(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconotpi0::S0Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconotpi0::S0Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s1rom(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconotpi0::S1Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconotpi0::S1Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s2rom(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconotpi0::S2Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconotpi0::S2Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s3rom(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconotpi0::S3Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconotpi0::S3Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s4rom(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconotpi0::S4Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconotpi0::S4Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s5rom(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconotpi0::S5Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconotpi0::S5Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s6rom(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconotpi0::S6Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconotpi0::S6Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s7rom(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconotpi0::S7Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconotpi0::S7Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s8rom(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconotpi0::S8Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconotpi0::S8Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s9rom(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconotpi0::S9Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconotpi0::S9Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s10rom(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconotpi0::S10Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconotpi0::S10Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s11rom(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconotpi0::S11Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconotpi0::S11Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s12rom(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconotpi0::S12Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconotpi0::S12Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s13rom(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconotpi0::S13Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconotpi0::S13Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s14rom(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconotpi0::S14Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconotpi0::S14Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s15rom(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconotpi0::S15Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconotpi0::S15Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s16rom(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconotpi0::S16Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconotpi0::S16Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s17rom(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconotpi0::S17Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconotpi0::S17Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s18rom(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconotpi0::S18Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconotpi0::S18Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s19rom(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconotpi0::S19Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconotpi0::S19Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s20rom(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconotpi0::S20Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconotpi0::S20Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s21rom(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconotpi0::S21Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconotpi0::S21Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s22rom(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconotpi0::S22Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconotpi0::S22Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s23rom(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconotpi0::S23Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconotpi0::S23Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s24rom(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconotpi0::S24Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconotpi0::S24Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s25rom(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconotpi0::S25Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconotpi0::S25Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s26rom(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconotpi0::S26Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconotpi0::S26Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s27rom(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconotpi0::S27Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconotpi0::S27Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s28rom(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconotpi0::S28Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconotpi0::S28Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s29rom(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconotpi0::S29Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconotpi0::S29Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s30rom(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconotpi0::S30Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconotpi0::S30Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Forever   S31ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s31rom(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconotpi0::S31Rom,
            HpProconotPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconotpi0::S31Rom,
                HpProconotPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconotPi0 {
        #[inline(always)]
        fn default() -> HpProconotPi0 {
            <crate::RegValueT<HpProconotPi0_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconotpi0 {
        pub struct S0Rom_SPEC;
        pub type S0Rom = crate::EnumBitfieldStruct<u8, S0Rom_SPEC>;
        impl S0Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S1Rom_SPEC;
        pub type S1Rom = crate::EnumBitfieldStruct<u8, S1Rom_SPEC>;
        impl S1Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S2Rom_SPEC;
        pub type S2Rom = crate::EnumBitfieldStruct<u8, S2Rom_SPEC>;
        impl S2Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S3Rom_SPEC;
        pub type S3Rom = crate::EnumBitfieldStruct<u8, S3Rom_SPEC>;
        impl S3Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S4Rom_SPEC;
        pub type S4Rom = crate::EnumBitfieldStruct<u8, S4Rom_SPEC>;
        impl S4Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S5Rom_SPEC;
        pub type S5Rom = crate::EnumBitfieldStruct<u8, S5Rom_SPEC>;
        impl S5Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S6Rom_SPEC;
        pub type S6Rom = crate::EnumBitfieldStruct<u8, S6Rom_SPEC>;
        impl S6Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S7Rom_SPEC;
        pub type S7Rom = crate::EnumBitfieldStruct<u8, S7Rom_SPEC>;
        impl S7Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S8Rom_SPEC;
        pub type S8Rom = crate::EnumBitfieldStruct<u8, S8Rom_SPEC>;
        impl S8Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S9Rom_SPEC;
        pub type S9Rom = crate::EnumBitfieldStruct<u8, S9Rom_SPEC>;
        impl S9Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S10Rom_SPEC;
        pub type S10Rom = crate::EnumBitfieldStruct<u8, S10Rom_SPEC>;
        impl S10Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S11Rom_SPEC;
        pub type S11Rom = crate::EnumBitfieldStruct<u8, S11Rom_SPEC>;
        impl S11Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S12Rom_SPEC;
        pub type S12Rom = crate::EnumBitfieldStruct<u8, S12Rom_SPEC>;
        impl S12Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S13Rom_SPEC;
        pub type S13Rom = crate::EnumBitfieldStruct<u8, S13Rom_SPEC>;
        impl S13Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S14Rom_SPEC;
        pub type S14Rom = crate::EnumBitfieldStruct<u8, S14Rom_SPEC>;
        impl S14Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S15Rom_SPEC;
        pub type S15Rom = crate::EnumBitfieldStruct<u8, S15Rom_SPEC>;
        impl S15Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S16Rom_SPEC;
        pub type S16Rom = crate::EnumBitfieldStruct<u8, S16Rom_SPEC>;
        impl S16Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S17Rom_SPEC;
        pub type S17Rom = crate::EnumBitfieldStruct<u8, S17Rom_SPEC>;
        impl S17Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S18Rom_SPEC;
        pub type S18Rom = crate::EnumBitfieldStruct<u8, S18Rom_SPEC>;
        impl S18Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S19Rom_SPEC;
        pub type S19Rom = crate::EnumBitfieldStruct<u8, S19Rom_SPEC>;
        impl S19Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S20Rom_SPEC;
        pub type S20Rom = crate::EnumBitfieldStruct<u8, S20Rom_SPEC>;
        impl S20Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S21Rom_SPEC;
        pub type S21Rom = crate::EnumBitfieldStruct<u8, S21Rom_SPEC>;
        impl S21Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S22Rom_SPEC;
        pub type S22Rom = crate::EnumBitfieldStruct<u8, S22Rom_SPEC>;
        impl S22Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S23Rom_SPEC;
        pub type S23Rom = crate::EnumBitfieldStruct<u8, S23Rom_SPEC>;
        impl S23Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S24Rom_SPEC;
        pub type S24Rom = crate::EnumBitfieldStruct<u8, S24Rom_SPEC>;
        impl S24Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S25Rom_SPEC;
        pub type S25Rom = crate::EnumBitfieldStruct<u8, S25Rom_SPEC>;
        impl S25Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S26Rom_SPEC;
        pub type S26Rom = crate::EnumBitfieldStruct<u8, S26Rom_SPEC>;
        impl S26Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S27Rom_SPEC;
        pub type S27Rom = crate::EnumBitfieldStruct<u8, S27Rom_SPEC>;
        impl S27Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S28Rom_SPEC;
        pub type S28Rom = crate::EnumBitfieldStruct<u8, S28Rom_SPEC>;
        impl S28Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S29Rom_SPEC;
        pub type S29Rom = crate::EnumBitfieldStruct<u8, S29Rom_SPEC>;
        impl S29Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S30Rom_SPEC;
        pub type S30Rom = crate::EnumBitfieldStruct<u8, S30Rom_SPEC>;
        impl S30Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S31Rom_SPEC;
        pub type S31Rom = crate::EnumBitfieldStruct<u8, S31Rom_SPEC>;
        impl S31Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconotPi1_SPEC;
    impl crate::sealed::RegSpec for HpProconotPi1_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 1\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconotPi1 = crate::RegValueT<HpProconotPi1_SPEC>;

    impl HpProconotPi1 {
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s32rom(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconotpi1::S32Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconotpi1::S32Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s33rom(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconotpi1::S33Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconotpi1::S33Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s34rom(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconotpi1::S34Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconotpi1::S34Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s35rom(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconotpi1::S35Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconotpi1::S35Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s36rom(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconotpi1::S36Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconotpi1::S36Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s37rom(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconotpi1::S37Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconotpi1::S37Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s38rom(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconotpi1::S38Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconotpi1::S38Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s39rom(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconotpi1::S39Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconotpi1::S39Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s40rom(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconotpi1::S40Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconotpi1::S40Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s41rom(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconotpi1::S41Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconotpi1::S41Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s42rom(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconotpi1::S42Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconotpi1::S42Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s43rom(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconotpi1::S43Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconotpi1::S43Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s44rom(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconotpi1::S44Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconotpi1::S44Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s45rom(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconotpi1::S45Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconotpi1::S45Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s46rom(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconotpi1::S46Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconotpi1::S46Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s47rom(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconotpi1::S47Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconotpi1::S47Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s48rom(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconotpi1::S48Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconotpi1::S48Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s49rom(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconotpi1::S49Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconotpi1::S49Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s50rom(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconotpi1::S50Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconotpi1::S50Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s51rom(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconotpi1::S51Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconotpi1::S51Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s52rom(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconotpi1::S52Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconotpi1::S52Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s53rom(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconotpi1::S53Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconotpi1::S53Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s54rom(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconotpi1::S54Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconotpi1::S54Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s55rom(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconotpi1::S55Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconotpi1::S55Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s56rom(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconotpi1::S56Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconotpi1::S56Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s57rom(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconotpi1::S57Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconotpi1::S57Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s58rom(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconotpi1::S58Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconotpi1::S58Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s59rom(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconotpi1::S59Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconotpi1::S59Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s60rom(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconotpi1::S60Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconotpi1::S60Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s61rom(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconotpi1::S61Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconotpi1::S61Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s62rom(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconotpi1::S62Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconotpi1::S62Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Forever   S63ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s63rom(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconotpi1::S63Rom,
            HpProconotPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconotpi1::S63Rom,
                HpProconotPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconotPi1 {
        #[inline(always)]
        fn default() -> HpProconotPi1 {
            <crate::RegValueT<HpProconotPi1_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconotpi1 {
        pub struct S32Rom_SPEC;
        pub type S32Rom = crate::EnumBitfieldStruct<u8, S32Rom_SPEC>;
        impl S32Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S33Rom_SPEC;
        pub type S33Rom = crate::EnumBitfieldStruct<u8, S33Rom_SPEC>;
        impl S33Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S34Rom_SPEC;
        pub type S34Rom = crate::EnumBitfieldStruct<u8, S34Rom_SPEC>;
        impl S34Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S35Rom_SPEC;
        pub type S35Rom = crate::EnumBitfieldStruct<u8, S35Rom_SPEC>;
        impl S35Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S36Rom_SPEC;
        pub type S36Rom = crate::EnumBitfieldStruct<u8, S36Rom_SPEC>;
        impl S36Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S37Rom_SPEC;
        pub type S37Rom = crate::EnumBitfieldStruct<u8, S37Rom_SPEC>;
        impl S37Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S38Rom_SPEC;
        pub type S38Rom = crate::EnumBitfieldStruct<u8, S38Rom_SPEC>;
        impl S38Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S39Rom_SPEC;
        pub type S39Rom = crate::EnumBitfieldStruct<u8, S39Rom_SPEC>;
        impl S39Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S40Rom_SPEC;
        pub type S40Rom = crate::EnumBitfieldStruct<u8, S40Rom_SPEC>;
        impl S40Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S41Rom_SPEC;
        pub type S41Rom = crate::EnumBitfieldStruct<u8, S41Rom_SPEC>;
        impl S41Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S42Rom_SPEC;
        pub type S42Rom = crate::EnumBitfieldStruct<u8, S42Rom_SPEC>;
        impl S42Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S43Rom_SPEC;
        pub type S43Rom = crate::EnumBitfieldStruct<u8, S43Rom_SPEC>;
        impl S43Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S44Rom_SPEC;
        pub type S44Rom = crate::EnumBitfieldStruct<u8, S44Rom_SPEC>;
        impl S44Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S45Rom_SPEC;
        pub type S45Rom = crate::EnumBitfieldStruct<u8, S45Rom_SPEC>;
        impl S45Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S46Rom_SPEC;
        pub type S46Rom = crate::EnumBitfieldStruct<u8, S46Rom_SPEC>;
        impl S46Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S47Rom_SPEC;
        pub type S47Rom = crate::EnumBitfieldStruct<u8, S47Rom_SPEC>;
        impl S47Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S48Rom_SPEC;
        pub type S48Rom = crate::EnumBitfieldStruct<u8, S48Rom_SPEC>;
        impl S48Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S49Rom_SPEC;
        pub type S49Rom = crate::EnumBitfieldStruct<u8, S49Rom_SPEC>;
        impl S49Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S50Rom_SPEC;
        pub type S50Rom = crate::EnumBitfieldStruct<u8, S50Rom_SPEC>;
        impl S50Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S51Rom_SPEC;
        pub type S51Rom = crate::EnumBitfieldStruct<u8, S51Rom_SPEC>;
        impl S51Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S52Rom_SPEC;
        pub type S52Rom = crate::EnumBitfieldStruct<u8, S52Rom_SPEC>;
        impl S52Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S53Rom_SPEC;
        pub type S53Rom = crate::EnumBitfieldStruct<u8, S53Rom_SPEC>;
        impl S53Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S54Rom_SPEC;
        pub type S54Rom = crate::EnumBitfieldStruct<u8, S54Rom_SPEC>;
        impl S54Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S55Rom_SPEC;
        pub type S55Rom = crate::EnumBitfieldStruct<u8, S55Rom_SPEC>;
        impl S55Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S56Rom_SPEC;
        pub type S56Rom = crate::EnumBitfieldStruct<u8, S56Rom_SPEC>;
        impl S56Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S57Rom_SPEC;
        pub type S57Rom = crate::EnumBitfieldStruct<u8, S57Rom_SPEC>;
        impl S57Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S58Rom_SPEC;
        pub type S58Rom = crate::EnumBitfieldStruct<u8, S58Rom_SPEC>;
        impl S58Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S59Rom_SPEC;
        pub type S59Rom = crate::EnumBitfieldStruct<u8, S59Rom_SPEC>;
        impl S59Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S60Rom_SPEC;
        pub type S60Rom = crate::EnumBitfieldStruct<u8, S60Rom_SPEC>;
        impl S60Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S61Rom_SPEC;
        pub type S61Rom = crate::EnumBitfieldStruct<u8, S61Rom_SPEC>;
        impl S61Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S62Rom_SPEC;
        pub type S62Rom = crate::EnumBitfieldStruct<u8, S62Rom_SPEC>;
        impl S62Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S63Rom_SPEC;
        pub type S63Rom = crate::EnumBitfieldStruct<u8, S63Rom_SPEC>;
        impl S63Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconotPi2_SPEC;
    impl crate::sealed::RegSpec for HpProconotPi2_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 2\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconotPi2 = crate::RegValueT<HpProconotPi2_SPEC>;

    impl HpProconotPi2 {
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s64rom(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconotpi2::S64Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconotpi2::S64Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s65rom(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconotpi2::S65Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconotpi2::S65Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s66rom(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconotpi2::S66Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconotpi2::S66Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s67rom(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconotpi2::S67Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconotpi2::S67Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s68rom(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconotpi2::S68Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconotpi2::S68Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s69rom(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconotpi2::S69Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconotpi2::S69Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s70rom(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconotpi2::S70Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconotpi2::S70Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s71rom(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconotpi2::S71Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconotpi2::S71Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s72rom(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconotpi2::S72Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconotpi2::S72Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s73rom(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconotpi2::S73Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconotpi2::S73Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s74rom(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconotpi2::S74Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconotpi2::S74Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s75rom(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconotpi2::S75Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconotpi2::S75Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s76rom(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconotpi2::S76Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconotpi2::S76Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s77rom(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconotpi2::S77Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconotpi2::S77Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s78rom(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconotpi2::S78Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconotpi2::S78Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s79rom(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconotpi2::S79Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconotpi2::S79Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s80rom(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconotpi2::S80Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconotpi2::S80Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s81rom(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconotpi2::S81Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconotpi2::S81Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s82rom(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconotpi2::S82Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconotpi2::S82Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s83rom(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconotpi2::S83Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconotpi2::S83Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s84rom(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconotpi2::S84Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconotpi2::S84Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s85rom(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconotpi2::S85Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconotpi2::S85Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s86rom(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconotpi2::S86Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconotpi2::S86Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s87rom(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconotpi2::S87Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconotpi2::S87Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s88rom(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconotpi2::S88Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconotpi2::S88Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s89rom(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconotpi2::S89Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconotpi2::S89Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s90rom(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconotpi2::S90Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconotpi2::S90Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s91rom(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconotpi2::S91Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconotpi2::S91Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s92rom(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconotpi2::S92Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconotpi2::S92Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s93rom(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconotpi2::S93Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconotpi2::S93Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s94rom(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconotpi2::S94Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconotpi2::S94Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Forever   S95ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s95rom(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconotpi2::S95Rom,
            HpProconotPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconotpi2::S95Rom,
                HpProconotPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconotPi2 {
        #[inline(always)]
        fn default() -> HpProconotPi2 {
            <crate::RegValueT<HpProconotPi2_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconotpi2 {
        pub struct S64Rom_SPEC;
        pub type S64Rom = crate::EnumBitfieldStruct<u8, S64Rom_SPEC>;
        impl S64Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S65Rom_SPEC;
        pub type S65Rom = crate::EnumBitfieldStruct<u8, S65Rom_SPEC>;
        impl S65Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S66Rom_SPEC;
        pub type S66Rom = crate::EnumBitfieldStruct<u8, S66Rom_SPEC>;
        impl S66Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S67Rom_SPEC;
        pub type S67Rom = crate::EnumBitfieldStruct<u8, S67Rom_SPEC>;
        impl S67Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S68Rom_SPEC;
        pub type S68Rom = crate::EnumBitfieldStruct<u8, S68Rom_SPEC>;
        impl S68Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S69Rom_SPEC;
        pub type S69Rom = crate::EnumBitfieldStruct<u8, S69Rom_SPEC>;
        impl S69Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S70Rom_SPEC;
        pub type S70Rom = crate::EnumBitfieldStruct<u8, S70Rom_SPEC>;
        impl S70Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S71Rom_SPEC;
        pub type S71Rom = crate::EnumBitfieldStruct<u8, S71Rom_SPEC>;
        impl S71Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S72Rom_SPEC;
        pub type S72Rom = crate::EnumBitfieldStruct<u8, S72Rom_SPEC>;
        impl S72Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S73Rom_SPEC;
        pub type S73Rom = crate::EnumBitfieldStruct<u8, S73Rom_SPEC>;
        impl S73Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S74Rom_SPEC;
        pub type S74Rom = crate::EnumBitfieldStruct<u8, S74Rom_SPEC>;
        impl S74Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S75Rom_SPEC;
        pub type S75Rom = crate::EnumBitfieldStruct<u8, S75Rom_SPEC>;
        impl S75Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S76Rom_SPEC;
        pub type S76Rom = crate::EnumBitfieldStruct<u8, S76Rom_SPEC>;
        impl S76Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S77Rom_SPEC;
        pub type S77Rom = crate::EnumBitfieldStruct<u8, S77Rom_SPEC>;
        impl S77Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S78Rom_SPEC;
        pub type S78Rom = crate::EnumBitfieldStruct<u8, S78Rom_SPEC>;
        impl S78Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S79Rom_SPEC;
        pub type S79Rom = crate::EnumBitfieldStruct<u8, S79Rom_SPEC>;
        impl S79Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S80Rom_SPEC;
        pub type S80Rom = crate::EnumBitfieldStruct<u8, S80Rom_SPEC>;
        impl S80Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S81Rom_SPEC;
        pub type S81Rom = crate::EnumBitfieldStruct<u8, S81Rom_SPEC>;
        impl S81Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S82Rom_SPEC;
        pub type S82Rom = crate::EnumBitfieldStruct<u8, S82Rom_SPEC>;
        impl S82Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S83Rom_SPEC;
        pub type S83Rom = crate::EnumBitfieldStruct<u8, S83Rom_SPEC>;
        impl S83Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S84Rom_SPEC;
        pub type S84Rom = crate::EnumBitfieldStruct<u8, S84Rom_SPEC>;
        impl S84Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S85Rom_SPEC;
        pub type S85Rom = crate::EnumBitfieldStruct<u8, S85Rom_SPEC>;
        impl S85Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S86Rom_SPEC;
        pub type S86Rom = crate::EnumBitfieldStruct<u8, S86Rom_SPEC>;
        impl S86Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S87Rom_SPEC;
        pub type S87Rom = crate::EnumBitfieldStruct<u8, S87Rom_SPEC>;
        impl S87Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S88Rom_SPEC;
        pub type S88Rom = crate::EnumBitfieldStruct<u8, S88Rom_SPEC>;
        impl S88Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S89Rom_SPEC;
        pub type S89Rom = crate::EnumBitfieldStruct<u8, S89Rom_SPEC>;
        impl S89Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S90Rom_SPEC;
        pub type S90Rom = crate::EnumBitfieldStruct<u8, S90Rom_SPEC>;
        impl S90Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S91Rom_SPEC;
        pub type S91Rom = crate::EnumBitfieldStruct<u8, S91Rom_SPEC>;
        impl S91Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S92Rom_SPEC;
        pub type S92Rom = crate::EnumBitfieldStruct<u8, S92Rom_SPEC>;
        impl S92Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S93Rom_SPEC;
        pub type S93Rom = crate::EnumBitfieldStruct<u8, S93Rom_SPEC>;
        impl S93Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S94Rom_SPEC;
        pub type S94Rom = crate::EnumBitfieldStruct<u8, S94Rom_SPEC>;
        impl S94Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S95Rom_SPEC;
        pub type S95Rom = crate::EnumBitfieldStruct<u8, S95Rom_SPEC>;
        impl S95Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconotPi3_SPEC;
    impl crate::sealed::RegSpec for HpProconotPi3_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 3\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconotPi3 = crate::RegValueT<HpProconotPi3_SPEC>;

    impl HpProconotPi3 {
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s96rom(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconotpi3::S96Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconotpi3::S96Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s97rom(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconotpi3::S97Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconotpi3::S97Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s98rom(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconotpi3::S98Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconotpi3::S98Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s99rom(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconotpi3::S99Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconotpi3::S99Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s100rom(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconotpi3::S100Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconotpi3::S100Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s101rom(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconotpi3::S101Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconotpi3::S101Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s102rom(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconotpi3::S102Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconotpi3::S102Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s103rom(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconotpi3::S103Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconotpi3::S103Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s104rom(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconotpi3::S104Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconotpi3::S104Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s105rom(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconotpi3::S105Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconotpi3::S105Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s106rom(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconotpi3::S106Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconotpi3::S106Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s107rom(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconotpi3::S107Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconotpi3::S107Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s108rom(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconotpi3::S108Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconotpi3::S108Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s109rom(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconotpi3::S109Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconotpi3::S109Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s110rom(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconotpi3::S110Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconotpi3::S110Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s111rom(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconotpi3::S111Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconotpi3::S111Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s112rom(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconotpi3::S112Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconotpi3::S112Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s113rom(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconotpi3::S113Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconotpi3::S113Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s114rom(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconotpi3::S114Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconotpi3::S114Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s115rom(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconotpi3::S115Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconotpi3::S115Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s116rom(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconotpi3::S116Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconotpi3::S116Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s117rom(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconotpi3::S117Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconotpi3::S117Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s118rom(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconotpi3::S118Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconotpi3::S118Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s119rom(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconotpi3::S119Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconotpi3::S119Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s120rom(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconotpi3::S120Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconotpi3::S120Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s121rom(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconotpi3::S121Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconotpi3::S121Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s122rom(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconotpi3::S122Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconotpi3::S122Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s123rom(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconotpi3::S123Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconotpi3::S123Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s124rom(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconotpi3::S124Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconotpi3::S124Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s125rom(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconotpi3::S125Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconotpi3::S125Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s126rom(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconotpi3::S126Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconotpi3::S126Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Forever   S127ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s127rom(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconotpi3::S127Rom,
            HpProconotPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconotpi3::S127Rom,
                HpProconotPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconotPi3 {
        #[inline(always)]
        fn default() -> HpProconotPi3 {
            <crate::RegValueT<HpProconotPi3_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconotpi3 {
        pub struct S96Rom_SPEC;
        pub type S96Rom = crate::EnumBitfieldStruct<u8, S96Rom_SPEC>;
        impl S96Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S97Rom_SPEC;
        pub type S97Rom = crate::EnumBitfieldStruct<u8, S97Rom_SPEC>;
        impl S97Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S98Rom_SPEC;
        pub type S98Rom = crate::EnumBitfieldStruct<u8, S98Rom_SPEC>;
        impl S98Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S99Rom_SPEC;
        pub type S99Rom = crate::EnumBitfieldStruct<u8, S99Rom_SPEC>;
        impl S99Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S100Rom_SPEC;
        pub type S100Rom = crate::EnumBitfieldStruct<u8, S100Rom_SPEC>;
        impl S100Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S101Rom_SPEC;
        pub type S101Rom = crate::EnumBitfieldStruct<u8, S101Rom_SPEC>;
        impl S101Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S102Rom_SPEC;
        pub type S102Rom = crate::EnumBitfieldStruct<u8, S102Rom_SPEC>;
        impl S102Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S103Rom_SPEC;
        pub type S103Rom = crate::EnumBitfieldStruct<u8, S103Rom_SPEC>;
        impl S103Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S104Rom_SPEC;
        pub type S104Rom = crate::EnumBitfieldStruct<u8, S104Rom_SPEC>;
        impl S104Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S105Rom_SPEC;
        pub type S105Rom = crate::EnumBitfieldStruct<u8, S105Rom_SPEC>;
        impl S105Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S106Rom_SPEC;
        pub type S106Rom = crate::EnumBitfieldStruct<u8, S106Rom_SPEC>;
        impl S106Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S107Rom_SPEC;
        pub type S107Rom = crate::EnumBitfieldStruct<u8, S107Rom_SPEC>;
        impl S107Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S108Rom_SPEC;
        pub type S108Rom = crate::EnumBitfieldStruct<u8, S108Rom_SPEC>;
        impl S108Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S109Rom_SPEC;
        pub type S109Rom = crate::EnumBitfieldStruct<u8, S109Rom_SPEC>;
        impl S109Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S110Rom_SPEC;
        pub type S110Rom = crate::EnumBitfieldStruct<u8, S110Rom_SPEC>;
        impl S110Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S111Rom_SPEC;
        pub type S111Rom = crate::EnumBitfieldStruct<u8, S111Rom_SPEC>;
        impl S111Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S112Rom_SPEC;
        pub type S112Rom = crate::EnumBitfieldStruct<u8, S112Rom_SPEC>;
        impl S112Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S113Rom_SPEC;
        pub type S113Rom = crate::EnumBitfieldStruct<u8, S113Rom_SPEC>;
        impl S113Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S114Rom_SPEC;
        pub type S114Rom = crate::EnumBitfieldStruct<u8, S114Rom_SPEC>;
        impl S114Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S115Rom_SPEC;
        pub type S115Rom = crate::EnumBitfieldStruct<u8, S115Rom_SPEC>;
        impl S115Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S116Rom_SPEC;
        pub type S116Rom = crate::EnumBitfieldStruct<u8, S116Rom_SPEC>;
        impl S116Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S117Rom_SPEC;
        pub type S117Rom = crate::EnumBitfieldStruct<u8, S117Rom_SPEC>;
        impl S117Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S118Rom_SPEC;
        pub type S118Rom = crate::EnumBitfieldStruct<u8, S118Rom_SPEC>;
        impl S118Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S119Rom_SPEC;
        pub type S119Rom = crate::EnumBitfieldStruct<u8, S119Rom_SPEC>;
        impl S119Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S120Rom_SPEC;
        pub type S120Rom = crate::EnumBitfieldStruct<u8, S120Rom_SPEC>;
        impl S120Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S121Rom_SPEC;
        pub type S121Rom = crate::EnumBitfieldStruct<u8, S121Rom_SPEC>;
        impl S121Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S122Rom_SPEC;
        pub type S122Rom = crate::EnumBitfieldStruct<u8, S122Rom_SPEC>;
        impl S122Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S123Rom_SPEC;
        pub type S123Rom = crate::EnumBitfieldStruct<u8, S123Rom_SPEC>;
        impl S123Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S124Rom_SPEC;
        pub type S124Rom = crate::EnumBitfieldStruct<u8, S124Rom_SPEC>;
        impl S124Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S125Rom_SPEC;
        pub type S125Rom = crate::EnumBitfieldStruct<u8, S125Rom_SPEC>;
        impl S125Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S126Rom_SPEC;
        pub type S126Rom = crate::EnumBitfieldStruct<u8, S126Rom_SPEC>;
        impl S126Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S127Rom_SPEC;
        pub type S127Rom = crate::EnumBitfieldStruct<u8, S127Rom_SPEC>;
        impl S127Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconotPi4_SPEC;
    impl crate::sealed::RegSpec for HpProconotPi4_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 4\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconotPi4 = crate::RegValueT<HpProconotPi4_SPEC>;

    impl HpProconotPi4 {
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s128rom(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconotpi4::S128Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconotpi4::S128Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s129rom(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconotpi4::S129Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconotpi4::S129Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s130rom(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconotpi4::S130Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconotpi4::S130Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s131rom(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconotpi4::S131Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconotpi4::S131Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s132rom(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconotpi4::S132Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconotpi4::S132Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s133rom(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconotpi4::S133Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconotpi4::S133Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s134rom(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconotpi4::S134Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconotpi4::S134Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s135rom(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconotpi4::S135Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconotpi4::S135Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s136rom(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconotpi4::S136Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconotpi4::S136Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s137rom(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconotpi4::S137Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconotpi4::S137Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s138rom(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconotpi4::S138Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconotpi4::S138Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s139rom(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconotpi4::S139Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconotpi4::S139Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s140rom(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconotpi4::S140Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconotpi4::S140Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s141rom(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconotpi4::S141Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconotpi4::S141Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s142rom(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconotpi4::S142Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconotpi4::S142Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s143rom(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconotpi4::S143Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconotpi4::S143Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s144rom(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconotpi4::S144Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconotpi4::S144Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s145rom(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconotpi4::S145Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconotpi4::S145Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s146rom(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconotpi4::S146Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconotpi4::S146Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s147rom(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconotpi4::S147Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconotpi4::S147Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s148rom(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconotpi4::S148Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconotpi4::S148Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s149rom(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconotpi4::S149Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconotpi4::S149Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s150rom(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconotpi4::S150Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconotpi4::S150Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s151rom(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconotpi4::S151Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconotpi4::S151Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s152rom(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconotpi4::S152Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconotpi4::S152Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s153rom(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconotpi4::S153Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconotpi4::S153Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s154rom(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconotpi4::S154Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconotpi4::S154Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s155rom(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconotpi4::S155Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconotpi4::S155Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s156rom(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconotpi4::S156Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconotpi4::S156Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s157rom(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconotpi4::S157Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconotpi4::S157Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s158rom(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconotpi4::S158Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconotpi4::S158Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Forever   S159ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s159rom(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconotpi4::S159Rom,
            HpProconotPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconotpi4::S159Rom,
                HpProconotPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconotPi4 {
        #[inline(always)]
        fn default() -> HpProconotPi4 {
            <crate::RegValueT<HpProconotPi4_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconotpi4 {
        pub struct S128Rom_SPEC;
        pub type S128Rom = crate::EnumBitfieldStruct<u8, S128Rom_SPEC>;
        impl S128Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S129Rom_SPEC;
        pub type S129Rom = crate::EnumBitfieldStruct<u8, S129Rom_SPEC>;
        impl S129Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S130Rom_SPEC;
        pub type S130Rom = crate::EnumBitfieldStruct<u8, S130Rom_SPEC>;
        impl S130Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S131Rom_SPEC;
        pub type S131Rom = crate::EnumBitfieldStruct<u8, S131Rom_SPEC>;
        impl S131Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S132Rom_SPEC;
        pub type S132Rom = crate::EnumBitfieldStruct<u8, S132Rom_SPEC>;
        impl S132Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S133Rom_SPEC;
        pub type S133Rom = crate::EnumBitfieldStruct<u8, S133Rom_SPEC>;
        impl S133Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S134Rom_SPEC;
        pub type S134Rom = crate::EnumBitfieldStruct<u8, S134Rom_SPEC>;
        impl S134Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S135Rom_SPEC;
        pub type S135Rom = crate::EnumBitfieldStruct<u8, S135Rom_SPEC>;
        impl S135Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S136Rom_SPEC;
        pub type S136Rom = crate::EnumBitfieldStruct<u8, S136Rom_SPEC>;
        impl S136Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S137Rom_SPEC;
        pub type S137Rom = crate::EnumBitfieldStruct<u8, S137Rom_SPEC>;
        impl S137Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S138Rom_SPEC;
        pub type S138Rom = crate::EnumBitfieldStruct<u8, S138Rom_SPEC>;
        impl S138Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S139Rom_SPEC;
        pub type S139Rom = crate::EnumBitfieldStruct<u8, S139Rom_SPEC>;
        impl S139Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S140Rom_SPEC;
        pub type S140Rom = crate::EnumBitfieldStruct<u8, S140Rom_SPEC>;
        impl S140Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S141Rom_SPEC;
        pub type S141Rom = crate::EnumBitfieldStruct<u8, S141Rom_SPEC>;
        impl S141Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S142Rom_SPEC;
        pub type S142Rom = crate::EnumBitfieldStruct<u8, S142Rom_SPEC>;
        impl S142Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S143Rom_SPEC;
        pub type S143Rom = crate::EnumBitfieldStruct<u8, S143Rom_SPEC>;
        impl S143Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S144Rom_SPEC;
        pub type S144Rom = crate::EnumBitfieldStruct<u8, S144Rom_SPEC>;
        impl S144Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S145Rom_SPEC;
        pub type S145Rom = crate::EnumBitfieldStruct<u8, S145Rom_SPEC>;
        impl S145Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S146Rom_SPEC;
        pub type S146Rom = crate::EnumBitfieldStruct<u8, S146Rom_SPEC>;
        impl S146Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S147Rom_SPEC;
        pub type S147Rom = crate::EnumBitfieldStruct<u8, S147Rom_SPEC>;
        impl S147Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S148Rom_SPEC;
        pub type S148Rom = crate::EnumBitfieldStruct<u8, S148Rom_SPEC>;
        impl S148Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S149Rom_SPEC;
        pub type S149Rom = crate::EnumBitfieldStruct<u8, S149Rom_SPEC>;
        impl S149Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S150Rom_SPEC;
        pub type S150Rom = crate::EnumBitfieldStruct<u8, S150Rom_SPEC>;
        impl S150Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S151Rom_SPEC;
        pub type S151Rom = crate::EnumBitfieldStruct<u8, S151Rom_SPEC>;
        impl S151Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S152Rom_SPEC;
        pub type S152Rom = crate::EnumBitfieldStruct<u8, S152Rom_SPEC>;
        impl S152Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S153Rom_SPEC;
        pub type S153Rom = crate::EnumBitfieldStruct<u8, S153Rom_SPEC>;
        impl S153Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S154Rom_SPEC;
        pub type S154Rom = crate::EnumBitfieldStruct<u8, S154Rom_SPEC>;
        impl S154Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S155Rom_SPEC;
        pub type S155Rom = crate::EnumBitfieldStruct<u8, S155Rom_SPEC>;
        impl S155Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S156Rom_SPEC;
        pub type S156Rom = crate::EnumBitfieldStruct<u8, S156Rom_SPEC>;
        impl S156Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S157Rom_SPEC;
        pub type S157Rom = crate::EnumBitfieldStruct<u8, S157Rom_SPEC>;
        impl S157Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S158Rom_SPEC;
        pub type S158Rom = crate::EnumBitfieldStruct<u8, S158Rom_SPEC>;
        impl S158Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S159Rom_SPEC;
        pub type S159Rom = crate::EnumBitfieldStruct<u8, S159Rom_SPEC>;
        impl S159Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconotPi5_SPEC;
    impl crate::sealed::RegSpec for HpProconotPi5_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 OTP Protection Configuration 5\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconotPi5 = crate::RegValueT<HpProconotPi5_SPEC>;

    impl HpProconotPi5 {
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s160rom(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconotpi5::S160Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconotpi5::S160Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s161rom(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconotpi5::S161Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconotpi5::S161Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s162rom(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconotpi5::S162Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconotpi5::S162Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s163rom(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconotpi5::S163Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconotpi5::S163Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s164rom(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconotpi5::S164Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconotpi5::S164Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s165rom(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconotpi5::S165Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconotpi5::S165Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s166rom(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconotpi5::S166Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconotpi5::S166Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s167rom(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconotpi5::S167Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconotpi5::S167Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s168rom(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconotpi5::S168Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconotpi5::S168Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s169rom(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconotpi5::S169Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconotpi5::S169Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s170rom(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconotpi5::S170Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconotpi5::S170Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s171rom(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconotpi5::S171Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconotpi5::S171Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s172rom(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconotpi5::S172Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconotpi5::S172Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s173rom(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconotpi5::S173Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconotpi5::S173Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s174rom(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconotpi5::S174Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconotpi5::S174Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s175rom(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconotpi5::S175Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconotpi5::S175Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s176rom(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconotpi5::S176Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconotpi5::S176Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s177rom(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconotpi5::S177Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconotpi5::S177Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s178rom(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconotpi5::S178Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconotpi5::S178Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s179rom(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconotpi5::S179Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconotpi5::S179Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s180rom(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconotpi5::S180Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconotpi5::S180Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s181rom(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconotpi5::S181Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconotpi5::S181Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s182rom(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconotpi5::S182Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconotpi5::S182Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s183rom(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconotpi5::S183Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconotpi5::S183Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s184rom(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconotpi5::S184Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconotpi5::S184Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s185rom(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconotpi5::S185Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconotpi5::S185Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s186rom(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconotpi5::S186Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconotpi5::S186Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s187rom(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconotpi5::S187Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconotpi5::S187Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s188rom(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconotpi5::S188Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconotpi5::S188Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s189rom(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconotpi5::S189Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconotpi5::S189Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s190rom(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconotpi5::S190Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconotpi5::S190Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Forever   S191ROM. These bits indicate whether PFLASH p sector x is an OTP protected sector with read only functionality."]
        #[inline(always)]
        pub fn s191rom(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconotpi5::S191Rom,
            HpProconotPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconotpi5::S191Rom,
                HpProconotPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconotPi5 {
        #[inline(always)]
        fn default() -> HpProconotPi5 {
            <crate::RegValueT<HpProconotPi5_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconotpi5 {
        pub struct S160Rom_SPEC;
        pub type S160Rom = crate::EnumBitfieldStruct<u8, S160Rom_SPEC>;
        impl S160Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S161Rom_SPEC;
        pub type S161Rom = crate::EnumBitfieldStruct<u8, S161Rom_SPEC>;
        impl S161Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S162Rom_SPEC;
        pub type S162Rom = crate::EnumBitfieldStruct<u8, S162Rom_SPEC>;
        impl S162Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S163Rom_SPEC;
        pub type S163Rom = crate::EnumBitfieldStruct<u8, S163Rom_SPEC>;
        impl S163Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S164Rom_SPEC;
        pub type S164Rom = crate::EnumBitfieldStruct<u8, S164Rom_SPEC>;
        impl S164Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S165Rom_SPEC;
        pub type S165Rom = crate::EnumBitfieldStruct<u8, S165Rom_SPEC>;
        impl S165Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S166Rom_SPEC;
        pub type S166Rom = crate::EnumBitfieldStruct<u8, S166Rom_SPEC>;
        impl S166Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S167Rom_SPEC;
        pub type S167Rom = crate::EnumBitfieldStruct<u8, S167Rom_SPEC>;
        impl S167Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S168Rom_SPEC;
        pub type S168Rom = crate::EnumBitfieldStruct<u8, S168Rom_SPEC>;
        impl S168Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S169Rom_SPEC;
        pub type S169Rom = crate::EnumBitfieldStruct<u8, S169Rom_SPEC>;
        impl S169Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S170Rom_SPEC;
        pub type S170Rom = crate::EnumBitfieldStruct<u8, S170Rom_SPEC>;
        impl S170Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S171Rom_SPEC;
        pub type S171Rom = crate::EnumBitfieldStruct<u8, S171Rom_SPEC>;
        impl S171Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S172Rom_SPEC;
        pub type S172Rom = crate::EnumBitfieldStruct<u8, S172Rom_SPEC>;
        impl S172Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S173Rom_SPEC;
        pub type S173Rom = crate::EnumBitfieldStruct<u8, S173Rom_SPEC>;
        impl S173Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S174Rom_SPEC;
        pub type S174Rom = crate::EnumBitfieldStruct<u8, S174Rom_SPEC>;
        impl S174Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S175Rom_SPEC;
        pub type S175Rom = crate::EnumBitfieldStruct<u8, S175Rom_SPEC>;
        impl S175Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S176Rom_SPEC;
        pub type S176Rom = crate::EnumBitfieldStruct<u8, S176Rom_SPEC>;
        impl S176Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S177Rom_SPEC;
        pub type S177Rom = crate::EnumBitfieldStruct<u8, S177Rom_SPEC>;
        impl S177Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S178Rom_SPEC;
        pub type S178Rom = crate::EnumBitfieldStruct<u8, S178Rom_SPEC>;
        impl S178Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S179Rom_SPEC;
        pub type S179Rom = crate::EnumBitfieldStruct<u8, S179Rom_SPEC>;
        impl S179Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S180Rom_SPEC;
        pub type S180Rom = crate::EnumBitfieldStruct<u8, S180Rom_SPEC>;
        impl S180Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S181Rom_SPEC;
        pub type S181Rom = crate::EnumBitfieldStruct<u8, S181Rom_SPEC>;
        impl S181Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S182Rom_SPEC;
        pub type S182Rom = crate::EnumBitfieldStruct<u8, S182Rom_SPEC>;
        impl S182Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S183Rom_SPEC;
        pub type S183Rom = crate::EnumBitfieldStruct<u8, S183Rom_SPEC>;
        impl S183Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S184Rom_SPEC;
        pub type S184Rom = crate::EnumBitfieldStruct<u8, S184Rom_SPEC>;
        impl S184Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S185Rom_SPEC;
        pub type S185Rom = crate::EnumBitfieldStruct<u8, S185Rom_SPEC>;
        impl S185Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S186Rom_SPEC;
        pub type S186Rom = crate::EnumBitfieldStruct<u8, S186Rom_SPEC>;
        impl S186Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S187Rom_SPEC;
        pub type S187Rom = crate::EnumBitfieldStruct<u8, S187Rom_SPEC>;
        impl S187Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S188Rom_SPEC;
        pub type S188Rom = crate::EnumBitfieldStruct<u8, S188Rom_SPEC>;
        impl S188Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S189Rom_SPEC;
        pub type S189Rom = crate::EnumBitfieldStruct<u8, S189Rom_SPEC>;
        impl S189Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S190Rom_SPEC;
        pub type S190Rom = crate::EnumBitfieldStruct<u8, S190Rom_SPEC>;
        impl S190Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S191Rom_SPEC;
        pub type S191Rom = crate::EnumBitfieldStruct<u8, S191Rom_SPEC>;
        impl S191Rom {
            #[doc = "0 No OTP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 OTP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconPi0_SPEC;
    impl crate::sealed::RegSpec for HpProconPi0_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 0\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconPi0 = crate::RegValueT<HpProconPi0_SPEC>;

    impl HpProconPi0 {
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s0l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconpi0::S0L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconpi0::S0L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s1l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconpi0::S1L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconpi0::S1L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s2l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconpi0::S2L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconpi0::S2L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s3l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconpi0::S3L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconpi0::S3L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s4l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconpi0::S4L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconpi0::S4L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s5l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconpi0::S5L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconpi0::S5L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s6l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconpi0::S6L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconpi0::S6L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s7l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconpi0::S7L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconpi0::S7L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s8l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconpi0::S8L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconpi0::S8L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s9l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconpi0::S9L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconpi0::S9L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s10l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconpi0::S10L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconpi0::S10L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s11l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconpi0::S11L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconpi0::S11L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s12l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconpi0::S12L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconpi0::S12L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s13l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconpi0::S13L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconpi0::S13L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s14l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconpi0::S14L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconpi0::S14L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s15l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconpi0::S15L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconpi0::S15L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s16l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconpi0::S16L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconpi0::S16L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s17l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconpi0::S17L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconpi0::S17L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s18l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconpi0::S18L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconpi0::S18L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s19l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconpi0::S19L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconpi0::S19L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s20l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconpi0::S20L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconpi0::S20L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s21l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconpi0::S21L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconpi0::S21L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s22l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconpi0::S22L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconpi0::S22L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s23l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconpi0::S23L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconpi0::S23L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s24l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconpi0::S24L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconpi0::S24L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s25l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconpi0::S25L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconpi0::S25L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s26l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconpi0::S26L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconpi0::S26L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s27l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconpi0::S27L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconpi0::S27L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s28l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconpi0::S28L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconpi0::S28L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s29l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconpi0::S29L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconpi0::S29L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s30l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconpi0::S30L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconpi0::S30L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Locked for Write Protection   S31L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s31l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconpi0::S31L,
            HpProconPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconpi0::S31L,
                HpProconPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconPi0 {
        #[inline(always)]
        fn default() -> HpProconPi0 {
            <crate::RegValueT<HpProconPi0_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconpi0 {
        pub struct S0L_SPEC;
        pub type S0L = crate::EnumBitfieldStruct<u8, S0L_SPEC>;
        impl S0L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S1L_SPEC;
        pub type S1L = crate::EnumBitfieldStruct<u8, S1L_SPEC>;
        impl S1L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S2L_SPEC;
        pub type S2L = crate::EnumBitfieldStruct<u8, S2L_SPEC>;
        impl S2L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S3L_SPEC;
        pub type S3L = crate::EnumBitfieldStruct<u8, S3L_SPEC>;
        impl S3L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S4L_SPEC;
        pub type S4L = crate::EnumBitfieldStruct<u8, S4L_SPEC>;
        impl S4L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S5L_SPEC;
        pub type S5L = crate::EnumBitfieldStruct<u8, S5L_SPEC>;
        impl S5L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S6L_SPEC;
        pub type S6L = crate::EnumBitfieldStruct<u8, S6L_SPEC>;
        impl S6L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S7L_SPEC;
        pub type S7L = crate::EnumBitfieldStruct<u8, S7L_SPEC>;
        impl S7L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S8L_SPEC;
        pub type S8L = crate::EnumBitfieldStruct<u8, S8L_SPEC>;
        impl S8L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S9L_SPEC;
        pub type S9L = crate::EnumBitfieldStruct<u8, S9L_SPEC>;
        impl S9L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S10L_SPEC;
        pub type S10L = crate::EnumBitfieldStruct<u8, S10L_SPEC>;
        impl S10L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S11L_SPEC;
        pub type S11L = crate::EnumBitfieldStruct<u8, S11L_SPEC>;
        impl S11L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S12L_SPEC;
        pub type S12L = crate::EnumBitfieldStruct<u8, S12L_SPEC>;
        impl S12L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S13L_SPEC;
        pub type S13L = crate::EnumBitfieldStruct<u8, S13L_SPEC>;
        impl S13L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S14L_SPEC;
        pub type S14L = crate::EnumBitfieldStruct<u8, S14L_SPEC>;
        impl S14L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S15L_SPEC;
        pub type S15L = crate::EnumBitfieldStruct<u8, S15L_SPEC>;
        impl S15L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S16L_SPEC;
        pub type S16L = crate::EnumBitfieldStruct<u8, S16L_SPEC>;
        impl S16L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S17L_SPEC;
        pub type S17L = crate::EnumBitfieldStruct<u8, S17L_SPEC>;
        impl S17L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S18L_SPEC;
        pub type S18L = crate::EnumBitfieldStruct<u8, S18L_SPEC>;
        impl S18L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S19L_SPEC;
        pub type S19L = crate::EnumBitfieldStruct<u8, S19L_SPEC>;
        impl S19L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S20L_SPEC;
        pub type S20L = crate::EnumBitfieldStruct<u8, S20L_SPEC>;
        impl S20L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S21L_SPEC;
        pub type S21L = crate::EnumBitfieldStruct<u8, S21L_SPEC>;
        impl S21L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S22L_SPEC;
        pub type S22L = crate::EnumBitfieldStruct<u8, S22L_SPEC>;
        impl S22L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S23L_SPEC;
        pub type S23L = crate::EnumBitfieldStruct<u8, S23L_SPEC>;
        impl S23L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S24L_SPEC;
        pub type S24L = crate::EnumBitfieldStruct<u8, S24L_SPEC>;
        impl S24L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S25L_SPEC;
        pub type S25L = crate::EnumBitfieldStruct<u8, S25L_SPEC>;
        impl S25L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S26L_SPEC;
        pub type S26L = crate::EnumBitfieldStruct<u8, S26L_SPEC>;
        impl S26L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S27L_SPEC;
        pub type S27L = crate::EnumBitfieldStruct<u8, S27L_SPEC>;
        impl S27L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S28L_SPEC;
        pub type S28L = crate::EnumBitfieldStruct<u8, S28L_SPEC>;
        impl S28L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S29L_SPEC;
        pub type S29L = crate::EnumBitfieldStruct<u8, S29L_SPEC>;
        impl S29L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S30L_SPEC;
        pub type S30L = crate::EnumBitfieldStruct<u8, S30L_SPEC>;
        impl S30L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S31L_SPEC;
        pub type S31L = crate::EnumBitfieldStruct<u8, S31L_SPEC>;
        impl S31L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconPi1_SPEC;
    impl crate::sealed::RegSpec for HpProconPi1_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 1\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconPi1 = crate::RegValueT<HpProconPi1_SPEC>;

    impl HpProconPi1 {
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s32l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconpi1::S32L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconpi1::S32L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s33l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconpi1::S33L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconpi1::S33L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s34l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconpi1::S34L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconpi1::S34L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s35l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconpi1::S35L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconpi1::S35L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s36l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconpi1::S36L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconpi1::S36L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s37l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconpi1::S37L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconpi1::S37L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s38l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconpi1::S38L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconpi1::S38L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s39l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconpi1::S39L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconpi1::S39L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s40l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconpi1::S40L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconpi1::S40L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s41l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconpi1::S41L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconpi1::S41L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s42l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconpi1::S42L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconpi1::S42L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s43l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconpi1::S43L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconpi1::S43L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s44l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconpi1::S44L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconpi1::S44L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s45l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconpi1::S45L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconpi1::S45L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s46l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconpi1::S46L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconpi1::S46L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s47l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconpi1::S47L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconpi1::S47L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s48l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconpi1::S48L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconpi1::S48L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s49l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconpi1::S49L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconpi1::S49L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s50l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconpi1::S50L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconpi1::S50L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s51l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconpi1::S51L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconpi1::S51L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s52l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconpi1::S52L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconpi1::S52L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s53l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconpi1::S53L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconpi1::S53L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s54l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconpi1::S54L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconpi1::S54L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s55l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconpi1::S55L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconpi1::S55L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s56l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconpi1::S56L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconpi1::S56L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s57l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconpi1::S57L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconpi1::S57L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s58l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconpi1::S58L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconpi1::S58L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s59l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconpi1::S59L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconpi1::S59L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s60l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconpi1::S60L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconpi1::S60L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s61l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconpi1::S61L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconpi1::S61L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s62l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconpi1::S62L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconpi1::S62L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Locked for Write Protection   S63L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s63l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconpi1::S63L,
            HpProconPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconpi1::S63L,
                HpProconPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconPi1 {
        #[inline(always)]
        fn default() -> HpProconPi1 {
            <crate::RegValueT<HpProconPi1_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconpi1 {
        pub struct S32L_SPEC;
        pub type S32L = crate::EnumBitfieldStruct<u8, S32L_SPEC>;
        impl S32L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S33L_SPEC;
        pub type S33L = crate::EnumBitfieldStruct<u8, S33L_SPEC>;
        impl S33L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S34L_SPEC;
        pub type S34L = crate::EnumBitfieldStruct<u8, S34L_SPEC>;
        impl S34L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S35L_SPEC;
        pub type S35L = crate::EnumBitfieldStruct<u8, S35L_SPEC>;
        impl S35L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S36L_SPEC;
        pub type S36L = crate::EnumBitfieldStruct<u8, S36L_SPEC>;
        impl S36L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S37L_SPEC;
        pub type S37L = crate::EnumBitfieldStruct<u8, S37L_SPEC>;
        impl S37L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S38L_SPEC;
        pub type S38L = crate::EnumBitfieldStruct<u8, S38L_SPEC>;
        impl S38L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S39L_SPEC;
        pub type S39L = crate::EnumBitfieldStruct<u8, S39L_SPEC>;
        impl S39L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S40L_SPEC;
        pub type S40L = crate::EnumBitfieldStruct<u8, S40L_SPEC>;
        impl S40L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S41L_SPEC;
        pub type S41L = crate::EnumBitfieldStruct<u8, S41L_SPEC>;
        impl S41L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S42L_SPEC;
        pub type S42L = crate::EnumBitfieldStruct<u8, S42L_SPEC>;
        impl S42L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S43L_SPEC;
        pub type S43L = crate::EnumBitfieldStruct<u8, S43L_SPEC>;
        impl S43L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S44L_SPEC;
        pub type S44L = crate::EnumBitfieldStruct<u8, S44L_SPEC>;
        impl S44L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S45L_SPEC;
        pub type S45L = crate::EnumBitfieldStruct<u8, S45L_SPEC>;
        impl S45L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S46L_SPEC;
        pub type S46L = crate::EnumBitfieldStruct<u8, S46L_SPEC>;
        impl S46L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S47L_SPEC;
        pub type S47L = crate::EnumBitfieldStruct<u8, S47L_SPEC>;
        impl S47L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S48L_SPEC;
        pub type S48L = crate::EnumBitfieldStruct<u8, S48L_SPEC>;
        impl S48L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S49L_SPEC;
        pub type S49L = crate::EnumBitfieldStruct<u8, S49L_SPEC>;
        impl S49L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S50L_SPEC;
        pub type S50L = crate::EnumBitfieldStruct<u8, S50L_SPEC>;
        impl S50L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S51L_SPEC;
        pub type S51L = crate::EnumBitfieldStruct<u8, S51L_SPEC>;
        impl S51L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S52L_SPEC;
        pub type S52L = crate::EnumBitfieldStruct<u8, S52L_SPEC>;
        impl S52L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S53L_SPEC;
        pub type S53L = crate::EnumBitfieldStruct<u8, S53L_SPEC>;
        impl S53L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S54L_SPEC;
        pub type S54L = crate::EnumBitfieldStruct<u8, S54L_SPEC>;
        impl S54L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S55L_SPEC;
        pub type S55L = crate::EnumBitfieldStruct<u8, S55L_SPEC>;
        impl S55L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S56L_SPEC;
        pub type S56L = crate::EnumBitfieldStruct<u8, S56L_SPEC>;
        impl S56L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S57L_SPEC;
        pub type S57L = crate::EnumBitfieldStruct<u8, S57L_SPEC>;
        impl S57L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S58L_SPEC;
        pub type S58L = crate::EnumBitfieldStruct<u8, S58L_SPEC>;
        impl S58L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S59L_SPEC;
        pub type S59L = crate::EnumBitfieldStruct<u8, S59L_SPEC>;
        impl S59L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S60L_SPEC;
        pub type S60L = crate::EnumBitfieldStruct<u8, S60L_SPEC>;
        impl S60L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S61L_SPEC;
        pub type S61L = crate::EnumBitfieldStruct<u8, S61L_SPEC>;
        impl S61L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S62L_SPEC;
        pub type S62L = crate::EnumBitfieldStruct<u8, S62L_SPEC>;
        impl S62L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S63L_SPEC;
        pub type S63L = crate::EnumBitfieldStruct<u8, S63L_SPEC>;
        impl S63L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconPi2_SPEC;
    impl crate::sealed::RegSpec for HpProconPi2_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 2\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconPi2 = crate::RegValueT<HpProconPi2_SPEC>;

    impl HpProconPi2 {
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s64l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconpi2::S64L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconpi2::S64L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s65l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconpi2::S65L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconpi2::S65L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s66l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconpi2::S66L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconpi2::S66L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s67l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconpi2::S67L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconpi2::S67L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s68l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconpi2::S68L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconpi2::S68L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s69l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconpi2::S69L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconpi2::S69L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s70l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconpi2::S70L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconpi2::S70L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s71l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconpi2::S71L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconpi2::S71L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s72l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconpi2::S72L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconpi2::S72L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s73l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconpi2::S73L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconpi2::S73L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s74l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconpi2::S74L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconpi2::S74L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s75l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconpi2::S75L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconpi2::S75L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s76l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconpi2::S76L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconpi2::S76L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s77l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconpi2::S77L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconpi2::S77L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s78l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconpi2::S78L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconpi2::S78L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s79l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconpi2::S79L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconpi2::S79L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s80l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconpi2::S80L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconpi2::S80L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s81l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconpi2::S81L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconpi2::S81L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s82l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconpi2::S82L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconpi2::S82L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s83l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconpi2::S83L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconpi2::S83L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s84l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconpi2::S84L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconpi2::S84L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s85l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconpi2::S85L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconpi2::S85L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s86l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconpi2::S86L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconpi2::S86L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s87l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconpi2::S87L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconpi2::S87L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s88l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconpi2::S88L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconpi2::S88L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s89l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconpi2::S89L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconpi2::S89L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s90l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconpi2::S90L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconpi2::S90L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s91l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconpi2::S91L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconpi2::S91L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s92l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconpi2::S92L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconpi2::S92L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s93l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconpi2::S93L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconpi2::S93L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s94l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconpi2::S94L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconpi2::S94L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Locked for Write Protection   S95L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s95l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconpi2::S95L,
            HpProconPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconpi2::S95L,
                HpProconPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconPi2 {
        #[inline(always)]
        fn default() -> HpProconPi2 {
            <crate::RegValueT<HpProconPi2_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconpi2 {
        pub struct S64L_SPEC;
        pub type S64L = crate::EnumBitfieldStruct<u8, S64L_SPEC>;
        impl S64L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S65L_SPEC;
        pub type S65L = crate::EnumBitfieldStruct<u8, S65L_SPEC>;
        impl S65L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S66L_SPEC;
        pub type S66L = crate::EnumBitfieldStruct<u8, S66L_SPEC>;
        impl S66L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S67L_SPEC;
        pub type S67L = crate::EnumBitfieldStruct<u8, S67L_SPEC>;
        impl S67L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S68L_SPEC;
        pub type S68L = crate::EnumBitfieldStruct<u8, S68L_SPEC>;
        impl S68L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S69L_SPEC;
        pub type S69L = crate::EnumBitfieldStruct<u8, S69L_SPEC>;
        impl S69L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S70L_SPEC;
        pub type S70L = crate::EnumBitfieldStruct<u8, S70L_SPEC>;
        impl S70L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S71L_SPEC;
        pub type S71L = crate::EnumBitfieldStruct<u8, S71L_SPEC>;
        impl S71L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S72L_SPEC;
        pub type S72L = crate::EnumBitfieldStruct<u8, S72L_SPEC>;
        impl S72L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S73L_SPEC;
        pub type S73L = crate::EnumBitfieldStruct<u8, S73L_SPEC>;
        impl S73L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S74L_SPEC;
        pub type S74L = crate::EnumBitfieldStruct<u8, S74L_SPEC>;
        impl S74L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S75L_SPEC;
        pub type S75L = crate::EnumBitfieldStruct<u8, S75L_SPEC>;
        impl S75L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S76L_SPEC;
        pub type S76L = crate::EnumBitfieldStruct<u8, S76L_SPEC>;
        impl S76L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S77L_SPEC;
        pub type S77L = crate::EnumBitfieldStruct<u8, S77L_SPEC>;
        impl S77L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S78L_SPEC;
        pub type S78L = crate::EnumBitfieldStruct<u8, S78L_SPEC>;
        impl S78L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S79L_SPEC;
        pub type S79L = crate::EnumBitfieldStruct<u8, S79L_SPEC>;
        impl S79L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S80L_SPEC;
        pub type S80L = crate::EnumBitfieldStruct<u8, S80L_SPEC>;
        impl S80L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S81L_SPEC;
        pub type S81L = crate::EnumBitfieldStruct<u8, S81L_SPEC>;
        impl S81L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S82L_SPEC;
        pub type S82L = crate::EnumBitfieldStruct<u8, S82L_SPEC>;
        impl S82L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S83L_SPEC;
        pub type S83L = crate::EnumBitfieldStruct<u8, S83L_SPEC>;
        impl S83L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S84L_SPEC;
        pub type S84L = crate::EnumBitfieldStruct<u8, S84L_SPEC>;
        impl S84L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S85L_SPEC;
        pub type S85L = crate::EnumBitfieldStruct<u8, S85L_SPEC>;
        impl S85L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S86L_SPEC;
        pub type S86L = crate::EnumBitfieldStruct<u8, S86L_SPEC>;
        impl S86L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S87L_SPEC;
        pub type S87L = crate::EnumBitfieldStruct<u8, S87L_SPEC>;
        impl S87L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S88L_SPEC;
        pub type S88L = crate::EnumBitfieldStruct<u8, S88L_SPEC>;
        impl S88L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S89L_SPEC;
        pub type S89L = crate::EnumBitfieldStruct<u8, S89L_SPEC>;
        impl S89L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S90L_SPEC;
        pub type S90L = crate::EnumBitfieldStruct<u8, S90L_SPEC>;
        impl S90L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S91L_SPEC;
        pub type S91L = crate::EnumBitfieldStruct<u8, S91L_SPEC>;
        impl S91L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S92L_SPEC;
        pub type S92L = crate::EnumBitfieldStruct<u8, S92L_SPEC>;
        impl S92L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S93L_SPEC;
        pub type S93L = crate::EnumBitfieldStruct<u8, S93L_SPEC>;
        impl S93L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S94L_SPEC;
        pub type S94L = crate::EnumBitfieldStruct<u8, S94L_SPEC>;
        impl S94L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S95L_SPEC;
        pub type S95L = crate::EnumBitfieldStruct<u8, S95L_SPEC>;
        impl S95L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconPi3_SPEC;
    impl crate::sealed::RegSpec for HpProconPi3_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 3\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconPi3 = crate::RegValueT<HpProconPi3_SPEC>;

    impl HpProconPi3 {
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s96l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconpi3::S96L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconpi3::S96L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s97l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconpi3::S97L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconpi3::S97L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s98l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconpi3::S98L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconpi3::S98L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s99l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconpi3::S99L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconpi3::S99L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s100l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconpi3::S100L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconpi3::S100L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s101l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconpi3::S101L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconpi3::S101L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s102l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconpi3::S102L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconpi3::S102L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s103l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconpi3::S103L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconpi3::S103L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s104l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconpi3::S104L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconpi3::S104L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s105l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconpi3::S105L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconpi3::S105L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s106l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconpi3::S106L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconpi3::S106L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s107l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconpi3::S107L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconpi3::S107L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s108l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconpi3::S108L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconpi3::S108L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s109l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconpi3::S109L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconpi3::S109L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s110l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconpi3::S110L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconpi3::S110L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s111l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconpi3::S111L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconpi3::S111L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s112l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconpi3::S112L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconpi3::S112L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s113l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconpi3::S113L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconpi3::S113L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s114l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconpi3::S114L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconpi3::S114L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s115l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconpi3::S115L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconpi3::S115L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s116l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconpi3::S116L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconpi3::S116L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s117l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconpi3::S117L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconpi3::S117L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s118l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconpi3::S118L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconpi3::S118L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s119l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconpi3::S119L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconpi3::S119L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s120l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconpi3::S120L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconpi3::S120L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s121l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconpi3::S121L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconpi3::S121L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s122l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconpi3::S122L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconpi3::S122L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s123l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconpi3::S123L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconpi3::S123L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s124l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconpi3::S124L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconpi3::S124L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s125l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconpi3::S125L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconpi3::S125L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s126l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconpi3::S126L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconpi3::S126L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Locked for Write Protection   S127L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s127l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconpi3::S127L,
            HpProconPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconpi3::S127L,
                HpProconPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconPi3 {
        #[inline(always)]
        fn default() -> HpProconPi3 {
            <crate::RegValueT<HpProconPi3_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconpi3 {
        pub struct S96L_SPEC;
        pub type S96L = crate::EnumBitfieldStruct<u8, S96L_SPEC>;
        impl S96L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S97L_SPEC;
        pub type S97L = crate::EnumBitfieldStruct<u8, S97L_SPEC>;
        impl S97L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S98L_SPEC;
        pub type S98L = crate::EnumBitfieldStruct<u8, S98L_SPEC>;
        impl S98L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S99L_SPEC;
        pub type S99L = crate::EnumBitfieldStruct<u8, S99L_SPEC>;
        impl S99L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S100L_SPEC;
        pub type S100L = crate::EnumBitfieldStruct<u8, S100L_SPEC>;
        impl S100L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S101L_SPEC;
        pub type S101L = crate::EnumBitfieldStruct<u8, S101L_SPEC>;
        impl S101L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S102L_SPEC;
        pub type S102L = crate::EnumBitfieldStruct<u8, S102L_SPEC>;
        impl S102L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S103L_SPEC;
        pub type S103L = crate::EnumBitfieldStruct<u8, S103L_SPEC>;
        impl S103L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S104L_SPEC;
        pub type S104L = crate::EnumBitfieldStruct<u8, S104L_SPEC>;
        impl S104L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S105L_SPEC;
        pub type S105L = crate::EnumBitfieldStruct<u8, S105L_SPEC>;
        impl S105L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S106L_SPEC;
        pub type S106L = crate::EnumBitfieldStruct<u8, S106L_SPEC>;
        impl S106L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S107L_SPEC;
        pub type S107L = crate::EnumBitfieldStruct<u8, S107L_SPEC>;
        impl S107L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S108L_SPEC;
        pub type S108L = crate::EnumBitfieldStruct<u8, S108L_SPEC>;
        impl S108L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S109L_SPEC;
        pub type S109L = crate::EnumBitfieldStruct<u8, S109L_SPEC>;
        impl S109L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S110L_SPEC;
        pub type S110L = crate::EnumBitfieldStruct<u8, S110L_SPEC>;
        impl S110L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S111L_SPEC;
        pub type S111L = crate::EnumBitfieldStruct<u8, S111L_SPEC>;
        impl S111L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S112L_SPEC;
        pub type S112L = crate::EnumBitfieldStruct<u8, S112L_SPEC>;
        impl S112L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S113L_SPEC;
        pub type S113L = crate::EnumBitfieldStruct<u8, S113L_SPEC>;
        impl S113L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S114L_SPEC;
        pub type S114L = crate::EnumBitfieldStruct<u8, S114L_SPEC>;
        impl S114L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S115L_SPEC;
        pub type S115L = crate::EnumBitfieldStruct<u8, S115L_SPEC>;
        impl S115L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S116L_SPEC;
        pub type S116L = crate::EnumBitfieldStruct<u8, S116L_SPEC>;
        impl S116L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S117L_SPEC;
        pub type S117L = crate::EnumBitfieldStruct<u8, S117L_SPEC>;
        impl S117L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S118L_SPEC;
        pub type S118L = crate::EnumBitfieldStruct<u8, S118L_SPEC>;
        impl S118L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S119L_SPEC;
        pub type S119L = crate::EnumBitfieldStruct<u8, S119L_SPEC>;
        impl S119L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S120L_SPEC;
        pub type S120L = crate::EnumBitfieldStruct<u8, S120L_SPEC>;
        impl S120L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S121L_SPEC;
        pub type S121L = crate::EnumBitfieldStruct<u8, S121L_SPEC>;
        impl S121L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S122L_SPEC;
        pub type S122L = crate::EnumBitfieldStruct<u8, S122L_SPEC>;
        impl S122L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S123L_SPEC;
        pub type S123L = crate::EnumBitfieldStruct<u8, S123L_SPEC>;
        impl S123L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S124L_SPEC;
        pub type S124L = crate::EnumBitfieldStruct<u8, S124L_SPEC>;
        impl S124L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S125L_SPEC;
        pub type S125L = crate::EnumBitfieldStruct<u8, S125L_SPEC>;
        impl S125L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S126L_SPEC;
        pub type S126L = crate::EnumBitfieldStruct<u8, S126L_SPEC>;
        impl S126L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S127L_SPEC;
        pub type S127L = crate::EnumBitfieldStruct<u8, S127L_SPEC>;
        impl S127L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconPi4_SPEC;
    impl crate::sealed::RegSpec for HpProconPi4_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 4\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconPi4 = crate::RegValueT<HpProconPi4_SPEC>;

    impl HpProconPi4 {
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s128l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconpi4::S128L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconpi4::S128L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s129l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconpi4::S129L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconpi4::S129L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s130l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconpi4::S130L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconpi4::S130L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s131l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconpi4::S131L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconpi4::S131L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s132l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconpi4::S132L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconpi4::S132L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s133l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconpi4::S133L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconpi4::S133L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s134l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconpi4::S134L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconpi4::S134L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s135l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconpi4::S135L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconpi4::S135L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s136l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconpi4::S136L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconpi4::S136L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s137l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconpi4::S137L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconpi4::S137L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s138l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconpi4::S138L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconpi4::S138L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s139l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconpi4::S139L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconpi4::S139L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s140l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconpi4::S140L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconpi4::S140L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s141l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconpi4::S141L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconpi4::S141L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s142l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconpi4::S142L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconpi4::S142L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s143l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconpi4::S143L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconpi4::S143L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s144l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconpi4::S144L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconpi4::S144L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s145l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconpi4::S145L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconpi4::S145L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s146l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconpi4::S146L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconpi4::S146L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s147l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconpi4::S147L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconpi4::S147L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s148l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconpi4::S148L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconpi4::S148L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s149l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconpi4::S149L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconpi4::S149L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s150l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconpi4::S150L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconpi4::S150L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s151l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconpi4::S151L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconpi4::S151L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s152l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconpi4::S152L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconpi4::S152L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s153l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconpi4::S153L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconpi4::S153L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s154l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconpi4::S154L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconpi4::S154L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s155l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconpi4::S155L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconpi4::S155L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s156l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconpi4::S156L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconpi4::S156L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s157l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconpi4::S157L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconpi4::S157L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s158l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconpi4::S158L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconpi4::S158L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Locked for Write Protection   S159L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s159l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconpi4::S159L,
            HpProconPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconpi4::S159L,
                HpProconPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconPi4 {
        #[inline(always)]
        fn default() -> HpProconPi4 {
            <crate::RegValueT<HpProconPi4_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconpi4 {
        pub struct S128L_SPEC;
        pub type S128L = crate::EnumBitfieldStruct<u8, S128L_SPEC>;
        impl S128L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S129L_SPEC;
        pub type S129L = crate::EnumBitfieldStruct<u8, S129L_SPEC>;
        impl S129L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S130L_SPEC;
        pub type S130L = crate::EnumBitfieldStruct<u8, S130L_SPEC>;
        impl S130L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S131L_SPEC;
        pub type S131L = crate::EnumBitfieldStruct<u8, S131L_SPEC>;
        impl S131L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S132L_SPEC;
        pub type S132L = crate::EnumBitfieldStruct<u8, S132L_SPEC>;
        impl S132L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S133L_SPEC;
        pub type S133L = crate::EnumBitfieldStruct<u8, S133L_SPEC>;
        impl S133L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S134L_SPEC;
        pub type S134L = crate::EnumBitfieldStruct<u8, S134L_SPEC>;
        impl S134L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S135L_SPEC;
        pub type S135L = crate::EnumBitfieldStruct<u8, S135L_SPEC>;
        impl S135L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S136L_SPEC;
        pub type S136L = crate::EnumBitfieldStruct<u8, S136L_SPEC>;
        impl S136L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S137L_SPEC;
        pub type S137L = crate::EnumBitfieldStruct<u8, S137L_SPEC>;
        impl S137L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S138L_SPEC;
        pub type S138L = crate::EnumBitfieldStruct<u8, S138L_SPEC>;
        impl S138L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S139L_SPEC;
        pub type S139L = crate::EnumBitfieldStruct<u8, S139L_SPEC>;
        impl S139L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S140L_SPEC;
        pub type S140L = crate::EnumBitfieldStruct<u8, S140L_SPEC>;
        impl S140L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S141L_SPEC;
        pub type S141L = crate::EnumBitfieldStruct<u8, S141L_SPEC>;
        impl S141L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S142L_SPEC;
        pub type S142L = crate::EnumBitfieldStruct<u8, S142L_SPEC>;
        impl S142L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S143L_SPEC;
        pub type S143L = crate::EnumBitfieldStruct<u8, S143L_SPEC>;
        impl S143L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S144L_SPEC;
        pub type S144L = crate::EnumBitfieldStruct<u8, S144L_SPEC>;
        impl S144L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S145L_SPEC;
        pub type S145L = crate::EnumBitfieldStruct<u8, S145L_SPEC>;
        impl S145L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S146L_SPEC;
        pub type S146L = crate::EnumBitfieldStruct<u8, S146L_SPEC>;
        impl S146L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S147L_SPEC;
        pub type S147L = crate::EnumBitfieldStruct<u8, S147L_SPEC>;
        impl S147L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S148L_SPEC;
        pub type S148L = crate::EnumBitfieldStruct<u8, S148L_SPEC>;
        impl S148L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S149L_SPEC;
        pub type S149L = crate::EnumBitfieldStruct<u8, S149L_SPEC>;
        impl S149L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S150L_SPEC;
        pub type S150L = crate::EnumBitfieldStruct<u8, S150L_SPEC>;
        impl S150L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S151L_SPEC;
        pub type S151L = crate::EnumBitfieldStruct<u8, S151L_SPEC>;
        impl S151L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S152L_SPEC;
        pub type S152L = crate::EnumBitfieldStruct<u8, S152L_SPEC>;
        impl S152L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S153L_SPEC;
        pub type S153L = crate::EnumBitfieldStruct<u8, S153L_SPEC>;
        impl S153L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S154L_SPEC;
        pub type S154L = crate::EnumBitfieldStruct<u8, S154L_SPEC>;
        impl S154L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S155L_SPEC;
        pub type S155L = crate::EnumBitfieldStruct<u8, S155L_SPEC>;
        impl S155L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S156L_SPEC;
        pub type S156L = crate::EnumBitfieldStruct<u8, S156L_SPEC>;
        impl S156L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S157L_SPEC;
        pub type S157L = crate::EnumBitfieldStruct<u8, S157L_SPEC>;
        impl S157L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S158L_SPEC;
        pub type S158L = crate::EnumBitfieldStruct<u8, S158L_SPEC>;
        impl S158L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S159L_SPEC;
        pub type S159L = crate::EnumBitfieldStruct<u8, S159L_SPEC>;
        impl S159L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconPi5_SPEC;
    impl crate::sealed::RegSpec for HpProconPi5_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 Protection Configuration 5\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconPi5 = crate::RegValueT<HpProconPi5_SPEC>;

    impl HpProconPi5 {
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s160l(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconpi5::S160L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconpi5::S160L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s161l(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconpi5::S161L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconpi5::S161L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s162l(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconpi5::S162L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconpi5::S162L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s163l(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconpi5::S163L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconpi5::S163L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s164l(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconpi5::S164L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconpi5::S164L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s165l(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconpi5::S165L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconpi5::S165L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s166l(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconpi5::S166L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconpi5::S166L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s167l(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconpi5::S167L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconpi5::S167L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s168l(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconpi5::S168L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconpi5::S168L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s169l(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconpi5::S169L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconpi5::S169L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s170l(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconpi5::S170L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconpi5::S170L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s171l(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconpi5::S171L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconpi5::S171L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s172l(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconpi5::S172L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconpi5::S172L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s173l(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconpi5::S173L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconpi5::S173L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s174l(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconpi5::S174L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconpi5::S174L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s175l(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconpi5::S175L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconpi5::S175L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s176l(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconpi5::S176L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconpi5::S176L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s177l(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconpi5::S177L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconpi5::S177L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s178l(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconpi5::S178L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconpi5::S178L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s179l(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconpi5::S179L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconpi5::S179L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s180l(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconpi5::S180L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconpi5::S180L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s181l(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconpi5::S181L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconpi5::S181L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s182l(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconpi5::S182L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconpi5::S182L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s183l(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconpi5::S183L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconpi5::S183L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s184l(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconpi5::S184L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconpi5::S184L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s185l(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconpi5::S185L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconpi5::S185L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s186l(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconpi5::S186L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconpi5::S186L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s187l(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconpi5::S187L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconpi5::S187L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s188l(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconpi5::S188L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconpi5::S188L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s189l(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconpi5::S189L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconpi5::S189L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s190l(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconpi5::S190L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconpi5::S190L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Locked for Write Protection   S191L. These bits indicate whether PFLASH sector x is write protected."]
        #[inline(always)]
        pub fn s191l(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconpi5::S191L,
            HpProconPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconpi5::S191L,
                HpProconPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconPi5 {
        #[inline(always)]
        fn default() -> HpProconPi5 {
            <crate::RegValueT<HpProconPi5_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconpi5 {
        pub struct S160L_SPEC;
        pub type S160L = crate::EnumBitfieldStruct<u8, S160L_SPEC>;
        impl S160L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S161L_SPEC;
        pub type S161L = crate::EnumBitfieldStruct<u8, S161L_SPEC>;
        impl S161L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S162L_SPEC;
        pub type S162L = crate::EnumBitfieldStruct<u8, S162L_SPEC>;
        impl S162L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S163L_SPEC;
        pub type S163L = crate::EnumBitfieldStruct<u8, S163L_SPEC>;
        impl S163L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S164L_SPEC;
        pub type S164L = crate::EnumBitfieldStruct<u8, S164L_SPEC>;
        impl S164L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S165L_SPEC;
        pub type S165L = crate::EnumBitfieldStruct<u8, S165L_SPEC>;
        impl S165L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S166L_SPEC;
        pub type S166L = crate::EnumBitfieldStruct<u8, S166L_SPEC>;
        impl S166L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S167L_SPEC;
        pub type S167L = crate::EnumBitfieldStruct<u8, S167L_SPEC>;
        impl S167L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S168L_SPEC;
        pub type S168L = crate::EnumBitfieldStruct<u8, S168L_SPEC>;
        impl S168L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S169L_SPEC;
        pub type S169L = crate::EnumBitfieldStruct<u8, S169L_SPEC>;
        impl S169L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S170L_SPEC;
        pub type S170L = crate::EnumBitfieldStruct<u8, S170L_SPEC>;
        impl S170L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S171L_SPEC;
        pub type S171L = crate::EnumBitfieldStruct<u8, S171L_SPEC>;
        impl S171L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S172L_SPEC;
        pub type S172L = crate::EnumBitfieldStruct<u8, S172L_SPEC>;
        impl S172L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S173L_SPEC;
        pub type S173L = crate::EnumBitfieldStruct<u8, S173L_SPEC>;
        impl S173L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S174L_SPEC;
        pub type S174L = crate::EnumBitfieldStruct<u8, S174L_SPEC>;
        impl S174L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S175L_SPEC;
        pub type S175L = crate::EnumBitfieldStruct<u8, S175L_SPEC>;
        impl S175L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S176L_SPEC;
        pub type S176L = crate::EnumBitfieldStruct<u8, S176L_SPEC>;
        impl S176L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S177L_SPEC;
        pub type S177L = crate::EnumBitfieldStruct<u8, S177L_SPEC>;
        impl S177L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S178L_SPEC;
        pub type S178L = crate::EnumBitfieldStruct<u8, S178L_SPEC>;
        impl S178L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S179L_SPEC;
        pub type S179L = crate::EnumBitfieldStruct<u8, S179L_SPEC>;
        impl S179L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S180L_SPEC;
        pub type S180L = crate::EnumBitfieldStruct<u8, S180L_SPEC>;
        impl S180L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S181L_SPEC;
        pub type S181L = crate::EnumBitfieldStruct<u8, S181L_SPEC>;
        impl S181L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S182L_SPEC;
        pub type S182L = crate::EnumBitfieldStruct<u8, S182L_SPEC>;
        impl S182L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S183L_SPEC;
        pub type S183L = crate::EnumBitfieldStruct<u8, S183L_SPEC>;
        impl S183L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S184L_SPEC;
        pub type S184L = crate::EnumBitfieldStruct<u8, S184L_SPEC>;
        impl S184L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S185L_SPEC;
        pub type S185L = crate::EnumBitfieldStruct<u8, S185L_SPEC>;
        impl S185L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S186L_SPEC;
        pub type S186L = crate::EnumBitfieldStruct<u8, S186L_SPEC>;
        impl S186L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S187L_SPEC;
        pub type S187L = crate::EnumBitfieldStruct<u8, S187L_SPEC>;
        impl S187L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S188L_SPEC;
        pub type S188L = crate::EnumBitfieldStruct<u8, S188L_SPEC>;
        impl S188L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S189L_SPEC;
        pub type S189L = crate::EnumBitfieldStruct<u8, S189L_SPEC>;
        impl S189L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S190L_SPEC;
        pub type S190L = crate::EnumBitfieldStruct<u8, S190L_SPEC>;
        impl S190L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S191L_SPEC;
        pub type S191L = crate::EnumBitfieldStruct<u8, S191L_SPEC>;
        impl S191L {
            #[doc = "0 No write protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 Write protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconwoPi0_SPEC;
    impl crate::sealed::RegSpec for HpProconwoPi0_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 0\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconwoPi0 = crate::RegValueT<HpProconwoPi0_SPEC>;

    impl HpProconwoPi0 {
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s0wop(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconwopi0::S0Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconwopi0::S0Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s1wop(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconwopi0::S1Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconwopi0::S1Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s2wop(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconwopi0::S2Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconwopi0::S2Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s3wop(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconwopi0::S3Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconwopi0::S3Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s4wop(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconwopi0::S4Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconwopi0::S4Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s5wop(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconwopi0::S5Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconwopi0::S5Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s6wop(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconwopi0::S6Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconwopi0::S6Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s7wop(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconwopi0::S7Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconwopi0::S7Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s8wop(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconwopi0::S8Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconwopi0::S8Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s9wop(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconwopi0::S9Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconwopi0::S9Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s10wop(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconwopi0::S10Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconwopi0::S10Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s11wop(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconwopi0::S11Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconwopi0::S11Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s12wop(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconwopi0::S12Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconwopi0::S12Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s13wop(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconwopi0::S13Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconwopi0::S13Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s14wop(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconwopi0::S14Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconwopi0::S14Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s15wop(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconwopi0::S15Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconwopi0::S15Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s16wop(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconwopi0::S16Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconwopi0::S16Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s17wop(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconwopi0::S17Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconwopi0::S17Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s18wop(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconwopi0::S18Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconwopi0::S18Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s19wop(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconwopi0::S19Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconwopi0::S19Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s20wop(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconwopi0::S20Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconwopi0::S20Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s21wop(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconwopi0::S21Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconwopi0::S21Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s22wop(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconwopi0::S22Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconwopi0::S22Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s23wop(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconwopi0::S23Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconwopi0::S23Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s24wop(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconwopi0::S24Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconwopi0::S24Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s25wop(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconwopi0::S25Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconwopi0::S25Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s26wop(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconwopi0::S26Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconwopi0::S26Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s27wop(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconwopi0::S27Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconwopi0::S27Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s28wop(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconwopi0::S28Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconwopi0::S28Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s29wop(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconwopi0::S29Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconwopi0::S29Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s30wop(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconwopi0::S30Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconwopi0::S30Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 31 Configured for Write Once Protection   S31WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s31wop(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconwopi0::S31Wop,
            HpProconwoPi0_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconwopi0::S31Wop,
                HpProconwoPi0_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconwoPi0 {
        #[inline(always)]
        fn default() -> HpProconwoPi0 {
            <crate::RegValueT<HpProconwoPi0_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconwopi0 {
        pub struct S0Wop_SPEC;
        pub type S0Wop = crate::EnumBitfieldStruct<u8, S0Wop_SPEC>;
        impl S0Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S1Wop_SPEC;
        pub type S1Wop = crate::EnumBitfieldStruct<u8, S1Wop_SPEC>;
        impl S1Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S2Wop_SPEC;
        pub type S2Wop = crate::EnumBitfieldStruct<u8, S2Wop_SPEC>;
        impl S2Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S3Wop_SPEC;
        pub type S3Wop = crate::EnumBitfieldStruct<u8, S3Wop_SPEC>;
        impl S3Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S4Wop_SPEC;
        pub type S4Wop = crate::EnumBitfieldStruct<u8, S4Wop_SPEC>;
        impl S4Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S5Wop_SPEC;
        pub type S5Wop = crate::EnumBitfieldStruct<u8, S5Wop_SPEC>;
        impl S5Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S6Wop_SPEC;
        pub type S6Wop = crate::EnumBitfieldStruct<u8, S6Wop_SPEC>;
        impl S6Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S7Wop_SPEC;
        pub type S7Wop = crate::EnumBitfieldStruct<u8, S7Wop_SPEC>;
        impl S7Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S8Wop_SPEC;
        pub type S8Wop = crate::EnumBitfieldStruct<u8, S8Wop_SPEC>;
        impl S8Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S9Wop_SPEC;
        pub type S9Wop = crate::EnumBitfieldStruct<u8, S9Wop_SPEC>;
        impl S9Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S10Wop_SPEC;
        pub type S10Wop = crate::EnumBitfieldStruct<u8, S10Wop_SPEC>;
        impl S10Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S11Wop_SPEC;
        pub type S11Wop = crate::EnumBitfieldStruct<u8, S11Wop_SPEC>;
        impl S11Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S12Wop_SPEC;
        pub type S12Wop = crate::EnumBitfieldStruct<u8, S12Wop_SPEC>;
        impl S12Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S13Wop_SPEC;
        pub type S13Wop = crate::EnumBitfieldStruct<u8, S13Wop_SPEC>;
        impl S13Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S14Wop_SPEC;
        pub type S14Wop = crate::EnumBitfieldStruct<u8, S14Wop_SPEC>;
        impl S14Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S15Wop_SPEC;
        pub type S15Wop = crate::EnumBitfieldStruct<u8, S15Wop_SPEC>;
        impl S15Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S16Wop_SPEC;
        pub type S16Wop = crate::EnumBitfieldStruct<u8, S16Wop_SPEC>;
        impl S16Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S17Wop_SPEC;
        pub type S17Wop = crate::EnumBitfieldStruct<u8, S17Wop_SPEC>;
        impl S17Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S18Wop_SPEC;
        pub type S18Wop = crate::EnumBitfieldStruct<u8, S18Wop_SPEC>;
        impl S18Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S19Wop_SPEC;
        pub type S19Wop = crate::EnumBitfieldStruct<u8, S19Wop_SPEC>;
        impl S19Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S20Wop_SPEC;
        pub type S20Wop = crate::EnumBitfieldStruct<u8, S20Wop_SPEC>;
        impl S20Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S21Wop_SPEC;
        pub type S21Wop = crate::EnumBitfieldStruct<u8, S21Wop_SPEC>;
        impl S21Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S22Wop_SPEC;
        pub type S22Wop = crate::EnumBitfieldStruct<u8, S22Wop_SPEC>;
        impl S22Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S23Wop_SPEC;
        pub type S23Wop = crate::EnumBitfieldStruct<u8, S23Wop_SPEC>;
        impl S23Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S24Wop_SPEC;
        pub type S24Wop = crate::EnumBitfieldStruct<u8, S24Wop_SPEC>;
        impl S24Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S25Wop_SPEC;
        pub type S25Wop = crate::EnumBitfieldStruct<u8, S25Wop_SPEC>;
        impl S25Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S26Wop_SPEC;
        pub type S26Wop = crate::EnumBitfieldStruct<u8, S26Wop_SPEC>;
        impl S26Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S27Wop_SPEC;
        pub type S27Wop = crate::EnumBitfieldStruct<u8, S27Wop_SPEC>;
        impl S27Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S28Wop_SPEC;
        pub type S28Wop = crate::EnumBitfieldStruct<u8, S28Wop_SPEC>;
        impl S28Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S29Wop_SPEC;
        pub type S29Wop = crate::EnumBitfieldStruct<u8, S29Wop_SPEC>;
        impl S29Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S30Wop_SPEC;
        pub type S30Wop = crate::EnumBitfieldStruct<u8, S30Wop_SPEC>;
        impl S30Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S31Wop_SPEC;
        pub type S31Wop = crate::EnumBitfieldStruct<u8, S31Wop_SPEC>;
        impl S31Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconwoPi1_SPEC;
    impl crate::sealed::RegSpec for HpProconwoPi1_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 1\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconwoPi1 = crate::RegValueT<HpProconwoPi1_SPEC>;

    impl HpProconwoPi1 {
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s32wop(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconwopi1::S32Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconwopi1::S32Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s33wop(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconwopi1::S33Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconwopi1::S33Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s34wop(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconwopi1::S34Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconwopi1::S34Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s35wop(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconwopi1::S35Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconwopi1::S35Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s36wop(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconwopi1::S36Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconwopi1::S36Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s37wop(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconwopi1::S37Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconwopi1::S37Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s38wop(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconwopi1::S38Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconwopi1::S38Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s39wop(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconwopi1::S39Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconwopi1::S39Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s40wop(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconwopi1::S40Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconwopi1::S40Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s41wop(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconwopi1::S41Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconwopi1::S41Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s42wop(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconwopi1::S42Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconwopi1::S42Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s43wop(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconwopi1::S43Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconwopi1::S43Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s44wop(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconwopi1::S44Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconwopi1::S44Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s45wop(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconwopi1::S45Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconwopi1::S45Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s46wop(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconwopi1::S46Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconwopi1::S46Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s47wop(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconwopi1::S47Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconwopi1::S47Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s48wop(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconwopi1::S48Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconwopi1::S48Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s49wop(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconwopi1::S49Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconwopi1::S49Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s50wop(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconwopi1::S50Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconwopi1::S50Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s51wop(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconwopi1::S51Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconwopi1::S51Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s52wop(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconwopi1::S52Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconwopi1::S52Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s53wop(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconwopi1::S53Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconwopi1::S53Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s54wop(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconwopi1::S54Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconwopi1::S54Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s55wop(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconwopi1::S55Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconwopi1::S55Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s56wop(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconwopi1::S56Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconwopi1::S56Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s57wop(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconwopi1::S57Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconwopi1::S57Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s58wop(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconwopi1::S58Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconwopi1::S58Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s59wop(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconwopi1::S59Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconwopi1::S59Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s60wop(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconwopi1::S60Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconwopi1::S60Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s61wop(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconwopi1::S61Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconwopi1::S61Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s62wop(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconwopi1::S62Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconwopi1::S62Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 63 Configured for Write Once Protection   S63WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s63wop(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconwopi1::S63Wop,
            HpProconwoPi1_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconwopi1::S63Wop,
                HpProconwoPi1_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconwoPi1 {
        #[inline(always)]
        fn default() -> HpProconwoPi1 {
            <crate::RegValueT<HpProconwoPi1_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconwopi1 {
        pub struct S32Wop_SPEC;
        pub type S32Wop = crate::EnumBitfieldStruct<u8, S32Wop_SPEC>;
        impl S32Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S33Wop_SPEC;
        pub type S33Wop = crate::EnumBitfieldStruct<u8, S33Wop_SPEC>;
        impl S33Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S34Wop_SPEC;
        pub type S34Wop = crate::EnumBitfieldStruct<u8, S34Wop_SPEC>;
        impl S34Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S35Wop_SPEC;
        pub type S35Wop = crate::EnumBitfieldStruct<u8, S35Wop_SPEC>;
        impl S35Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S36Wop_SPEC;
        pub type S36Wop = crate::EnumBitfieldStruct<u8, S36Wop_SPEC>;
        impl S36Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S37Wop_SPEC;
        pub type S37Wop = crate::EnumBitfieldStruct<u8, S37Wop_SPEC>;
        impl S37Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S38Wop_SPEC;
        pub type S38Wop = crate::EnumBitfieldStruct<u8, S38Wop_SPEC>;
        impl S38Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S39Wop_SPEC;
        pub type S39Wop = crate::EnumBitfieldStruct<u8, S39Wop_SPEC>;
        impl S39Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S40Wop_SPEC;
        pub type S40Wop = crate::EnumBitfieldStruct<u8, S40Wop_SPEC>;
        impl S40Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S41Wop_SPEC;
        pub type S41Wop = crate::EnumBitfieldStruct<u8, S41Wop_SPEC>;
        impl S41Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S42Wop_SPEC;
        pub type S42Wop = crate::EnumBitfieldStruct<u8, S42Wop_SPEC>;
        impl S42Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S43Wop_SPEC;
        pub type S43Wop = crate::EnumBitfieldStruct<u8, S43Wop_SPEC>;
        impl S43Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S44Wop_SPEC;
        pub type S44Wop = crate::EnumBitfieldStruct<u8, S44Wop_SPEC>;
        impl S44Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S45Wop_SPEC;
        pub type S45Wop = crate::EnumBitfieldStruct<u8, S45Wop_SPEC>;
        impl S45Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S46Wop_SPEC;
        pub type S46Wop = crate::EnumBitfieldStruct<u8, S46Wop_SPEC>;
        impl S46Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S47Wop_SPEC;
        pub type S47Wop = crate::EnumBitfieldStruct<u8, S47Wop_SPEC>;
        impl S47Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S48Wop_SPEC;
        pub type S48Wop = crate::EnumBitfieldStruct<u8, S48Wop_SPEC>;
        impl S48Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S49Wop_SPEC;
        pub type S49Wop = crate::EnumBitfieldStruct<u8, S49Wop_SPEC>;
        impl S49Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S50Wop_SPEC;
        pub type S50Wop = crate::EnumBitfieldStruct<u8, S50Wop_SPEC>;
        impl S50Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S51Wop_SPEC;
        pub type S51Wop = crate::EnumBitfieldStruct<u8, S51Wop_SPEC>;
        impl S51Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S52Wop_SPEC;
        pub type S52Wop = crate::EnumBitfieldStruct<u8, S52Wop_SPEC>;
        impl S52Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S53Wop_SPEC;
        pub type S53Wop = crate::EnumBitfieldStruct<u8, S53Wop_SPEC>;
        impl S53Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S54Wop_SPEC;
        pub type S54Wop = crate::EnumBitfieldStruct<u8, S54Wop_SPEC>;
        impl S54Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S55Wop_SPEC;
        pub type S55Wop = crate::EnumBitfieldStruct<u8, S55Wop_SPEC>;
        impl S55Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S56Wop_SPEC;
        pub type S56Wop = crate::EnumBitfieldStruct<u8, S56Wop_SPEC>;
        impl S56Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S57Wop_SPEC;
        pub type S57Wop = crate::EnumBitfieldStruct<u8, S57Wop_SPEC>;
        impl S57Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S58Wop_SPEC;
        pub type S58Wop = crate::EnumBitfieldStruct<u8, S58Wop_SPEC>;
        impl S58Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S59Wop_SPEC;
        pub type S59Wop = crate::EnumBitfieldStruct<u8, S59Wop_SPEC>;
        impl S59Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S60Wop_SPEC;
        pub type S60Wop = crate::EnumBitfieldStruct<u8, S60Wop_SPEC>;
        impl S60Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S61Wop_SPEC;
        pub type S61Wop = crate::EnumBitfieldStruct<u8, S61Wop_SPEC>;
        impl S61Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S62Wop_SPEC;
        pub type S62Wop = crate::EnumBitfieldStruct<u8, S62Wop_SPEC>;
        impl S62Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S63Wop_SPEC;
        pub type S63Wop = crate::EnumBitfieldStruct<u8, S63Wop_SPEC>;
        impl S63Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconwoPi2_SPEC;
    impl crate::sealed::RegSpec for HpProconwoPi2_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 2\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconwoPi2 = crate::RegValueT<HpProconwoPi2_SPEC>;

    impl HpProconwoPi2 {
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s64wop(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconwopi2::S64Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconwopi2::S64Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s65wop(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconwopi2::S65Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconwopi2::S65Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s66wop(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconwopi2::S66Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconwopi2::S66Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s67wop(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconwopi2::S67Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconwopi2::S67Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s68wop(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconwopi2::S68Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconwopi2::S68Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s69wop(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconwopi2::S69Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconwopi2::S69Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s70wop(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconwopi2::S70Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconwopi2::S70Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s71wop(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconwopi2::S71Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconwopi2::S71Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s72wop(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconwopi2::S72Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconwopi2::S72Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s73wop(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconwopi2::S73Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconwopi2::S73Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s74wop(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconwopi2::S74Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconwopi2::S74Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s75wop(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconwopi2::S75Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconwopi2::S75Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s76wop(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconwopi2::S76Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconwopi2::S76Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s77wop(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconwopi2::S77Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconwopi2::S77Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s78wop(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconwopi2::S78Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconwopi2::S78Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s79wop(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconwopi2::S79Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconwopi2::S79Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s80wop(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconwopi2::S80Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconwopi2::S80Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s81wop(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconwopi2::S81Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconwopi2::S81Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s82wop(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconwopi2::S82Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconwopi2::S82Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s83wop(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconwopi2::S83Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconwopi2::S83Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s84wop(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconwopi2::S84Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconwopi2::S84Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s85wop(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconwopi2::S85Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconwopi2::S85Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s86wop(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconwopi2::S86Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconwopi2::S86Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s87wop(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconwopi2::S87Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconwopi2::S87Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s88wop(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconwopi2::S88Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconwopi2::S88Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s89wop(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconwopi2::S89Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconwopi2::S89Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s90wop(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconwopi2::S90Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconwopi2::S90Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s91wop(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconwopi2::S91Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconwopi2::S91Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s92wop(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconwopi2::S92Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconwopi2::S92Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s93wop(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconwopi2::S93Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconwopi2::S93Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s94wop(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconwopi2::S94Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconwopi2::S94Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 95 Configured for Write Once Protection   S95WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s95wop(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconwopi2::S95Wop,
            HpProconwoPi2_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconwopi2::S95Wop,
                HpProconwoPi2_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconwoPi2 {
        #[inline(always)]
        fn default() -> HpProconwoPi2 {
            <crate::RegValueT<HpProconwoPi2_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconwopi2 {
        pub struct S64Wop_SPEC;
        pub type S64Wop = crate::EnumBitfieldStruct<u8, S64Wop_SPEC>;
        impl S64Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S65Wop_SPEC;
        pub type S65Wop = crate::EnumBitfieldStruct<u8, S65Wop_SPEC>;
        impl S65Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S66Wop_SPEC;
        pub type S66Wop = crate::EnumBitfieldStruct<u8, S66Wop_SPEC>;
        impl S66Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S67Wop_SPEC;
        pub type S67Wop = crate::EnumBitfieldStruct<u8, S67Wop_SPEC>;
        impl S67Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S68Wop_SPEC;
        pub type S68Wop = crate::EnumBitfieldStruct<u8, S68Wop_SPEC>;
        impl S68Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S69Wop_SPEC;
        pub type S69Wop = crate::EnumBitfieldStruct<u8, S69Wop_SPEC>;
        impl S69Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S70Wop_SPEC;
        pub type S70Wop = crate::EnumBitfieldStruct<u8, S70Wop_SPEC>;
        impl S70Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S71Wop_SPEC;
        pub type S71Wop = crate::EnumBitfieldStruct<u8, S71Wop_SPEC>;
        impl S71Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S72Wop_SPEC;
        pub type S72Wop = crate::EnumBitfieldStruct<u8, S72Wop_SPEC>;
        impl S72Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S73Wop_SPEC;
        pub type S73Wop = crate::EnumBitfieldStruct<u8, S73Wop_SPEC>;
        impl S73Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S74Wop_SPEC;
        pub type S74Wop = crate::EnumBitfieldStruct<u8, S74Wop_SPEC>;
        impl S74Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S75Wop_SPEC;
        pub type S75Wop = crate::EnumBitfieldStruct<u8, S75Wop_SPEC>;
        impl S75Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S76Wop_SPEC;
        pub type S76Wop = crate::EnumBitfieldStruct<u8, S76Wop_SPEC>;
        impl S76Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S77Wop_SPEC;
        pub type S77Wop = crate::EnumBitfieldStruct<u8, S77Wop_SPEC>;
        impl S77Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S78Wop_SPEC;
        pub type S78Wop = crate::EnumBitfieldStruct<u8, S78Wop_SPEC>;
        impl S78Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S79Wop_SPEC;
        pub type S79Wop = crate::EnumBitfieldStruct<u8, S79Wop_SPEC>;
        impl S79Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S80Wop_SPEC;
        pub type S80Wop = crate::EnumBitfieldStruct<u8, S80Wop_SPEC>;
        impl S80Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S81Wop_SPEC;
        pub type S81Wop = crate::EnumBitfieldStruct<u8, S81Wop_SPEC>;
        impl S81Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S82Wop_SPEC;
        pub type S82Wop = crate::EnumBitfieldStruct<u8, S82Wop_SPEC>;
        impl S82Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S83Wop_SPEC;
        pub type S83Wop = crate::EnumBitfieldStruct<u8, S83Wop_SPEC>;
        impl S83Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S84Wop_SPEC;
        pub type S84Wop = crate::EnumBitfieldStruct<u8, S84Wop_SPEC>;
        impl S84Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S85Wop_SPEC;
        pub type S85Wop = crate::EnumBitfieldStruct<u8, S85Wop_SPEC>;
        impl S85Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S86Wop_SPEC;
        pub type S86Wop = crate::EnumBitfieldStruct<u8, S86Wop_SPEC>;
        impl S86Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S87Wop_SPEC;
        pub type S87Wop = crate::EnumBitfieldStruct<u8, S87Wop_SPEC>;
        impl S87Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S88Wop_SPEC;
        pub type S88Wop = crate::EnumBitfieldStruct<u8, S88Wop_SPEC>;
        impl S88Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S89Wop_SPEC;
        pub type S89Wop = crate::EnumBitfieldStruct<u8, S89Wop_SPEC>;
        impl S89Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S90Wop_SPEC;
        pub type S90Wop = crate::EnumBitfieldStruct<u8, S90Wop_SPEC>;
        impl S90Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S91Wop_SPEC;
        pub type S91Wop = crate::EnumBitfieldStruct<u8, S91Wop_SPEC>;
        impl S91Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S92Wop_SPEC;
        pub type S92Wop = crate::EnumBitfieldStruct<u8, S92Wop_SPEC>;
        impl S92Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S93Wop_SPEC;
        pub type S93Wop = crate::EnumBitfieldStruct<u8, S93Wop_SPEC>;
        impl S93Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S94Wop_SPEC;
        pub type S94Wop = crate::EnumBitfieldStruct<u8, S94Wop_SPEC>;
        impl S94Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S95Wop_SPEC;
        pub type S95Wop = crate::EnumBitfieldStruct<u8, S95Wop_SPEC>;
        impl S95Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconwoPi3_SPEC;
    impl crate::sealed::RegSpec for HpProconwoPi3_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 3\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconwoPi3 = crate::RegValueT<HpProconwoPi3_SPEC>;

    impl HpProconwoPi3 {
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s96wop(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconwopi3::S96Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconwopi3::S96Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s97wop(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconwopi3::S97Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconwopi3::S97Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s98wop(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconwopi3::S98Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconwopi3::S98Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s99wop(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconwopi3::S99Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconwopi3::S99Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s100wop(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconwopi3::S100Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconwopi3::S100Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s101wop(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconwopi3::S101Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconwopi3::S101Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s102wop(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconwopi3::S102Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconwopi3::S102Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s103wop(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconwopi3::S103Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconwopi3::S103Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s104wop(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconwopi3::S104Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconwopi3::S104Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s105wop(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconwopi3::S105Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconwopi3::S105Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s106wop(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconwopi3::S106Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconwopi3::S106Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s107wop(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconwopi3::S107Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconwopi3::S107Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s108wop(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconwopi3::S108Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconwopi3::S108Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s109wop(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconwopi3::S109Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconwopi3::S109Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s110wop(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconwopi3::S110Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconwopi3::S110Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s111wop(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconwopi3::S111Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconwopi3::S111Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s112wop(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconwopi3::S112Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconwopi3::S112Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s113wop(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconwopi3::S113Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconwopi3::S113Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s114wop(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconwopi3::S114Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconwopi3::S114Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s115wop(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconwopi3::S115Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconwopi3::S115Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s116wop(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconwopi3::S116Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconwopi3::S116Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s117wop(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconwopi3::S117Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconwopi3::S117Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s118wop(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconwopi3::S118Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconwopi3::S118Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s119wop(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconwopi3::S119Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconwopi3::S119Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s120wop(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconwopi3::S120Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconwopi3::S120Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s121wop(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconwopi3::S121Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconwopi3::S121Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s122wop(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconwopi3::S122Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconwopi3::S122Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s123wop(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconwopi3::S123Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconwopi3::S123Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s124wop(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconwopi3::S124Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconwopi3::S124Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s125wop(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconwopi3::S125Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconwopi3::S125Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s126wop(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconwopi3::S126Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconwopi3::S126Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 127 Configured for Write Once Protection   S127WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s127wop(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconwopi3::S127Wop,
            HpProconwoPi3_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconwopi3::S127Wop,
                HpProconwoPi3_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconwoPi3 {
        #[inline(always)]
        fn default() -> HpProconwoPi3 {
            <crate::RegValueT<HpProconwoPi3_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconwopi3 {
        pub struct S96Wop_SPEC;
        pub type S96Wop = crate::EnumBitfieldStruct<u8, S96Wop_SPEC>;
        impl S96Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S97Wop_SPEC;
        pub type S97Wop = crate::EnumBitfieldStruct<u8, S97Wop_SPEC>;
        impl S97Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S98Wop_SPEC;
        pub type S98Wop = crate::EnumBitfieldStruct<u8, S98Wop_SPEC>;
        impl S98Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S99Wop_SPEC;
        pub type S99Wop = crate::EnumBitfieldStruct<u8, S99Wop_SPEC>;
        impl S99Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S100Wop_SPEC;
        pub type S100Wop = crate::EnumBitfieldStruct<u8, S100Wop_SPEC>;
        impl S100Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S101Wop_SPEC;
        pub type S101Wop = crate::EnumBitfieldStruct<u8, S101Wop_SPEC>;
        impl S101Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S102Wop_SPEC;
        pub type S102Wop = crate::EnumBitfieldStruct<u8, S102Wop_SPEC>;
        impl S102Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S103Wop_SPEC;
        pub type S103Wop = crate::EnumBitfieldStruct<u8, S103Wop_SPEC>;
        impl S103Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S104Wop_SPEC;
        pub type S104Wop = crate::EnumBitfieldStruct<u8, S104Wop_SPEC>;
        impl S104Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S105Wop_SPEC;
        pub type S105Wop = crate::EnumBitfieldStruct<u8, S105Wop_SPEC>;
        impl S105Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S106Wop_SPEC;
        pub type S106Wop = crate::EnumBitfieldStruct<u8, S106Wop_SPEC>;
        impl S106Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S107Wop_SPEC;
        pub type S107Wop = crate::EnumBitfieldStruct<u8, S107Wop_SPEC>;
        impl S107Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S108Wop_SPEC;
        pub type S108Wop = crate::EnumBitfieldStruct<u8, S108Wop_SPEC>;
        impl S108Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S109Wop_SPEC;
        pub type S109Wop = crate::EnumBitfieldStruct<u8, S109Wop_SPEC>;
        impl S109Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S110Wop_SPEC;
        pub type S110Wop = crate::EnumBitfieldStruct<u8, S110Wop_SPEC>;
        impl S110Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S111Wop_SPEC;
        pub type S111Wop = crate::EnumBitfieldStruct<u8, S111Wop_SPEC>;
        impl S111Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S112Wop_SPEC;
        pub type S112Wop = crate::EnumBitfieldStruct<u8, S112Wop_SPEC>;
        impl S112Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S113Wop_SPEC;
        pub type S113Wop = crate::EnumBitfieldStruct<u8, S113Wop_SPEC>;
        impl S113Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S114Wop_SPEC;
        pub type S114Wop = crate::EnumBitfieldStruct<u8, S114Wop_SPEC>;
        impl S114Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S115Wop_SPEC;
        pub type S115Wop = crate::EnumBitfieldStruct<u8, S115Wop_SPEC>;
        impl S115Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S116Wop_SPEC;
        pub type S116Wop = crate::EnumBitfieldStruct<u8, S116Wop_SPEC>;
        impl S116Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S117Wop_SPEC;
        pub type S117Wop = crate::EnumBitfieldStruct<u8, S117Wop_SPEC>;
        impl S117Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S118Wop_SPEC;
        pub type S118Wop = crate::EnumBitfieldStruct<u8, S118Wop_SPEC>;
        impl S118Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S119Wop_SPEC;
        pub type S119Wop = crate::EnumBitfieldStruct<u8, S119Wop_SPEC>;
        impl S119Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S120Wop_SPEC;
        pub type S120Wop = crate::EnumBitfieldStruct<u8, S120Wop_SPEC>;
        impl S120Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S121Wop_SPEC;
        pub type S121Wop = crate::EnumBitfieldStruct<u8, S121Wop_SPEC>;
        impl S121Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S122Wop_SPEC;
        pub type S122Wop = crate::EnumBitfieldStruct<u8, S122Wop_SPEC>;
        impl S122Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S123Wop_SPEC;
        pub type S123Wop = crate::EnumBitfieldStruct<u8, S123Wop_SPEC>;
        impl S123Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S124Wop_SPEC;
        pub type S124Wop = crate::EnumBitfieldStruct<u8, S124Wop_SPEC>;
        impl S124Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S125Wop_SPEC;
        pub type S125Wop = crate::EnumBitfieldStruct<u8, S125Wop_SPEC>;
        impl S125Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S126Wop_SPEC;
        pub type S126Wop = crate::EnumBitfieldStruct<u8, S126Wop_SPEC>;
        impl S126Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S127Wop_SPEC;
        pub type S127Wop = crate::EnumBitfieldStruct<u8, S127Wop_SPEC>;
        impl S127Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconwoPi4_SPEC;
    impl crate::sealed::RegSpec for HpProconwoPi4_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 4\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconwoPi4 = crate::RegValueT<HpProconwoPi4_SPEC>;

    impl HpProconwoPi4 {
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s128wop(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconwopi4::S128Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconwopi4::S128Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s129wop(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconwopi4::S129Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconwopi4::S129Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s130wop(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconwopi4::S130Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconwopi4::S130Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s131wop(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconwopi4::S131Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconwopi4::S131Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s132wop(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconwopi4::S132Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconwopi4::S132Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s133wop(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconwopi4::S133Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconwopi4::S133Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s134wop(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconwopi4::S134Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconwopi4::S134Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s135wop(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconwopi4::S135Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconwopi4::S135Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s136wop(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconwopi4::S136Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconwopi4::S136Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s137wop(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconwopi4::S137Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconwopi4::S137Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s138wop(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconwopi4::S138Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconwopi4::S138Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s139wop(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconwopi4::S139Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconwopi4::S139Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s140wop(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconwopi4::S140Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconwopi4::S140Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s141wop(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconwopi4::S141Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconwopi4::S141Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s142wop(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconwopi4::S142Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconwopi4::S142Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s143wop(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconwopi4::S143Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconwopi4::S143Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s144wop(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconwopi4::S144Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconwopi4::S144Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s145wop(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconwopi4::S145Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconwopi4::S145Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s146wop(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconwopi4::S146Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconwopi4::S146Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s147wop(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconwopi4::S147Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconwopi4::S147Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s148wop(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconwopi4::S148Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconwopi4::S148Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s149wop(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconwopi4::S149Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconwopi4::S149Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s150wop(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconwopi4::S150Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconwopi4::S150Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s151wop(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconwopi4::S151Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconwopi4::S151Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s152wop(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconwopi4::S152Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconwopi4::S152Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s153wop(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconwopi4::S153Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconwopi4::S153Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s154wop(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconwopi4::S154Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconwopi4::S154Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s155wop(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconwopi4::S155Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconwopi4::S155Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s156wop(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconwopi4::S156Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconwopi4::S156Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s157wop(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconwopi4::S157Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconwopi4::S157Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s158wop(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconwopi4::S158Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconwopi4::S158Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 159 Configured for Write Once Protection   S159WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s159wop(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconwopi4::S159Wop,
            HpProconwoPi4_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconwopi4::S159Wop,
                HpProconwoPi4_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconwoPi4 {
        #[inline(always)]
        fn default() -> HpProconwoPi4 {
            <crate::RegValueT<HpProconwoPi4_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconwopi4 {
        pub struct S128Wop_SPEC;
        pub type S128Wop = crate::EnumBitfieldStruct<u8, S128Wop_SPEC>;
        impl S128Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S129Wop_SPEC;
        pub type S129Wop = crate::EnumBitfieldStruct<u8, S129Wop_SPEC>;
        impl S129Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S130Wop_SPEC;
        pub type S130Wop = crate::EnumBitfieldStruct<u8, S130Wop_SPEC>;
        impl S130Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S131Wop_SPEC;
        pub type S131Wop = crate::EnumBitfieldStruct<u8, S131Wop_SPEC>;
        impl S131Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S132Wop_SPEC;
        pub type S132Wop = crate::EnumBitfieldStruct<u8, S132Wop_SPEC>;
        impl S132Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S133Wop_SPEC;
        pub type S133Wop = crate::EnumBitfieldStruct<u8, S133Wop_SPEC>;
        impl S133Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S134Wop_SPEC;
        pub type S134Wop = crate::EnumBitfieldStruct<u8, S134Wop_SPEC>;
        impl S134Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S135Wop_SPEC;
        pub type S135Wop = crate::EnumBitfieldStruct<u8, S135Wop_SPEC>;
        impl S135Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S136Wop_SPEC;
        pub type S136Wop = crate::EnumBitfieldStruct<u8, S136Wop_SPEC>;
        impl S136Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S137Wop_SPEC;
        pub type S137Wop = crate::EnumBitfieldStruct<u8, S137Wop_SPEC>;
        impl S137Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S138Wop_SPEC;
        pub type S138Wop = crate::EnumBitfieldStruct<u8, S138Wop_SPEC>;
        impl S138Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S139Wop_SPEC;
        pub type S139Wop = crate::EnumBitfieldStruct<u8, S139Wop_SPEC>;
        impl S139Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S140Wop_SPEC;
        pub type S140Wop = crate::EnumBitfieldStruct<u8, S140Wop_SPEC>;
        impl S140Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S141Wop_SPEC;
        pub type S141Wop = crate::EnumBitfieldStruct<u8, S141Wop_SPEC>;
        impl S141Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S142Wop_SPEC;
        pub type S142Wop = crate::EnumBitfieldStruct<u8, S142Wop_SPEC>;
        impl S142Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S143Wop_SPEC;
        pub type S143Wop = crate::EnumBitfieldStruct<u8, S143Wop_SPEC>;
        impl S143Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S144Wop_SPEC;
        pub type S144Wop = crate::EnumBitfieldStruct<u8, S144Wop_SPEC>;
        impl S144Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S145Wop_SPEC;
        pub type S145Wop = crate::EnumBitfieldStruct<u8, S145Wop_SPEC>;
        impl S145Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S146Wop_SPEC;
        pub type S146Wop = crate::EnumBitfieldStruct<u8, S146Wop_SPEC>;
        impl S146Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S147Wop_SPEC;
        pub type S147Wop = crate::EnumBitfieldStruct<u8, S147Wop_SPEC>;
        impl S147Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S148Wop_SPEC;
        pub type S148Wop = crate::EnumBitfieldStruct<u8, S148Wop_SPEC>;
        impl S148Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S149Wop_SPEC;
        pub type S149Wop = crate::EnumBitfieldStruct<u8, S149Wop_SPEC>;
        impl S149Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S150Wop_SPEC;
        pub type S150Wop = crate::EnumBitfieldStruct<u8, S150Wop_SPEC>;
        impl S150Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S151Wop_SPEC;
        pub type S151Wop = crate::EnumBitfieldStruct<u8, S151Wop_SPEC>;
        impl S151Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S152Wop_SPEC;
        pub type S152Wop = crate::EnumBitfieldStruct<u8, S152Wop_SPEC>;
        impl S152Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S153Wop_SPEC;
        pub type S153Wop = crate::EnumBitfieldStruct<u8, S153Wop_SPEC>;
        impl S153Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S154Wop_SPEC;
        pub type S154Wop = crate::EnumBitfieldStruct<u8, S154Wop_SPEC>;
        impl S154Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S155Wop_SPEC;
        pub type S155Wop = crate::EnumBitfieldStruct<u8, S155Wop_SPEC>;
        impl S155Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S156Wop_SPEC;
        pub type S156Wop = crate::EnumBitfieldStruct<u8, S156Wop_SPEC>;
        impl S156Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S157Wop_SPEC;
        pub type S157Wop = crate::EnumBitfieldStruct<u8, S157Wop_SPEC>;
        impl S157Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S158Wop_SPEC;
        pub type S158Wop = crate::EnumBitfieldStruct<u8, S158Wop_SPEC>;
        impl S158Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S159Wop_SPEC;
        pub type S159Wop = crate::EnumBitfieldStruct<u8, S159Wop_SPEC>;
        impl S159Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
    #[doc(hidden)]
    #[derive(Copy, Clone, Eq, PartialEq)]
    pub struct HpProconwoPi5_SPEC;
    impl crate::sealed::RegSpec for HpProconwoPi5_SPEC {
        type DataType = u32;
    }
    #[doc = "PFLASH Bank 0 WOP Configuration 5\n resetvalue={Application Reset:0x0,CFS Value:0x0}"]
    pub type HpProconwoPi5 = crate::RegValueT<HpProconwoPi5_SPEC>;

    impl HpProconwoPi5 {
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s160wop(
            self,
        ) -> crate::common::RegisterField<
            0,
            0x1,
            1,
            0,
            hp_proconwopi5::S160Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                0,
                0x1,
                1,
                0,
                hp_proconwopi5::S160Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s161wop(
            self,
        ) -> crate::common::RegisterField<
            1,
            0x1,
            1,
            0,
            hp_proconwopi5::S161Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                1,
                0x1,
                1,
                0,
                hp_proconwopi5::S161Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s162wop(
            self,
        ) -> crate::common::RegisterField<
            2,
            0x1,
            1,
            0,
            hp_proconwopi5::S162Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                2,
                0x1,
                1,
                0,
                hp_proconwopi5::S162Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s163wop(
            self,
        ) -> crate::common::RegisterField<
            3,
            0x1,
            1,
            0,
            hp_proconwopi5::S163Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                3,
                0x1,
                1,
                0,
                hp_proconwopi5::S163Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s164wop(
            self,
        ) -> crate::common::RegisterField<
            4,
            0x1,
            1,
            0,
            hp_proconwopi5::S164Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                4,
                0x1,
                1,
                0,
                hp_proconwopi5::S164Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s165wop(
            self,
        ) -> crate::common::RegisterField<
            5,
            0x1,
            1,
            0,
            hp_proconwopi5::S165Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                5,
                0x1,
                1,
                0,
                hp_proconwopi5::S165Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s166wop(
            self,
        ) -> crate::common::RegisterField<
            6,
            0x1,
            1,
            0,
            hp_proconwopi5::S166Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                6,
                0x1,
                1,
                0,
                hp_proconwopi5::S166Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s167wop(
            self,
        ) -> crate::common::RegisterField<
            7,
            0x1,
            1,
            0,
            hp_proconwopi5::S167Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                7,
                0x1,
                1,
                0,
                hp_proconwopi5::S167Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s168wop(
            self,
        ) -> crate::common::RegisterField<
            8,
            0x1,
            1,
            0,
            hp_proconwopi5::S168Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                8,
                0x1,
                1,
                0,
                hp_proconwopi5::S168Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s169wop(
            self,
        ) -> crate::common::RegisterField<
            9,
            0x1,
            1,
            0,
            hp_proconwopi5::S169Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                9,
                0x1,
                1,
                0,
                hp_proconwopi5::S169Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s170wop(
            self,
        ) -> crate::common::RegisterField<
            10,
            0x1,
            1,
            0,
            hp_proconwopi5::S170Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                10,
                0x1,
                1,
                0,
                hp_proconwopi5::S170Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s171wop(
            self,
        ) -> crate::common::RegisterField<
            11,
            0x1,
            1,
            0,
            hp_proconwopi5::S171Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                11,
                0x1,
                1,
                0,
                hp_proconwopi5::S171Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s172wop(
            self,
        ) -> crate::common::RegisterField<
            12,
            0x1,
            1,
            0,
            hp_proconwopi5::S172Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                12,
                0x1,
                1,
                0,
                hp_proconwopi5::S172Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s173wop(
            self,
        ) -> crate::common::RegisterField<
            13,
            0x1,
            1,
            0,
            hp_proconwopi5::S173Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                13,
                0x1,
                1,
                0,
                hp_proconwopi5::S173Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s174wop(
            self,
        ) -> crate::common::RegisterField<
            14,
            0x1,
            1,
            0,
            hp_proconwopi5::S174Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                14,
                0x1,
                1,
                0,
                hp_proconwopi5::S174Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s175wop(
            self,
        ) -> crate::common::RegisterField<
            15,
            0x1,
            1,
            0,
            hp_proconwopi5::S175Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                15,
                0x1,
                1,
                0,
                hp_proconwopi5::S175Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s176wop(
            self,
        ) -> crate::common::RegisterField<
            16,
            0x1,
            1,
            0,
            hp_proconwopi5::S176Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                16,
                0x1,
                1,
                0,
                hp_proconwopi5::S176Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s177wop(
            self,
        ) -> crate::common::RegisterField<
            17,
            0x1,
            1,
            0,
            hp_proconwopi5::S177Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                17,
                0x1,
                1,
                0,
                hp_proconwopi5::S177Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s178wop(
            self,
        ) -> crate::common::RegisterField<
            18,
            0x1,
            1,
            0,
            hp_proconwopi5::S178Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                18,
                0x1,
                1,
                0,
                hp_proconwopi5::S178Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s179wop(
            self,
        ) -> crate::common::RegisterField<
            19,
            0x1,
            1,
            0,
            hp_proconwopi5::S179Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                19,
                0x1,
                1,
                0,
                hp_proconwopi5::S179Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s180wop(
            self,
        ) -> crate::common::RegisterField<
            20,
            0x1,
            1,
            0,
            hp_proconwopi5::S180Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                20,
                0x1,
                1,
                0,
                hp_proconwopi5::S180Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s181wop(
            self,
        ) -> crate::common::RegisterField<
            21,
            0x1,
            1,
            0,
            hp_proconwopi5::S181Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                21,
                0x1,
                1,
                0,
                hp_proconwopi5::S181Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s182wop(
            self,
        ) -> crate::common::RegisterField<
            22,
            0x1,
            1,
            0,
            hp_proconwopi5::S182Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                22,
                0x1,
                1,
                0,
                hp_proconwopi5::S182Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s183wop(
            self,
        ) -> crate::common::RegisterField<
            23,
            0x1,
            1,
            0,
            hp_proconwopi5::S183Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                23,
                0x1,
                1,
                0,
                hp_proconwopi5::S183Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s184wop(
            self,
        ) -> crate::common::RegisterField<
            24,
            0x1,
            1,
            0,
            hp_proconwopi5::S184Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                24,
                0x1,
                1,
                0,
                hp_proconwopi5::S184Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s185wop(
            self,
        ) -> crate::common::RegisterField<
            25,
            0x1,
            1,
            0,
            hp_proconwopi5::S185Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                25,
                0x1,
                1,
                0,
                hp_proconwopi5::S185Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s186wop(
            self,
        ) -> crate::common::RegisterField<
            26,
            0x1,
            1,
            0,
            hp_proconwopi5::S186Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                26,
                0x1,
                1,
                0,
                hp_proconwopi5::S186Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s187wop(
            self,
        ) -> crate::common::RegisterField<
            27,
            0x1,
            1,
            0,
            hp_proconwopi5::S187Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                27,
                0x1,
                1,
                0,
                hp_proconwopi5::S187Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s188wop(
            self,
        ) -> crate::common::RegisterField<
            28,
            0x1,
            1,
            0,
            hp_proconwopi5::S188Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                28,
                0x1,
                1,
                0,
                hp_proconwopi5::S188Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s189wop(
            self,
        ) -> crate::common::RegisterField<
            29,
            0x1,
            1,
            0,
            hp_proconwopi5::S189Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                29,
                0x1,
                1,
                0,
                hp_proconwopi5::S189Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s190wop(
            self,
        ) -> crate::common::RegisterField<
            30,
            0x1,
            1,
            0,
            hp_proconwopi5::S190Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                30,
                0x1,
                1,
                0,
                hp_proconwopi5::S190Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
        #[doc = "PFLASH p Sector 191 Configured for Write Once Protection   S191WOP. These bits indicate whether PFLASH p sector x is an WOP protected sector."]
        #[inline(always)]
        pub fn s191wop(
            self,
        ) -> crate::common::RegisterField<
            31,
            0x1,
            1,
            0,
            hp_proconwopi5::S191Wop,
            HpProconwoPi5_SPEC,
            crate::common::R,
        > {
            crate::common::RegisterField::<
                31,
                0x1,
                1,
                0,
                hp_proconwopi5::S191Wop,
                HpProconwoPi5_SPEC,
                crate::common::R,
            >::from_register(self, 0)
        }
    }
    impl core::default::Default for HpProconwoPi5 {
        #[inline(always)]
        fn default() -> HpProconwoPi5 {
            <crate::RegValueT<HpProconwoPi5_SPEC> as RegisterValue<_>>::new(0)
        }
    }
    pub mod hp_proconwopi5 {
        pub struct S160Wop_SPEC;
        pub type S160Wop = crate::EnumBitfieldStruct<u8, S160Wop_SPEC>;
        impl S160Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S161Wop_SPEC;
        pub type S161Wop = crate::EnumBitfieldStruct<u8, S161Wop_SPEC>;
        impl S161Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S162Wop_SPEC;
        pub type S162Wop = crate::EnumBitfieldStruct<u8, S162Wop_SPEC>;
        impl S162Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S163Wop_SPEC;
        pub type S163Wop = crate::EnumBitfieldStruct<u8, S163Wop_SPEC>;
        impl S163Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S164Wop_SPEC;
        pub type S164Wop = crate::EnumBitfieldStruct<u8, S164Wop_SPEC>;
        impl S164Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S165Wop_SPEC;
        pub type S165Wop = crate::EnumBitfieldStruct<u8, S165Wop_SPEC>;
        impl S165Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S166Wop_SPEC;
        pub type S166Wop = crate::EnumBitfieldStruct<u8, S166Wop_SPEC>;
        impl S166Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S167Wop_SPEC;
        pub type S167Wop = crate::EnumBitfieldStruct<u8, S167Wop_SPEC>;
        impl S167Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S168Wop_SPEC;
        pub type S168Wop = crate::EnumBitfieldStruct<u8, S168Wop_SPEC>;
        impl S168Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S169Wop_SPEC;
        pub type S169Wop = crate::EnumBitfieldStruct<u8, S169Wop_SPEC>;
        impl S169Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S170Wop_SPEC;
        pub type S170Wop = crate::EnumBitfieldStruct<u8, S170Wop_SPEC>;
        impl S170Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S171Wop_SPEC;
        pub type S171Wop = crate::EnumBitfieldStruct<u8, S171Wop_SPEC>;
        impl S171Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S172Wop_SPEC;
        pub type S172Wop = crate::EnumBitfieldStruct<u8, S172Wop_SPEC>;
        impl S172Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S173Wop_SPEC;
        pub type S173Wop = crate::EnumBitfieldStruct<u8, S173Wop_SPEC>;
        impl S173Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S174Wop_SPEC;
        pub type S174Wop = crate::EnumBitfieldStruct<u8, S174Wop_SPEC>;
        impl S174Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S175Wop_SPEC;
        pub type S175Wop = crate::EnumBitfieldStruct<u8, S175Wop_SPEC>;
        impl S175Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S176Wop_SPEC;
        pub type S176Wop = crate::EnumBitfieldStruct<u8, S176Wop_SPEC>;
        impl S176Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S177Wop_SPEC;
        pub type S177Wop = crate::EnumBitfieldStruct<u8, S177Wop_SPEC>;
        impl S177Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S178Wop_SPEC;
        pub type S178Wop = crate::EnumBitfieldStruct<u8, S178Wop_SPEC>;
        impl S178Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S179Wop_SPEC;
        pub type S179Wop = crate::EnumBitfieldStruct<u8, S179Wop_SPEC>;
        impl S179Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S180Wop_SPEC;
        pub type S180Wop = crate::EnumBitfieldStruct<u8, S180Wop_SPEC>;
        impl S180Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S181Wop_SPEC;
        pub type S181Wop = crate::EnumBitfieldStruct<u8, S181Wop_SPEC>;
        impl S181Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S182Wop_SPEC;
        pub type S182Wop = crate::EnumBitfieldStruct<u8, S182Wop_SPEC>;
        impl S182Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S183Wop_SPEC;
        pub type S183Wop = crate::EnumBitfieldStruct<u8, S183Wop_SPEC>;
        impl S183Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S184Wop_SPEC;
        pub type S184Wop = crate::EnumBitfieldStruct<u8, S184Wop_SPEC>;
        impl S184Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S185Wop_SPEC;
        pub type S185Wop = crate::EnumBitfieldStruct<u8, S185Wop_SPEC>;
        impl S185Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S186Wop_SPEC;
        pub type S186Wop = crate::EnumBitfieldStruct<u8, S186Wop_SPEC>;
        impl S186Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S187Wop_SPEC;
        pub type S187Wop = crate::EnumBitfieldStruct<u8, S187Wop_SPEC>;
        impl S187Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S188Wop_SPEC;
        pub type S188Wop = crate::EnumBitfieldStruct<u8, S188Wop_SPEC>;
        impl S188Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S189Wop_SPEC;
        pub type S189Wop = crate::EnumBitfieldStruct<u8, S189Wop_SPEC>;
        impl S189Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S190Wop_SPEC;
        pub type S190Wop = crate::EnumBitfieldStruct<u8, S190Wop_SPEC>;
        impl S190Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
        pub struct S191Wop_SPEC;
        pub type S191Wop = crate::EnumBitfieldStruct<u8, S191Wop_SPEC>;
        impl S191Wop {
            #[doc = "0 No WOP protection is configured for sector x."]
            pub const CONST_00: Self = Self::new(0);
            #[doc = "1 WOP protection is configured for sector x."]
            pub const CONST_11: Self = Self::new(1);
        }
    }
}
